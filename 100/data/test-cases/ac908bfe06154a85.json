{"uid":"ac908bfe06154a85","name":"positive_discount_for_unauthorized_customer_purchase_amount_50_to_3499rub_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_discount_for_unauthorized_customer_purchase_amount_50_to_3499rub_smoke","historyId":"24bb2201ad02feae4230ec2c85755ba8","time":{"start":1696468890083,"stop":1696468892588,"duration":2505},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=117.0.5938.149)\nStacktrace:\n#0 0x5585ba57e933 <unknown>\n#1 0x5585ba2586f7 <unknown>\n#2 0x5585ba2a5b9d <unknown>\n#3 0x5585ba2a3f3d <unknown>\n#4 0x5585ba2a1cf8 <unknown>\n#5 0x5585ba2a0d67 <unknown>\n#6 0x5585ba295a29 <unknown>\n#7 0x5585ba2c1602 <unknown>\n#8 0x5585ba295446 <unknown>\n#9 0x5585ba2c17ce <unknown>\n#10 0x5585ba2da857 <unknown>\n#11 0x5585ba2c13d3 <unknown>\n#12 0x5585ba293e64 <unknown>\n#13 0x5585ba294c4e <unknown>\n#14 0x5585ba544558 <unknown>\n#15 0x5585ba5484a0 <unknown>\n#16 0x5585ba55297c <unknown>\n#17 0x5585ba5490b8 <unknown>\n#18 0x5585ba514cdf <unknown>\n#19 0x5585ba56d048 <unknown>\n#20 0x5585ba56d219 <unknown>\n#21 0x5585ba57dac3 <unknown>\n#22 0x7f727c35c044 <unknown>","statusTrace":"self = <test_products_on_sale_page.TestProductsOnSalePage object at 0x7f69033c1650>\nlink = 'https://stroyrem-nn.ru/catalog/kisti-malyarnye'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f6902423350>\n\n    @allure.title(\"positive_discount_for_unauthorized_customer_purchase_amount_50_to_3499rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{KISTI_MALYARNYE_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{KISTI_MALYARNYE_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_discount_for_unauthorized_customer_purchase_amount_50_to_3499rub_smoke(\n            self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(50)\n        product_page_open.get_field_price_last().send_keys(3499)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:368: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:346: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f6902420ad0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x5585ba56d219 \\\\u003Cunknown>\\\\n#21 0x5585ba57dac3 \\\\u003Cunknown>\\\\n#22 0x7f727c35c044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: headless chrome=117.0.5938.149)\nE       Stacktrace:\nE       #0 0x5585ba57e933 <unknown>\nE       #1 0x5585ba2586f7 <unknown>\nE       #2 0x5585ba2a5b9d <unknown>\nE       #3 0x5585ba2a3f3d <unknown>\nE       #4 0x5585ba2a1cf8 <unknown>\nE       #5 0x5585ba2a0d67 <unknown>\nE       #6 0x5585ba295a29 <unknown>\nE       #7 0x5585ba2c1602 <unknown>\nE       #8 0x5585ba295446 <unknown>\nE       #9 0x5585ba2c17ce <unknown>\nE       #10 0x5585ba2da857 <unknown>\nE       #11 0x5585ba2c13d3 <unknown>\nE       #12 0x5585ba293e64 <unknown>\nE       #13 0x5585ba294c4e <unknown>\nE       #14 0x5585ba544558 <unknown>\nE       #15 0x5585ba5484a0 <unknown>\nE       #16 0x5585ba55297c <unknown>\nE       #17 0x5585ba5490b8 <unknown>\nE       #18 0x5585ba514cdf <unknown>\nE       #19 0x5585ba56d048 <unknown>\nE       #20 0x5585ba56d219 <unknown>\nE       #21 0x5585ba57dac3 <unknown>\nE       #22 0x7f727c35c044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1696467682864,"stop":1696467682951,"duration":87},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"clear_allure_results_folder","time":{"start":1696467682951,"stop":1696467682951,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver","time":{"start":1696468877320,"stop":1696468878123,"duration":803},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"product_page_open","time":{"start":1696468878124,"stop":1696468890082,"duration":11958},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup","time":{"start":1696468878124,"stop":1696468878124,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=117.0.5938.149)\nStacktrace:\n#0 0x5585ba57e933 <unknown>\n#1 0x5585ba2586f7 <unknown>\n#2 0x5585ba2a5b9d <unknown>\n#3 0x5585ba2a3f3d <unknown>\n#4 0x5585ba2a1cf8 <unknown>\n#5 0x5585ba2a0d67 <unknown>\n#6 0x5585ba295a29 <unknown>\n#7 0x5585ba2c1602 <unknown>\n#8 0x5585ba295446 <unknown>\n#9 0x5585ba2c17ce <unknown>\n#10 0x5585ba2da857 <unknown>\n#11 0x5585ba2c13d3 <unknown>\n#12 0x5585ba293e64 <unknown>\n#13 0x5585ba294c4e <unknown>\n#14 0x5585ba544558 <unknown>\n#15 0x5585ba5484a0 <unknown>\n#16 0x5585ba55297c <unknown>\n#17 0x5585ba5490b8 <unknown>\n#18 0x5585ba514cdf <unknown>\n#19 0x5585ba56d048 <unknown>\n#20 0x5585ba56d219 <unknown>\n#21 0x5585ba57dac3 <unknown>\n#22 0x7f727c35c044 <unknown>","statusTrace":"self = <test_products_on_sale_page.TestProductsOnSalePage object at 0x7f69033c1650>\nlink = 'https://stroyrem-nn.ru/catalog/kisti-malyarnye'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f6902423350>\n\n    @allure.title(\"positive_discount_for_unauthorized_customer_purchase_amount_50_to_3499rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{KISTI_MALYARNYE_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{KISTI_MALYARNYE_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_discount_for_unauthorized_customer_purchase_amount_50_to_3499rub_smoke(\n            self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(50)\n        product_page_open.get_field_price_last().send_keys(3499)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:368: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:346: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f6902420ad0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x5585ba56d219 \\\\u003Cunknown>\\\\n#21 0x5585ba57dac3 \\\\u003Cunknown>\\\\n#22 0x7f727c35c044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: headless chrome=117.0.5938.149)\nE       Stacktrace:\nE       #0 0x5585ba57e933 <unknown>\nE       #1 0x5585ba2586f7 <unknown>\nE       #2 0x5585ba2a5b9d <unknown>\nE       #3 0x5585ba2a3f3d <unknown>\nE       #4 0x5585ba2a1cf8 <unknown>\nE       #5 0x5585ba2a0d67 <unknown>\nE       #6 0x5585ba295a29 <unknown>\nE       #7 0x5585ba2c1602 <unknown>\nE       #8 0x5585ba295446 <unknown>\nE       #9 0x5585ba2c17ce <unknown>\nE       #10 0x5585ba2da857 <unknown>\nE       #11 0x5585ba2c13d3 <unknown>\nE       #12 0x5585ba293e64 <unknown>\nE       #13 0x5585ba294c4e <unknown>\nE       #14 0x5585ba544558 <unknown>\nE       #15 0x5585ba5484a0 <unknown>\nE       #16 0x5585ba55297c <unknown>\nE       #17 0x5585ba5490b8 <unknown>\nE       #18 0x5585ba514cdf <unknown>\nE       #19 0x5585ba56d048 <unknown>\nE       #20 0x5585ba56d219 <unknown>\nE       #21 0x5585ba57dac3 <unknown>\nE       #22 0x7f727c35c044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: ElementClickInterceptedException","steps":[{"name":"Проверяем видимость поля 'ЦЕНА от'","time":{"start":1696468890083,"stop":1696468890148,"duration":65},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем видимость поля 'ЦЕНА до'","time":{"start":1696468890269,"stop":1696468890330,"duration":61},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1696468891435,"stop":1696468891516,"duration":81},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[{"uid":"82e75dd65a7c289","name":"Screenshot","source":"82e75dd65a7c289.png","type":"image/png","size":143373},{"uid":"2802dd1d389796b6","name":"HTML source","source":"2802dd1d389796b6.html","type":"text/html","size":891648}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":2,"hasContent":true},"afterStages":[{"name":"driver::0","time":{"start":1696468892882,"stop":1696468892949,"duration":67},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup::0","time":{"start":1696468892882,"stop":1696468892882,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"4188a86181c1"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://stroyrem-nn.ru/catalog/kisti-malyarnye'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":34,"unknown":0,"total":36},"items":[{"uid":"dc997677f792fa69","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/99//#testresult/dc997677f792fa69","status":"passed","time":{"start":1696382338043,"stop":1696382348508,"duration":10465}},{"uid":"6d20ea8ef338463a","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/98//#testresult/6d20ea8ef338463a","status":"passed","time":{"start":1696295941388,"stop":1696295952256,"duration":10868}},{"uid":"fd612c9e6e80b845","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/97//#testresult/fd612c9e6e80b845","status":"passed","time":{"start":1696209495192,"stop":1696209505301,"duration":10109}},{"uid":"27be79528ff94c0d","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/96//#testresult/27be79528ff94c0d","status":"passed","time":{"start":1696123608395,"stop":1696123619213,"duration":10818}},{"uid":"db053095811f2012","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/95//#testresult/db053095811f2012","status":"passed","time":{"start":1696036446257,"stop":1696036455894,"duration":9637}},{"uid":"f111e44ff642ec7d","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/94//#testresult/f111e44ff642ec7d","status":"passed","time":{"start":1695950142802,"stop":1695950152604,"duration":9802}},{"uid":"f63eb40e7ca22a59","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/93//#testresult/f63eb40e7ca22a59","status":"passed","time":{"start":1695863735366,"stop":1695863745191,"duration":9825}},{"uid":"ef38c652bb7a8ff1","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/92//#testresult/ef38c652bb7a8ff1","status":"passed","time":{"start":1695777657725,"stop":1695777668413,"duration":10688}},{"uid":"482b2f5a98206476","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/91//#testresult/482b2f5a98206476","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=117.0.5938.92)\nStacktrace:\n#0 0x55796afa26b3 <unknown>\n#1 0x55796ac781e7 <unknown>\n#2 0x55796acc565d <unknown>\n#3 0x55796acc39fd <unknown>\n#4 0x55796acc17b8 <unknown>\n#5 0x55796acc0827 <unknown>\n#6 0x55796acb54f9 <unknown>\n#7 0x55796ace10c2 <unknown>\n#8 0x55796acb4f16 <unknown>\n#9 0x55796ace128e <unknown>\n#10 0x55796acfa322 <unknown>\n#11 0x55796ace0e93 <unknown>\n#12 0x55796acb3934 <unknown>\n#13 0x55796acb471e <unknown>\n#14 0x55796af67cb8 <unknown>\n#15 0x55796af6bbf0 <unknown>\n#16 0x55796af7619c <unknown>\n#17 0x55796af6c808 <unknown>\n#18 0x55796af3927f <unknown>\n#19 0x55796af90e88 <unknown>\n#20 0x55796af91059 <unknown>\n#21 0x55796afa1843 <unknown>\n#22 0x7f7a5fbb8044 <unknown>","time":{"start":1695691201866,"stop":1695691204293,"duration":2427}},{"uid":"17665d3ff74c71a7","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/90//#testresult/17665d3ff74c71a7","status":"passed","time":{"start":1695604571125,"stop":1695604580859,"duration":9734}},{"uid":"39fdcf30477f5ed9","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/89//#testresult/39fdcf30477f5ed9","status":"passed","time":{"start":1695518449007,"stop":1695518459823,"duration":10816}},{"uid":"5ffa7eb2f4bff22d","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/88//#testresult/5ffa7eb2f4bff22d","status":"passed","time":{"start":1695431834957,"stop":1695431845798,"duration":10841}},{"uid":"fabed3baa2823eaf","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/87//#testresult/fabed3baa2823eaf","status":"passed","time":{"start":1695345321526,"stop":1695345330991,"duration":9465}},{"uid":"3718290d6e4dd754","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/86//#testresult/3718290d6e4dd754","status":"passed","time":{"start":1695258888321,"stop":1695258897761,"duration":9440}},{"uid":"b338b07d8dc06599","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/85//#testresult/b338b07d8dc06599","status":"passed","time":{"start":1695172845710,"stop":1695172856620,"duration":10910}},{"uid":"448cbd7c1affca37","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/84//#testresult/448cbd7c1affca37","status":"passed","time":{"start":1695086275753,"stop":1695086285181,"duration":9428}},{"uid":"43186bad0cdc8a9f","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/83//#testresult/43186bad0cdc8a9f","status":"passed","time":{"start":1694999953066,"stop":1694999963851,"duration":10785}},{"uid":"edfd60cd14ef36c7","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/82//#testresult/edfd60cd14ef36c7","status":"passed","time":{"start":1694913515163,"stop":1694913525209,"duration":10046}},{"uid":"a907f4c2e1e01c8d","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/81//#testresult/a907f4c2e1e01c8d","status":"passed","time":{"start":1694827015871,"stop":1694827026736,"duration":10865}},{"uid":"c8d175b52b6228df","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/80//#testresult/c8d175b52b6228df","status":"passed","time":{"start":1694740561212,"stop":1694740571333,"duration":10121}}]},"tags":["smoke_test"]},"source":"ac908bfe06154a85.json","parameterValues":["'https://stroyrem-nn.ru/catalog/kisti-malyarnye'"]}