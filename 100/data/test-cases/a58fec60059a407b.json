{"uid":"a58fec60059a407b","name":"positive_discount_for_unauthorized_customer_purchase_amount_10000_to_14999rub_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_discount_for_unauthorized_customer_purchase_amount_10000_to_14999rub_smoke","historyId":"f1cd0408694619a248c788cf181ce9dc","time":{"start":1696468747085,"stop":1696468749508,"duration":2423},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=117.0.5938.149)\nStacktrace:\n#0 0x5581c400a933 <unknown>\n#1 0x5581c3ce46f7 <unknown>\n#2 0x5581c3d31b9d <unknown>\n#3 0x5581c3d2ff3d <unknown>\n#4 0x5581c3d2dcf8 <unknown>\n#5 0x5581c3d2cd67 <unknown>\n#6 0x5581c3d21a29 <unknown>\n#7 0x5581c3d4d602 <unknown>\n#8 0x5581c3d21446 <unknown>\n#9 0x5581c3d4d7ce <unknown>\n#10 0x5581c3d66857 <unknown>\n#11 0x5581c3d4d3d3 <unknown>\n#12 0x5581c3d1fe64 <unknown>\n#13 0x5581c3d20c4e <unknown>\n#14 0x5581c3fd0558 <unknown>\n#15 0x5581c3fd44a0 <unknown>\n#16 0x5581c3fde97c <unknown>\n#17 0x5581c3fd50b8 <unknown>\n#18 0x5581c3fa0cdf <unknown>\n#19 0x5581c3ff9048 <unknown>\n#20 0x5581c3ff9219 <unknown>\n#21 0x5581c4009ac3 <unknown>\n#22 0x7fb40b521044 <unknown>","statusTrace":"self = <test_products_on_sale_page.TestProductsOnSalePage object at 0x7f69032eaed0>\nlink = 'https://stroyrem-nn.ru/catalog/shtukaturno-otdelochnyj-instrument'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f690236df50>\n\n    @allure.title(\"positive_discount_for_unauthorized_customer_purchase_amount_10000_to_14999rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHTUKATURNO_OTDELOCHNYJ_INSTRUMENT_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHTUKATURNO_OTDELOCHNYJ_INSTRUMENT_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_discount_for_unauthorized_customer_purchase_amount_10000_to_14999rub_smoke(\n            self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(10000)\n        product_page_open.get_field_price_last().send_keys(14999)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:280: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:346: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f690238bb50>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x5581c3ff9219 \\\\u003Cunknown>\\\\n#21 0x5581c4009ac3 \\\\u003Cunknown>\\\\n#22 0x7fb40b521044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: headless chrome=117.0.5938.149)\nE       Stacktrace:\nE       #0 0x5581c400a933 <unknown>\nE       #1 0x5581c3ce46f7 <unknown>\nE       #2 0x5581c3d31b9d <unknown>\nE       #3 0x5581c3d2ff3d <unknown>\nE       #4 0x5581c3d2dcf8 <unknown>\nE       #5 0x5581c3d2cd67 <unknown>\nE       #6 0x5581c3d21a29 <unknown>\nE       #7 0x5581c3d4d602 <unknown>\nE       #8 0x5581c3d21446 <unknown>\nE       #9 0x5581c3d4d7ce <unknown>\nE       #10 0x5581c3d66857 <unknown>\nE       #11 0x5581c3d4d3d3 <unknown>\nE       #12 0x5581c3d1fe64 <unknown>\nE       #13 0x5581c3d20c4e <unknown>\nE       #14 0x5581c3fd0558 <unknown>\nE       #15 0x5581c3fd44a0 <unknown>\nE       #16 0x5581c3fde97c <unknown>\nE       #17 0x5581c3fd50b8 <unknown>\nE       #18 0x5581c3fa0cdf <unknown>\nE       #19 0x5581c3ff9048 <unknown>\nE       #20 0x5581c3ff9219 <unknown>\nE       #21 0x5581c4009ac3 <unknown>\nE       #22 0x7fb40b521044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1696467682864,"stop":1696467682951,"duration":87},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"clear_allure_results_folder","time":{"start":1696467682951,"stop":1696467682951,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver","time":{"start":1696468732313,"stop":1696468733131,"duration":818},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup","time":{"start":1696468733131,"stop":1696468733132,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"product_page_open","time":{"start":1696468733132,"stop":1696468747084,"duration":13952},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=117.0.5938.149)\nStacktrace:\n#0 0x5581c400a933 <unknown>\n#1 0x5581c3ce46f7 <unknown>\n#2 0x5581c3d31b9d <unknown>\n#3 0x5581c3d2ff3d <unknown>\n#4 0x5581c3d2dcf8 <unknown>\n#5 0x5581c3d2cd67 <unknown>\n#6 0x5581c3d21a29 <unknown>\n#7 0x5581c3d4d602 <unknown>\n#8 0x5581c3d21446 <unknown>\n#9 0x5581c3d4d7ce <unknown>\n#10 0x5581c3d66857 <unknown>\n#11 0x5581c3d4d3d3 <unknown>\n#12 0x5581c3d1fe64 <unknown>\n#13 0x5581c3d20c4e <unknown>\n#14 0x5581c3fd0558 <unknown>\n#15 0x5581c3fd44a0 <unknown>\n#16 0x5581c3fde97c <unknown>\n#17 0x5581c3fd50b8 <unknown>\n#18 0x5581c3fa0cdf <unknown>\n#19 0x5581c3ff9048 <unknown>\n#20 0x5581c3ff9219 <unknown>\n#21 0x5581c4009ac3 <unknown>\n#22 0x7fb40b521044 <unknown>","statusTrace":"self = <test_products_on_sale_page.TestProductsOnSalePage object at 0x7f69032eaed0>\nlink = 'https://stroyrem-nn.ru/catalog/shtukaturno-otdelochnyj-instrument'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f690236df50>\n\n    @allure.title(\"positive_discount_for_unauthorized_customer_purchase_amount_10000_to_14999rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHTUKATURNO_OTDELOCHNYJ_INSTRUMENT_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHTUKATURNO_OTDELOCHNYJ_INSTRUMENT_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_discount_for_unauthorized_customer_purchase_amount_10000_to_14999rub_smoke(\n            self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(10000)\n        product_page_open.get_field_price_last().send_keys(14999)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:280: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:346: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f690238bb50>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x5581c3ff9219 \\\\u003Cunknown>\\\\n#21 0x5581c4009ac3 \\\\u003Cunknown>\\\\n#22 0x7fb40b521044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: headless chrome=117.0.5938.149)\nE       Stacktrace:\nE       #0 0x5581c400a933 <unknown>\nE       #1 0x5581c3ce46f7 <unknown>\nE       #2 0x5581c3d31b9d <unknown>\nE       #3 0x5581c3d2ff3d <unknown>\nE       #4 0x5581c3d2dcf8 <unknown>\nE       #5 0x5581c3d2cd67 <unknown>\nE       #6 0x5581c3d21a29 <unknown>\nE       #7 0x5581c3d4d602 <unknown>\nE       #8 0x5581c3d21446 <unknown>\nE       #9 0x5581c3d4d7ce <unknown>\nE       #10 0x5581c3d66857 <unknown>\nE       #11 0x5581c3d4d3d3 <unknown>\nE       #12 0x5581c3d1fe64 <unknown>\nE       #13 0x5581c3d20c4e <unknown>\nE       #14 0x5581c3fd0558 <unknown>\nE       #15 0x5581c3fd44a0 <unknown>\nE       #16 0x5581c3fde97c <unknown>\nE       #17 0x5581c3fd50b8 <unknown>\nE       #18 0x5581c3fa0cdf <unknown>\nE       #19 0x5581c3ff9048 <unknown>\nE       #20 0x5581c3ff9219 <unknown>\nE       #21 0x5581c4009ac3 <unknown>\nE       #22 0x7fb40b521044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: ElementClickInterceptedException","steps":[{"name":"Проверяем видимость поля 'ЦЕНА от'","time":{"start":1696468747085,"stop":1696468747147,"duration":62},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем видимость поля 'ЦЕНА до'","time":{"start":1696468747266,"stop":1696468747320,"duration":54},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1696468748387,"stop":1696468748454,"duration":67},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[{"uid":"179d1da379a96d02","name":"Screenshot","source":"179d1da379a96d02.png","type":"image/png","size":135589},{"uid":"c6ad048ed0e52053","name":"HTML source","source":"c6ad048ed0e52053.html","type":"text/html","size":869669}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":2,"hasContent":true},"afterStages":[{"name":"setup::0","time":{"start":1696468749765,"stop":1696468749765,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver::0","time":{"start":1696468749766,"stop":1696468749832,"duration":66},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"4188a86181c1"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://stroyrem-nn.ru/catalog/shtukaturno-otdelochnyj-instrument'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":35,"unknown":0,"total":36},"items":[{"uid":"eafa20d00457d72b","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/99//#testresult/eafa20d00457d72b","status":"passed","time":{"start":1696382197218,"stop":1696382207746,"duration":10528}},{"uid":"660fa5be4fb9bbb2","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/98//#testresult/660fa5be4fb9bbb2","status":"passed","time":{"start":1696295797640,"stop":1696295808174,"duration":10534}},{"uid":"523ab8e7dc6669e1","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/97//#testresult/523ab8e7dc6669e1","status":"passed","time":{"start":1696209355222,"stop":1696209365297,"duration":10075}},{"uid":"59041a3b90e5ad6f","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/96//#testresult/59041a3b90e5ad6f","status":"passed","time":{"start":1696123456783,"stop":1696123467987,"duration":11204}},{"uid":"aa9b30e47f5d266a","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/95//#testresult/aa9b30e47f5d266a","status":"passed","time":{"start":1696036314128,"stop":1696036323758,"duration":9630}},{"uid":"9a85db7fae6a1786","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/94//#testresult/9a85db7fae6a1786","status":"passed","time":{"start":1695950009804,"stop":1695950019450,"duration":9646}},{"uid":"773cf06813915626","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/93//#testresult/773cf06813915626","status":"passed","time":{"start":1695863601404,"stop":1695863611224,"duration":9820}},{"uid":"eec3991c142d0969","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/92//#testresult/eec3991c142d0969","status":"passed","time":{"start":1695777513338,"stop":1695777524416,"duration":11078}},{"uid":"63379220751434ff","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/91//#testresult/63379220751434ff","status":"passed","time":{"start":1695691101120,"stop":1695691114505,"duration":13385}},{"uid":"5ed718f67dbb900f","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/90//#testresult/5ed718f67dbb900f","status":"passed","time":{"start":1695604438271,"stop":1695604447769,"duration":9498}},{"uid":"3ecedef98e248206","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/89//#testresult/3ecedef98e248206","status":"passed","time":{"start":1695518303826,"stop":1695518314177,"duration":10351}},{"uid":"2d1eb19680ddd412","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/88//#testresult/2d1eb19680ddd412","status":"passed","time":{"start":1695431682921,"stop":1695431693805,"duration":10884}},{"uid":"a9e04f7b37bbad33","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/87//#testresult/a9e04f7b37bbad33","status":"passed","time":{"start":1695345188479,"stop":1695345198433,"duration":9954}},{"uid":"6306c7578e91997d","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/86//#testresult/6306c7578e91997d","status":"passed","time":{"start":1695258751192,"stop":1695258760618,"duration":9426}},{"uid":"dd53292c538256cd","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/85//#testresult/dd53292c538256cd","status":"passed","time":{"start":1695172694252,"stop":1695172705176,"duration":10924}},{"uid":"ba3690a84c1fff97","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/84//#testresult/ba3690a84c1fff97","status":"passed","time":{"start":1695086142024,"stop":1695086151459,"duration":9435}},{"uid":"d7fbc116991750a","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/83//#testresult/d7fbc116991750a","status":"passed","time":{"start":1694999800398,"stop":1694999811285,"duration":10887}},{"uid":"e141cc53c6b2c3e6","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/82//#testresult/e141cc53c6b2c3e6","status":"passed","time":{"start":1694913380626,"stop":1694913390431,"duration":9805}},{"uid":"5e52a1e28fbc50d","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/81//#testresult/5e52a1e28fbc50d","status":"passed","time":{"start":1694826865392,"stop":1694826876185,"duration":10793}},{"uid":"a53302daa6534e09","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/80//#testresult/a53302daa6534e09","status":"passed","time":{"start":1694740425960,"stop":1694740435729,"duration":9769}}]},"tags":["smoke_test"]},"source":"a58fec60059a407b.json","parameterValues":["'https://stroyrem-nn.ru/catalog/shtukaturno-otdelochnyj-instrument'"]}