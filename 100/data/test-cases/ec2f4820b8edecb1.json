{"uid":"ec2f4820b8edecb1","name":"positive_check_there_is_no_discount_for_unauthorized_customer_red_prices_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_check_there_is_no_discount_for_unauthorized_customer_red_prices_smoke","historyId":"ae0b03f524f3687047fb70a412376bdb","time":{"start":1696468711678,"stop":1696468715013,"duration":3335},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <label for=\"discounted_products\" class=\"text-red\">...</label> is not clickable at point (265, 18). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=117.0.5938.149)\nStacktrace:\n#0 0x55f6aff7d933 <unknown>\n#1 0x55f6afc576f7 <unknown>\n#2 0x55f6afca4b9d <unknown>\n#3 0x55f6afca2f3d <unknown>\n#4 0x55f6afca0cf8 <unknown>\n#5 0x55f6afc9fd67 <unknown>\n#6 0x55f6afc94a29 <unknown>\n#7 0x55f6afcc0602 <unknown>\n#8 0x55f6afc94446 <unknown>\n#9 0x55f6afcc07ce <unknown>\n#10 0x55f6afcd9857 <unknown>\n#11 0x55f6afcc03d3 <unknown>\n#12 0x55f6afc92e64 <unknown>\n#13 0x55f6afc93c4e <unknown>\n#14 0x55f6aff43558 <unknown>\n#15 0x55f6aff474a0 <unknown>\n#16 0x55f6aff5197c <unknown>\n#17 0x55f6aff480b8 <unknown>\n#18 0x55f6aff13cdf <unknown>\n#19 0x55f6aff6c048 <unknown>\n#20 0x55f6aff6c219 <unknown>\n#21 0x55f6aff7cac3 <unknown>\n#22 0x7f39688b9044 <unknown>","statusTrace":"self = <test_products_on_sale_page.TestProductsOnSalePage object at 0x7f69032ea3d0>\nlink = 'https://stroyrem-nn.ru/catalog/action'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f690327d890>\n\n    @allure.title(\"positive_check_there_is_no_discount_for_unauthorized_customer_red_prices_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{ACTION_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{ACTION_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_there_is_no_discount_for_unauthorized_customer_red_prices_smoke(\n            self, link, product_page_open):\n        product_page_open.get_in_stock_products_link().click()\n        time.sleep(2)\n>       product_page_open.get_text_red_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:260: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:346: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f6904202b10>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55f6aff6c219 \\\\u003Cunknown>\\\\n#21 0x55f6aff7cac3 \\\\u003Cunknown>\\\\n#22 0x7f39688b9044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <label for=\"discounted_products\" class=\"text-red\">...</label> is not clickable at point (265, 18). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: headless chrome=117.0.5938.149)\nE       Stacktrace:\nE       #0 0x55f6aff7d933 <unknown>\nE       #1 0x55f6afc576f7 <unknown>\nE       #2 0x55f6afca4b9d <unknown>\nE       #3 0x55f6afca2f3d <unknown>\nE       #4 0x55f6afca0cf8 <unknown>\nE       #5 0x55f6afc9fd67 <unknown>\nE       #6 0x55f6afc94a29 <unknown>\nE       #7 0x55f6afcc0602 <unknown>\nE       #8 0x55f6afc94446 <unknown>\nE       #9 0x55f6afcc07ce <unknown>\nE       #10 0x55f6afcd9857 <unknown>\nE       #11 0x55f6afcc03d3 <unknown>\nE       #12 0x55f6afc92e64 <unknown>\nE       #13 0x55f6afc93c4e <unknown>\nE       #14 0x55f6aff43558 <unknown>\nE       #15 0x55f6aff474a0 <unknown>\nE       #16 0x55f6aff5197c <unknown>\nE       #17 0x55f6aff480b8 <unknown>\nE       #18 0x55f6aff13cdf <unknown>\nE       #19 0x55f6aff6c048 <unknown>\nE       #20 0x55f6aff6c219 <unknown>\nE       #21 0x55f6aff7cac3 <unknown>\nE       #22 0x7f39688b9044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1696467682864,"stop":1696467682951,"duration":87},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"clear_allure_results_folder","time":{"start":1696467682951,"stop":1696467682951,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver","time":{"start":1696468697877,"stop":1696468698719,"duration":842},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"product_page_open","time":{"start":1696468698719,"stop":1696468711677,"duration":12958},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup","time":{"start":1696468698719,"stop":1696468698719,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <label for=\"discounted_products\" class=\"text-red\">...</label> is not clickable at point (265, 18). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=117.0.5938.149)\nStacktrace:\n#0 0x55f6aff7d933 <unknown>\n#1 0x55f6afc576f7 <unknown>\n#2 0x55f6afca4b9d <unknown>\n#3 0x55f6afca2f3d <unknown>\n#4 0x55f6afca0cf8 <unknown>\n#5 0x55f6afc9fd67 <unknown>\n#6 0x55f6afc94a29 <unknown>\n#7 0x55f6afcc0602 <unknown>\n#8 0x55f6afc94446 <unknown>\n#9 0x55f6afcc07ce <unknown>\n#10 0x55f6afcd9857 <unknown>\n#11 0x55f6afcc03d3 <unknown>\n#12 0x55f6afc92e64 <unknown>\n#13 0x55f6afc93c4e <unknown>\n#14 0x55f6aff43558 <unknown>\n#15 0x55f6aff474a0 <unknown>\n#16 0x55f6aff5197c <unknown>\n#17 0x55f6aff480b8 <unknown>\n#18 0x55f6aff13cdf <unknown>\n#19 0x55f6aff6c048 <unknown>\n#20 0x55f6aff6c219 <unknown>\n#21 0x55f6aff7cac3 <unknown>\n#22 0x7f39688b9044 <unknown>","statusTrace":"self = <test_products_on_sale_page.TestProductsOnSalePage object at 0x7f69032ea3d0>\nlink = 'https://stroyrem-nn.ru/catalog/action'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f690327d890>\n\n    @allure.title(\"positive_check_there_is_no_discount_for_unauthorized_customer_red_prices_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{ACTION_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{ACTION_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_there_is_no_discount_for_unauthorized_customer_red_prices_smoke(\n            self, link, product_page_open):\n        product_page_open.get_in_stock_products_link().click()\n        time.sleep(2)\n>       product_page_open.get_text_red_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:260: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:346: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f6904202b10>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55f6aff6c219 \\\\u003Cunknown>\\\\n#21 0x55f6aff7cac3 \\\\u003Cunknown>\\\\n#22 0x7f39688b9044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <label for=\"discounted_products\" class=\"text-red\">...</label> is not clickable at point (265, 18). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: headless chrome=117.0.5938.149)\nE       Stacktrace:\nE       #0 0x55f6aff7d933 <unknown>\nE       #1 0x55f6afc576f7 <unknown>\nE       #2 0x55f6afca4b9d <unknown>\nE       #3 0x55f6afca2f3d <unknown>\nE       #4 0x55f6afca0cf8 <unknown>\nE       #5 0x55f6afc9fd67 <unknown>\nE       #6 0x55f6afc94a29 <unknown>\nE       #7 0x55f6afcc0602 <unknown>\nE       #8 0x55f6afc94446 <unknown>\nE       #9 0x55f6afcc07ce <unknown>\nE       #10 0x55f6afcd9857 <unknown>\nE       #11 0x55f6afcc03d3 <unknown>\nE       #12 0x55f6afc92e64 <unknown>\nE       #13 0x55f6afc93c4e <unknown>\nE       #14 0x55f6aff43558 <unknown>\nE       #15 0x55f6aff474a0 <unknown>\nE       #16 0x55f6aff5197c <unknown>\nE       #17 0x55f6aff480b8 <unknown>\nE       #18 0x55f6aff13cdf <unknown>\nE       #19 0x55f6aff6c048 <unknown>\nE       #20 0x55f6aff6c219 <unknown>\nE       #21 0x55f6aff7cac3 <unknown>\nE       #22 0x7f39688b9044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: ElementClickInterceptedException","steps":[{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1696468711678,"stop":1696468711782,"duration":104},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем кликабельность кнопки 'Красная цена!'","time":{"start":1696468713889,"stop":1696468713955,"duration":66},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[{"uid":"d0a751153bf7743","name":"Screenshot","source":"d0a751153bf7743.png","type":"image/png","size":187846},{"uid":"90b6714367741ce3","name":"HTML source","source":"90b6714367741ce3.html","type":"text/html","size":797056}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":2,"hasContent":true},"afterStages":[{"name":"setup::0","time":{"start":1696468715289,"stop":1696468715289,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver::0","time":{"start":1696468715289,"stop":1696468715360,"duration":71},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"4188a86181c1"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://stroyrem-nn.ru/catalog/action'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":35,"unknown":0,"total":36},"items":[{"uid":"783d7945c33c6e24","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/99//#testresult/783d7945c33c6e24","status":"passed","time":{"start":1696382163754,"stop":1696382171986,"duration":8232}},{"uid":"677cc7fe1edcc17e","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/98//#testresult/677cc7fe1edcc17e","status":"passed","time":{"start":1696295763184,"stop":1696295771640,"duration":8456}},{"uid":"54d6407f479beb59","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/97//#testresult/54d6407f479beb59","status":"passed","time":{"start":1696209320964,"stop":1696209329675,"duration":8711}},{"uid":"21df779d7fcaee60","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/96//#testresult/21df779d7fcaee60","status":"passed","time":{"start":1696123420096,"stop":1696123429068,"duration":8972}},{"uid":"b4554b6de670b902","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/95//#testresult/b4554b6de670b902","status":"passed","time":{"start":1696036282154,"stop":1696036289823,"duration":7669}},{"uid":"b7a5cbf9773fe892","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/94//#testresult/b7a5cbf9773fe892","status":"passed","time":{"start":1695949977572,"stop":1695949985169,"duration":7597}},{"uid":"cfe7a451973bceb8","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/93//#testresult/cfe7a451973bceb8","status":"passed","time":{"start":1695863569075,"stop":1695863576933,"duration":7858}},{"uid":"e27f3cf96988ffaf","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/92//#testresult/e27f3cf96988ffaf","status":"passed","time":{"start":1695777477850,"stop":1695777486652,"duration":8802}},{"uid":"9d1be4e533109a78","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/91//#testresult/9d1be4e533109a78","status":"passed","time":{"start":1695691059897,"stop":1695691070643,"duration":10746}},{"uid":"dba19bea41b7690a","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/90//#testresult/dba19bea41b7690a","status":"passed","time":{"start":1695604405879,"stop":1695604413486,"duration":7607}},{"uid":"d4a0b84b654a9041","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/89//#testresult/d4a0b84b654a9041","status":"passed","time":{"start":1695518267688,"stop":1695518276079,"duration":8391}},{"uid":"28d38e76f9143bd7","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/88//#testresult/28d38e76f9143bd7","status":"passed","time":{"start":1695431645646,"stop":1695431654511,"duration":8865}},{"uid":"3a21fc74bd27dc91","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/87//#testresult/3a21fc74bd27dc91","status":"passed","time":{"start":1695345156269,"stop":1695345163815,"duration":7546}},{"uid":"80baccac0a7f9975","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/86//#testresult/80baccac0a7f9975","status":"passed","time":{"start":1695258719113,"stop":1695258726671,"duration":7558}},{"uid":"d8c312b068951c6f","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/85//#testresult/d8c312b068951c6f","status":"passed","time":{"start":1695172656882,"stop":1695172665937,"duration":9055}},{"uid":"d694570bdd8f0379","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/84//#testresult/d694570bdd8f0379","status":"passed","time":{"start":1695086110048,"stop":1695086117658,"duration":7610}},{"uid":"e5be937474e2a6fa","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/83//#testresult/e5be937474e2a6fa","status":"passed","time":{"start":1694999762746,"stop":1694999771805,"duration":9059}},{"uid":"648f5dc561c980f","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/82//#testresult/648f5dc561c980f","status":"passed","time":{"start":1694913347513,"stop":1694913355215,"duration":7702}},{"uid":"be4b899abd15fab4","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/81//#testresult/be4b899abd15fab4","status":"passed","time":{"start":1694826828478,"stop":1694826837288,"duration":8810}},{"uid":"2b81465a7c618e71","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/80//#testresult/2b81465a7c618e71","status":"passed","time":{"start":1694740393464,"stop":1694740401131,"duration":7667}}]},"tags":["smoke_test"]},"source":"ec2f4820b8edecb1.json","parameterValues":["'https://stroyrem-nn.ru/catalog/action'"]}