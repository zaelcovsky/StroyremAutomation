{"uid":"d00cb4fedfe698c0","name":"positive_discount_for_unauthorized_customer_purchase_amount_3500_to_4999rub_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_discount_for_unauthorized_customer_purchase_amount_3500_to_4999rub_smoke","historyId":"20a229ea56dbfac299ce8155fae6537d","time":{"start":1696468821668,"stop":1696468824092,"duration":2424},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=117.0.5938.149)\nStacktrace:\n#0 0x559c7a183933 <unknown>\n#1 0x559c79e5d6f7 <unknown>\n#2 0x559c79eaab9d <unknown>\n#3 0x559c79ea8f3d <unknown>\n#4 0x559c79ea6cf8 <unknown>\n#5 0x559c79ea5d67 <unknown>\n#6 0x559c79e9aa29 <unknown>\n#7 0x559c79ec6602 <unknown>\n#8 0x559c79e9a446 <unknown>\n#9 0x559c79ec67ce <unknown>\n#10 0x559c79edf857 <unknown>\n#11 0x559c79ec63d3 <unknown>\n#12 0x559c79e98e64 <unknown>\n#13 0x559c79e99c4e <unknown>\n#14 0x559c7a149558 <unknown>\n#15 0x559c7a14d4a0 <unknown>\n#16 0x559c7a15797c <unknown>\n#17 0x559c7a14e0b8 <unknown>\n#18 0x559c7a119cdf <unknown>\n#19 0x559c7a172048 <unknown>\n#20 0x559c7a172219 <unknown>\n#21 0x559c7a182ac3 <unknown>\n#22 0x7f8f6b2bf044 <unknown>","statusTrace":"self = <test_products_on_sale_page.TestProductsOnSalePage object at 0x7f69032e8650>\nlink = 'https://stroyrem-nn.ru/catalog/shlifovalnye-mashiny'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f69023f6f50>\n\n    @allure.title(\"positive_discount_for_unauthorized_customer_purchase_amount_3500_to_4999rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHLIFOVALNYE_MASHINY_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHLIFOVALNYE_MASHINY_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_discount_for_unauthorized_customer_purchase_amount_3500_to_4999rub_smoke(\n            self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(3500)\n        product_page_open.get_field_price_last().send_keys(4999)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:323: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:346: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f69041981d0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x559c7a172219 \\\\u003Cunknown>\\\\n#21 0x559c7a182ac3 \\\\u003Cunknown>\\\\n#22 0x7f8f6b2bf044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: headless chrome=117.0.5938.149)\nE       Stacktrace:\nE       #0 0x559c7a183933 <unknown>\nE       #1 0x559c79e5d6f7 <unknown>\nE       #2 0x559c79eaab9d <unknown>\nE       #3 0x559c79ea8f3d <unknown>\nE       #4 0x559c79ea6cf8 <unknown>\nE       #5 0x559c79ea5d67 <unknown>\nE       #6 0x559c79e9aa29 <unknown>\nE       #7 0x559c79ec6602 <unknown>\nE       #8 0x559c79e9a446 <unknown>\nE       #9 0x559c79ec67ce <unknown>\nE       #10 0x559c79edf857 <unknown>\nE       #11 0x559c79ec63d3 <unknown>\nE       #12 0x559c79e98e64 <unknown>\nE       #13 0x559c79e99c4e <unknown>\nE       #14 0x559c7a149558 <unknown>\nE       #15 0x559c7a14d4a0 <unknown>\nE       #16 0x559c7a15797c <unknown>\nE       #17 0x559c7a14e0b8 <unknown>\nE       #18 0x559c7a119cdf <unknown>\nE       #19 0x559c7a172048 <unknown>\nE       #20 0x559c7a172219 <unknown>\nE       #21 0x559c7a182ac3 <unknown>\nE       #22 0x7f8f6b2bf044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1696467682864,"stop":1696467682951,"duration":87},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"clear_allure_results_folder","time":{"start":1696467682951,"stop":1696467682951,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver","time":{"start":1696468808226,"stop":1696468809041,"duration":815},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup","time":{"start":1696468809041,"stop":1696468809041,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"product_page_open","time":{"start":1696468809041,"stop":1696468821667,"duration":12626},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=117.0.5938.149)\nStacktrace:\n#0 0x559c7a183933 <unknown>\n#1 0x559c79e5d6f7 <unknown>\n#2 0x559c79eaab9d <unknown>\n#3 0x559c79ea8f3d <unknown>\n#4 0x559c79ea6cf8 <unknown>\n#5 0x559c79ea5d67 <unknown>\n#6 0x559c79e9aa29 <unknown>\n#7 0x559c79ec6602 <unknown>\n#8 0x559c79e9a446 <unknown>\n#9 0x559c79ec67ce <unknown>\n#10 0x559c79edf857 <unknown>\n#11 0x559c79ec63d3 <unknown>\n#12 0x559c79e98e64 <unknown>\n#13 0x559c79e99c4e <unknown>\n#14 0x559c7a149558 <unknown>\n#15 0x559c7a14d4a0 <unknown>\n#16 0x559c7a15797c <unknown>\n#17 0x559c7a14e0b8 <unknown>\n#18 0x559c7a119cdf <unknown>\n#19 0x559c7a172048 <unknown>\n#20 0x559c7a172219 <unknown>\n#21 0x559c7a182ac3 <unknown>\n#22 0x7f8f6b2bf044 <unknown>","statusTrace":"self = <test_products_on_sale_page.TestProductsOnSalePage object at 0x7f69032e8650>\nlink = 'https://stroyrem-nn.ru/catalog/shlifovalnye-mashiny'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f69023f6f50>\n\n    @allure.title(\"positive_discount_for_unauthorized_customer_purchase_amount_3500_to_4999rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHLIFOVALNYE_MASHINY_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHLIFOVALNYE_MASHINY_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_discount_for_unauthorized_customer_purchase_amount_3500_to_4999rub_smoke(\n            self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(3500)\n        product_page_open.get_field_price_last().send_keys(4999)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:323: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:346: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f69041981d0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x559c7a172219 \\\\u003Cunknown>\\\\n#21 0x559c7a182ac3 \\\\u003Cunknown>\\\\n#22 0x7f8f6b2bf044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: headless chrome=117.0.5938.149)\nE       Stacktrace:\nE       #0 0x559c7a183933 <unknown>\nE       #1 0x559c79e5d6f7 <unknown>\nE       #2 0x559c79eaab9d <unknown>\nE       #3 0x559c79ea8f3d <unknown>\nE       #4 0x559c79ea6cf8 <unknown>\nE       #5 0x559c79ea5d67 <unknown>\nE       #6 0x559c79e9aa29 <unknown>\nE       #7 0x559c79ec6602 <unknown>\nE       #8 0x559c79e9a446 <unknown>\nE       #9 0x559c79ec67ce <unknown>\nE       #10 0x559c79edf857 <unknown>\nE       #11 0x559c79ec63d3 <unknown>\nE       #12 0x559c79e98e64 <unknown>\nE       #13 0x559c79e99c4e <unknown>\nE       #14 0x559c7a149558 <unknown>\nE       #15 0x559c7a14d4a0 <unknown>\nE       #16 0x559c7a15797c <unknown>\nE       #17 0x559c7a14e0b8 <unknown>\nE       #18 0x559c7a119cdf <unknown>\nE       #19 0x559c7a172048 <unknown>\nE       #20 0x559c7a172219 <unknown>\nE       #21 0x559c7a182ac3 <unknown>\nE       #22 0x7f8f6b2bf044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: ElementClickInterceptedException","steps":[{"name":"Проверяем видимость поля 'ЦЕНА от'","time":{"start":1696468821668,"stop":1696468821727,"duration":59},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем видимость поля 'ЦЕНА до'","time":{"start":1696468821821,"stop":1696468821873,"duration":52},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1696468822938,"stop":1696468823006,"duration":68},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[{"uid":"e1e0d56859f9e620","name":"Screenshot","source":"e1e0d56859f9e620.png","type":"image/png","size":72081},{"uid":"68d16d7daea5062c","name":"HTML source","source":"68d16d7daea5062c.html","type":"text/html","size":664384}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":2,"hasContent":true},"afterStages":[{"name":"setup::0","time":{"start":1696468824325,"stop":1696468824325,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver::0","time":{"start":1696468824326,"stop":1696468824395,"duration":69},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"4188a86181c1"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://stroyrem-nn.ru/catalog/shlifovalnye-mashiny'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":34,"unknown":0,"total":36},"items":[{"uid":"11121d6812de041d","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/99//#testresult/11121d6812de041d","status":"passed","time":{"start":1696382265407,"stop":1696382275593,"duration":10186}},{"uid":"aa6fde5f5718b910","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/98//#testresult/aa6fde5f5718b910","status":"passed","time":{"start":1696295867279,"stop":1696295877722,"duration":10443}},{"uid":"b15d5c901ff47aef","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/97//#testresult/b15d5c901ff47aef","status":"passed","time":{"start":1696209422650,"stop":1696209432767,"duration":10117}},{"uid":"4fbe86393081a116","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/96//#testresult/4fbe86393081a116","status":"passed","time":{"start":1696123529343,"stop":1696123540304,"duration":10961}},{"uid":"4c8929c63fe164f3","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/95//#testresult/4c8929c63fe164f3","status":"passed","time":{"start":1696036378102,"stop":1696036387737,"duration":9635}},{"uid":"649266ddd0ead4e1","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/94//#testresult/649266ddd0ead4e1","status":"passed","time":{"start":1695950074289,"stop":1695950083937,"duration":9648}},{"uid":"74a922d11ec21fc8","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/93//#testresult/74a922d11ec21fc8","status":"passed","time":{"start":1695863665791,"stop":1695863675588,"duration":9797}},{"uid":"1ccaa91effe2ee51","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/92//#testresult/1ccaa91effe2ee51","status":"passed","time":{"start":1695777583311,"stop":1695777593843,"duration":10532}},{"uid":"5f446629ca2cf364","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/91//#testresult/5f446629ca2cf364","status":"broken","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\n  (Session info: headless chrome=117.0.5938.92)\nStacktrace:\n#0 0x560d2f25c6b3 <unknown>\n#1 0x560d2ef321e7 <unknown>\n#2 0x560d2ef2a2f3 <unknown>\n#3 0x560d2ef1ad17 <unknown>\n#4 0x560d2ef1c191 <unknown>\n#5 0x560d2ef1b053 <unknown>\n#6 0x560d2ef1a06c <unknown>\n#7 0x560d2ef19fde <unknown>\n#8 0x560d2ef18be4 <unknown>\n#9 0x560d2ef1906a <unknown>\n#10 0x560d2ef348ce <unknown>\n#11 0x560d2efb4ad5 <unknown>\n#12 0x560d2ef9b0c2 <unknown>\n#13 0x560d2efb4322 <unknown>\n#14 0x560d2ef9ae93 <unknown>\n#15 0x560d2ef6d934 <unknown>\n#16 0x560d2ef6e71e <unknown>\n#17 0x560d2f221cb8 <unknown>\n#18 0x560d2f225bf0 <unknown>\n#19 0x560d2f23019c <unknown>\n#20 0x560d2f226808 <unknown>\n#21 0x560d2f1f327f <unknown>\n#22 0x560d2f24ae88 <unknown>\n#23 0x560d2f24b059 <unknown>\n#24 0x560d2f25b843 <unknown>\n#25 0x7f9a657ec044 <unknown>","time":{"start":1695691152467,"stop":1695691152467,"duration":0}},{"uid":"92b92792daddb584","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/90//#testresult/92b92792daddb584","status":"passed","time":{"start":1695604502622,"stop":1695604512142,"duration":9520}},{"uid":"f10b573081e1e491","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/89//#testresult/f10b573081e1e491","status":"passed","time":{"start":1695518373866,"stop":1695518384250,"duration":10384}},{"uid":"6a6746da9fe8df39","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/88//#testresult/6a6746da9fe8df39","status":"passed","time":{"start":1695431755641,"stop":1695431766715,"duration":11074}},{"uid":"79e651e307137837","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/87//#testresult/79e651e307137837","status":"passed","time":{"start":1695345252749,"stop":1695345262447,"duration":9698}},{"uid":"a822dea1d9a47df8","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/86//#testresult/a822dea1d9a47df8","status":"passed","time":{"start":1695258815208,"stop":1695258824859,"duration":9651}},{"uid":"5c461da92fdab7ea","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/85//#testresult/5c461da92fdab7ea","status":"passed","time":{"start":1695172767127,"stop":1695172777822,"duration":10695}},{"uid":"154302446ee2b1bb","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/84//#testresult/154302446ee2b1bb","status":"passed","time":{"start":1695086205893,"stop":1695086215331,"duration":9438}},{"uid":"f61a86f7e51c15b6","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/83//#testresult/f61a86f7e51c15b6","status":"passed","time":{"start":1694999873209,"stop":1694999884217,"duration":11008}},{"uid":"f32170ac41227626","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/82//#testresult/f32170ac41227626","status":"passed","time":{"start":1694913445655,"stop":1694913455428,"duration":9773}},{"uid":"9805c097ca7b2d25","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/81//#testresult/9805c097ca7b2d25","status":"passed","time":{"start":1694826937674,"stop":1694826948220,"duration":10546}},{"uid":"1e1238caab045554","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/80//#testresult/1e1238caab045554","status":"passed","time":{"start":1694740492031,"stop":1694740501513,"duration":9482}}]},"tags":["smoke_test"]},"source":"d00cb4fedfe698c0.json","parameterValues":["'https://stroyrem-nn.ru/catalog/shlifovalnye-mashiny'"]}