{"uid":"648d7254705f82ac","name":"positive_discount_for_unauthorized_customer_purchase_amount_7500_to_9999rub_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_discount_for_unauthorized_customer_purchase_amount_7500_to_9999rub_smoke","historyId":"15991ae52c76717db33988570d6dec01","time":{"start":1696468922560,"stop":1696468924992,"duration":2432},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=117.0.5938.149)\nStacktrace:\n#0 0x55d383bb9933 <unknown>\n#1 0x55d3838936f7 <unknown>\n#2 0x55d3838e0b9d <unknown>\n#3 0x55d3838def3d <unknown>\n#4 0x55d3838dccf8 <unknown>\n#5 0x55d3838dbd67 <unknown>\n#6 0x55d3838d0a29 <unknown>\n#7 0x55d3838fc602 <unknown>\n#8 0x55d3838d0446 <unknown>\n#9 0x55d3838fc7ce <unknown>\n#10 0x55d383915857 <unknown>\n#11 0x55d3838fc3d3 <unknown>\n#12 0x55d3838cee64 <unknown>\n#13 0x55d3838cfc4e <unknown>\n#14 0x55d383b7f558 <unknown>\n#15 0x55d383b834a0 <unknown>\n#16 0x55d383b8d97c <unknown>\n#17 0x55d383b840b8 <unknown>\n#18 0x55d383b4fcdf <unknown>\n#19 0x55d383ba8048 <unknown>\n#20 0x55d383ba8219 <unknown>\n#21 0x55d383bb8ac3 <unknown>\n#22 0x7fa6b7a68044 <unknown>","statusTrace":"self = <test_products_on_sale_page.TestProductsOnSalePage object at 0x7f69033c2c10>\nlink = 'https://stroyrem-nn.ru/catalog/shlifovalnye-mashiny'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f69045f86d0>\n\n    @allure.title(\"positive_discount_for_unauthorized_customer_purchase_amount_7500_to_9999rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHLIFOVALNYE_MASHINY_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHLIFOVALNYE_MASHINY_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_discount_for_unauthorized_customer_purchase_amount_7500_to_9999rub_smoke(\n            self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(7500)\n        product_page_open.get_field_price_last().send_keys(9999)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:390: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:346: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f690422b9d0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55d383ba8219 \\\\u003Cunknown>\\\\n#21 0x55d383bb8ac3 \\\\u003Cunknown>\\\\n#22 0x7fa6b7a68044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: headless chrome=117.0.5938.149)\nE       Stacktrace:\nE       #0 0x55d383bb9933 <unknown>\nE       #1 0x55d3838936f7 <unknown>\nE       #2 0x55d3838e0b9d <unknown>\nE       #3 0x55d3838def3d <unknown>\nE       #4 0x55d3838dccf8 <unknown>\nE       #5 0x55d3838dbd67 <unknown>\nE       #6 0x55d3838d0a29 <unknown>\nE       #7 0x55d3838fc602 <unknown>\nE       #8 0x55d3838d0446 <unknown>\nE       #9 0x55d3838fc7ce <unknown>\nE       #10 0x55d383915857 <unknown>\nE       #11 0x55d3838fc3d3 <unknown>\nE       #12 0x55d3838cee64 <unknown>\nE       #13 0x55d3838cfc4e <unknown>\nE       #14 0x55d383b7f558 <unknown>\nE       #15 0x55d383b834a0 <unknown>\nE       #16 0x55d383b8d97c <unknown>\nE       #17 0x55d383b840b8 <unknown>\nE       #18 0x55d383b4fcdf <unknown>\nE       #19 0x55d383ba8048 <unknown>\nE       #20 0x55d383ba8219 <unknown>\nE       #21 0x55d383bb8ac3 <unknown>\nE       #22 0x7fa6b7a68044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1696467682864,"stop":1696467682951,"duration":87},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"clear_allure_results_folder","time":{"start":1696467682951,"stop":1696467682951,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver","time":{"start":1696468909944,"stop":1696468910813,"duration":869},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"product_page_open","time":{"start":1696468910813,"stop":1696468922559,"duration":11746},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup","time":{"start":1696468910813,"stop":1696468910813,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=117.0.5938.149)\nStacktrace:\n#0 0x55d383bb9933 <unknown>\n#1 0x55d3838936f7 <unknown>\n#2 0x55d3838e0b9d <unknown>\n#3 0x55d3838def3d <unknown>\n#4 0x55d3838dccf8 <unknown>\n#5 0x55d3838dbd67 <unknown>\n#6 0x55d3838d0a29 <unknown>\n#7 0x55d3838fc602 <unknown>\n#8 0x55d3838d0446 <unknown>\n#9 0x55d3838fc7ce <unknown>\n#10 0x55d383915857 <unknown>\n#11 0x55d3838fc3d3 <unknown>\n#12 0x55d3838cee64 <unknown>\n#13 0x55d3838cfc4e <unknown>\n#14 0x55d383b7f558 <unknown>\n#15 0x55d383b834a0 <unknown>\n#16 0x55d383b8d97c <unknown>\n#17 0x55d383b840b8 <unknown>\n#18 0x55d383b4fcdf <unknown>\n#19 0x55d383ba8048 <unknown>\n#20 0x55d383ba8219 <unknown>\n#21 0x55d383bb8ac3 <unknown>\n#22 0x7fa6b7a68044 <unknown>","statusTrace":"self = <test_products_on_sale_page.TestProductsOnSalePage object at 0x7f69033c2c10>\nlink = 'https://stroyrem-nn.ru/catalog/shlifovalnye-mashiny'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f69045f86d0>\n\n    @allure.title(\"positive_discount_for_unauthorized_customer_purchase_amount_7500_to_9999rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHLIFOVALNYE_MASHINY_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHLIFOVALNYE_MASHINY_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_discount_for_unauthorized_customer_purchase_amount_7500_to_9999rub_smoke(\n            self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(7500)\n        product_page_open.get_field_price_last().send_keys(9999)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:390: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:346: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f690422b9d0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55d383ba8219 \\\\u003Cunknown>\\\\n#21 0x55d383bb8ac3 \\\\u003Cunknown>\\\\n#22 0x7fa6b7a68044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: headless chrome=117.0.5938.149)\nE       Stacktrace:\nE       #0 0x55d383bb9933 <unknown>\nE       #1 0x55d3838936f7 <unknown>\nE       #2 0x55d3838e0b9d <unknown>\nE       #3 0x55d3838def3d <unknown>\nE       #4 0x55d3838dccf8 <unknown>\nE       #5 0x55d3838dbd67 <unknown>\nE       #6 0x55d3838d0a29 <unknown>\nE       #7 0x55d3838fc602 <unknown>\nE       #8 0x55d3838d0446 <unknown>\nE       #9 0x55d3838fc7ce <unknown>\nE       #10 0x55d383915857 <unknown>\nE       #11 0x55d3838fc3d3 <unknown>\nE       #12 0x55d3838cee64 <unknown>\nE       #13 0x55d3838cfc4e <unknown>\nE       #14 0x55d383b7f558 <unknown>\nE       #15 0x55d383b834a0 <unknown>\nE       #16 0x55d383b8d97c <unknown>\nE       #17 0x55d383b840b8 <unknown>\nE       #18 0x55d383b4fcdf <unknown>\nE       #19 0x55d383ba8048 <unknown>\nE       #20 0x55d383ba8219 <unknown>\nE       #21 0x55d383bb8ac3 <unknown>\nE       #22 0x7fa6b7a68044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: ElementClickInterceptedException","steps":[{"name":"Проверяем видимость поля 'ЦЕНА от'","time":{"start":1696468922560,"stop":1696468922619,"duration":59},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем видимость поля 'ЦЕНА до'","time":{"start":1696468922707,"stop":1696468922745,"duration":38},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1696468923814,"stop":1696468923887,"duration":73},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[{"uid":"bea54b48aff72246","name":"Screenshot","source":"bea54b48aff72246.png","type":"image/png","size":72081},{"uid":"3bcf8ce706f02472","name":"HTML source","source":"3bcf8ce706f02472.html","type":"text/html","size":664092}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":2,"hasContent":true},"afterStages":[{"name":"setup::0","time":{"start":1696468925214,"stop":1696468925214,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver::0","time":{"start":1696468925215,"stop":1696468925282,"duration":67},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"4188a86181c1"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://stroyrem-nn.ru/catalog/shlifovalnye-mashiny'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":35,"unknown":0,"total":36},"items":[{"uid":"5e42a8b66024e9f4","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/99//#testresult/5e42a8b66024e9f4","status":"passed","time":{"start":1696382373329,"stop":1696382383641,"duration":10312}},{"uid":"cd9d30ba089e1f3d","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/98//#testresult/cd9d30ba089e1f3d","status":"passed","time":{"start":1696295977928,"stop":1696295988422,"duration":10494}},{"uid":"b2065d520d13d72e","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/97//#testresult/b2065d520d13d72e","status":"passed","time":{"start":1696209530617,"stop":1696209540719,"duration":10102}},{"uid":"4bd3f2d842b9761","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/96//#testresult/4bd3f2d842b9761","status":"passed","time":{"start":1696123645777,"stop":1696123656457,"duration":10680}},{"uid":"f065e9206e6c7564","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/95//#testresult/f065e9206e6c7564","status":"passed","time":{"start":1696036479483,"stop":1696036488956,"duration":9473}},{"uid":"a4536e9b527ef860","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/94//#testresult/a4536e9b527ef860","status":"passed","time":{"start":1695950176472,"stop":1695950186078,"duration":9606}},{"uid":"684f14a8accff95c","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/93//#testresult/684f14a8accff95c","status":"passed","time":{"start":1695863768710,"stop":1695863778397,"duration":9687}},{"uid":"6644c87e031664b1","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/92//#testresult/6644c87e031664b1","status":"passed","time":{"start":1695777693705,"stop":1695777704199,"duration":10494}},{"uid":"fbe1580405707e5f","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/91//#testresult/fbe1580405707e5f","status":"passed","time":{"start":1695691233191,"stop":1695691246611,"duration":13420}},{"uid":"d8ca66cb031badea","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/90//#testresult/d8ca66cb031badea","status":"passed","time":{"start":1695604604686,"stop":1695604614384,"duration":9698}},{"uid":"ec4fea8246a318ab","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/89//#testresult/ec4fea8246a318ab","status":"passed","time":{"start":1695518485941,"stop":1695518496790,"duration":10849}},{"uid":"68976fe6ec9d42d5","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/88//#testresult/68976fe6ec9d42d5","status":"passed","time":{"start":1695431872669,"stop":1695431883823,"duration":11154}},{"uid":"bbd2bbe8001887cd","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/87//#testresult/bbd2bbe8001887cd","status":"passed","time":{"start":1695345354350,"stop":1695345363880,"duration":9530}},{"uid":"43ffdf3e2041a0cd","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/86//#testresult/43ffdf3e2041a0cd","status":"passed","time":{"start":1695258921302,"stop":1695258930795,"duration":9493}},{"uid":"cee7bc379e17315a","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/85//#testresult/cee7bc379e17315a","status":"passed","time":{"start":1695172883336,"stop":1695172894312,"duration":10976}},{"uid":"476f46b898e0ad6a","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/84//#testresult/476f46b898e0ad6a","status":"passed","time":{"start":1695086310102,"stop":1695086319579,"duration":9477}},{"uid":"7783c59c62bad170","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/83//#testresult/7783c59c62bad170","status":"passed","time":{"start":1694999991304,"stop":1695000002124,"duration":10820}},{"uid":"d5e0274ccb2adf1f","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/82//#testresult/d5e0274ccb2adf1f","status":"passed","time":{"start":1694913549439,"stop":1694913559136,"duration":9697}},{"uid":"386b9e623d6606f0","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/81//#testresult/386b9e623d6606f0","status":"passed","time":{"start":1694827053296,"stop":1694827064332,"duration":11036}},{"uid":"a8c0ab04fcd0456f","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/80//#testresult/a8c0ab04fcd0456f","status":"passed","time":{"start":1694740595346,"stop":1694740604984,"duration":9638}}]},"tags":["smoke_test"]},"source":"648d7254705f82ac.json","parameterValues":["'https://stroyrem-nn.ru/catalog/shlifovalnye-mashiny'"]}