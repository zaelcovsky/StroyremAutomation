{"uid":"67e27e806820aef7","name":"positive_check_there_is_no_discount_for_unauthorized_customer_red_prices_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_check_there_is_no_discount_for_unauthorized_customer_red_prices_smoke","historyId":"f92d847cbd907f4f9e252d1a101ee715","time":{"start":1694394819278,"stop":1694394822554,"duration":3276},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <label for=\"discounted_products\" class=\"text-red\">...</label> is not clickable at point (265, 18). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=116.0.5845.96)\nStacktrace:\n#0 0x55f99ae69e23 <unknown>\n#1 0x55f99ab927a7 <unknown>\n#2 0x55f99abd6d22 <unknown>\n#3 0x55f99abd5267 <unknown>\n#4 0x55f99abd31e8 <unknown>\n#5 0x55f99abd232d <unknown>\n#6 0x55f99abc7599 <unknown>\n#7 0x55f99abf2012 <unknown>\n#8 0x55f99abc6fb6 <unknown>\n#9 0x55f99abf21de <unknown>\n#10 0x55f99ac0a369 <unknown>\n#11 0x55f99abf1de3 <unknown>\n#12 0x55f99abc5a7b <unknown>\n#13 0x55f99abc681e <unknown>\n#14 0x55f99ae2b638 <unknown>\n#15 0x55f99ae2f507 <unknown>\n#16 0x55f99ae39c4c <unknown>\n#17 0x55f99ae30136 <unknown>\n#18 0x55f99adfe9cf <unknown>\n#19 0x55f99ae53b98 <unknown>\n#20 0x55f99ae53d68 <unknown>\n#21 0x55f99ae62cb3 <unknown>\n#22 0x7f7178ec6044 <unknown>","statusTrace":"self = <test_products_on_sale_page.TestProductsOnSalePage object at 0x7f6a2bb25cd0>\nlink = 'https://test2.stroyrem-nn.ru/catalog/action'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f6a2af60510>\n\n    @allure.title(\"positive_check_there_is_no_discount_for_unauthorized_customer_red_prices_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{ACTION_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{ACTION_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_there_is_no_discount_for_unauthorized_customer_red_prices_smoke(\n            self, link, product_page_open):\n        product_page_open.get_in_stock_products_link().click()\n        time.sleep(2)\n>       product_page_open.get_text_red_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:260: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:346: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f6a2a8da750>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55f99ae53d68 \\\\u003Cunknown>\\\\n#21 0x55f99ae62cb3 \\\\u003Cunknown>\\\\n#22 0x7f7178ec6044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <label for=\"discounted_products\" class=\"text-red\">...</label> is not clickable at point (265, 18). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: headless chrome=116.0.5845.96)\nE       Stacktrace:\nE       #0 0x55f99ae69e23 <unknown>\nE       #1 0x55f99ab927a7 <unknown>\nE       #2 0x55f99abd6d22 <unknown>\nE       #3 0x55f99abd5267 <unknown>\nE       #4 0x55f99abd31e8 <unknown>\nE       #5 0x55f99abd232d <unknown>\nE       #6 0x55f99abc7599 <unknown>\nE       #7 0x55f99abf2012 <unknown>\nE       #8 0x55f99abc6fb6 <unknown>\nE       #9 0x55f99abf21de <unknown>\nE       #10 0x55f99ac0a369 <unknown>\nE       #11 0x55f99abf1de3 <unknown>\nE       #12 0x55f99abc5a7b <unknown>\nE       #13 0x55f99abc681e <unknown>\nE       #14 0x55f99ae2b638 <unknown>\nE       #15 0x55f99ae2f507 <unknown>\nE       #16 0x55f99ae39c4c <unknown>\nE       #17 0x55f99ae30136 <unknown>\nE       #18 0x55f99adfe9cf <unknown>\nE       #19 0x55f99ae53b98 <unknown>\nE       #20 0x55f99ae53d68 <unknown>\nE       #21 0x55f99ae62cb3 <unknown>\nE       #22 0x7f7178ec6044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1694394014248,"stop":1694394014326,"duration":78},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"clear_allure_results_folder","time":{"start":1694394014326,"stop":1694394014326,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver","time":{"start":1694394811069,"stop":1694394811820,"duration":751},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup","time":{"start":1694394811820,"stop":1694394811820,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"product_page_open","time":{"start":1694394811820,"stop":1694394819277,"duration":7457},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <label for=\"discounted_products\" class=\"text-red\">...</label> is not clickable at point (265, 18). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=116.0.5845.96)\nStacktrace:\n#0 0x55f99ae69e23 <unknown>\n#1 0x55f99ab927a7 <unknown>\n#2 0x55f99abd6d22 <unknown>\n#3 0x55f99abd5267 <unknown>\n#4 0x55f99abd31e8 <unknown>\n#5 0x55f99abd232d <unknown>\n#6 0x55f99abc7599 <unknown>\n#7 0x55f99abf2012 <unknown>\n#8 0x55f99abc6fb6 <unknown>\n#9 0x55f99abf21de <unknown>\n#10 0x55f99ac0a369 <unknown>\n#11 0x55f99abf1de3 <unknown>\n#12 0x55f99abc5a7b <unknown>\n#13 0x55f99abc681e <unknown>\n#14 0x55f99ae2b638 <unknown>\n#15 0x55f99ae2f507 <unknown>\n#16 0x55f99ae39c4c <unknown>\n#17 0x55f99ae30136 <unknown>\n#18 0x55f99adfe9cf <unknown>\n#19 0x55f99ae53b98 <unknown>\n#20 0x55f99ae53d68 <unknown>\n#21 0x55f99ae62cb3 <unknown>\n#22 0x7f7178ec6044 <unknown>","statusTrace":"self = <test_products_on_sale_page.TestProductsOnSalePage object at 0x7f6a2bb25cd0>\nlink = 'https://test2.stroyrem-nn.ru/catalog/action'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f6a2af60510>\n\n    @allure.title(\"positive_check_there_is_no_discount_for_unauthorized_customer_red_prices_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{ACTION_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{ACTION_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_there_is_no_discount_for_unauthorized_customer_red_prices_smoke(\n            self, link, product_page_open):\n        product_page_open.get_in_stock_products_link().click()\n        time.sleep(2)\n>       product_page_open.get_text_red_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:260: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:346: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f6a2a8da750>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55f99ae53d68 \\\\u003Cunknown>\\\\n#21 0x55f99ae62cb3 \\\\u003Cunknown>\\\\n#22 0x7f7178ec6044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <label for=\"discounted_products\" class=\"text-red\">...</label> is not clickable at point (265, 18). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: headless chrome=116.0.5845.96)\nE       Stacktrace:\nE       #0 0x55f99ae69e23 <unknown>\nE       #1 0x55f99ab927a7 <unknown>\nE       #2 0x55f99abd6d22 <unknown>\nE       #3 0x55f99abd5267 <unknown>\nE       #4 0x55f99abd31e8 <unknown>\nE       #5 0x55f99abd232d <unknown>\nE       #6 0x55f99abc7599 <unknown>\nE       #7 0x55f99abf2012 <unknown>\nE       #8 0x55f99abc6fb6 <unknown>\nE       #9 0x55f99abf21de <unknown>\nE       #10 0x55f99ac0a369 <unknown>\nE       #11 0x55f99abf1de3 <unknown>\nE       #12 0x55f99abc5a7b <unknown>\nE       #13 0x55f99abc681e <unknown>\nE       #14 0x55f99ae2b638 <unknown>\nE       #15 0x55f99ae2f507 <unknown>\nE       #16 0x55f99ae39c4c <unknown>\nE       #17 0x55f99ae30136 <unknown>\nE       #18 0x55f99adfe9cf <unknown>\nE       #19 0x55f99ae53b98 <unknown>\nE       #20 0x55f99ae53d68 <unknown>\nE       #21 0x55f99ae62cb3 <unknown>\nE       #22 0x7f7178ec6044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: ElementClickInterceptedException","steps":[{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1694394819278,"stop":1694394819361,"duration":83},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем кликабельность кнопки 'Красная цена!'","time":{"start":1694394821411,"stop":1694394821475,"duration":64},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[{"uid":"d135cf55ad4b2d10","name":"Screenshot","source":"d135cf55ad4b2d10.png","type":"image/png","size":181764},{"uid":"55361cde4dbb266e","name":"HTML source","source":"55361cde4dbb266e.html","type":"text/html","size":746320}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":2,"hasContent":true},"afterStages":[{"name":"setup::0","time":{"start":1694394822798,"stop":1694394822798,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver::0","time":{"start":1694394822799,"stop":1694394822866,"duration":67},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"ae7a834e98db"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://test2.stroyrem-nn.ru/catalog/action'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":4,"skipped":0,"passed":8,"unknown":0,"total":12},"items":[{"uid":"c423d32ce1386e93","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/75//#testresult/c423d32ce1386e93","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <label for=\"discounted_products\" class=\"text-red\">...</label> is not clickable at point (265, 18). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=116.0.5845.96)\nStacktrace:\n#0 0x55f4002e9e23 <unknown>\n#1 0x55f4000127a7 <unknown>\n#2 0x55f400056d22 <unknown>\n#3 0x55f400055267 <unknown>\n#4 0x55f4000531e8 <unknown>\n#5 0x55f40005232d <unknown>\n#6 0x55f400047599 <unknown>\n#7 0x55f400072012 <unknown>\n#8 0x55f400046fb6 <unknown>\n#9 0x55f4000721de <unknown>\n#10 0x55f40008a369 <unknown>\n#11 0x55f400071de3 <unknown>\n#12 0x55f400045a7b <unknown>\n#13 0x55f40004681e <unknown>\n#14 0x55f4002ab638 <unknown>\n#15 0x55f4002af507 <unknown>\n#16 0x55f4002b9c4c <unknown>\n#17 0x55f4002b0136 <unknown>\n#18 0x55f40027e9cf <unknown>\n#19 0x55f4002d3b98 <unknown>\n#20 0x55f4002d3d68 <unknown>\n#21 0x55f4002e2cb3 <unknown>\n#22 0x7f3244a8e044 <unknown>","time":{"start":1694308591294,"stop":1694308594632,"duration":3338}},{"uid":"e926151b94cc3dd2","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/74//#testresult/e926151b94cc3dd2","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <label for=\"discounted_products\" class=\"text-red\">...</label> is not clickable at point (265, 18). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=116.0.5845.96)\nStacktrace:\n#0 0x561ecacc9e23 <unknown>\n#1 0x561eca9f27a7 <unknown>\n#2 0x561ecaa36d22 <unknown>\n#3 0x561ecaa35267 <unknown>\n#4 0x561ecaa331e8 <unknown>\n#5 0x561ecaa3232d <unknown>\n#6 0x561ecaa27599 <unknown>\n#7 0x561ecaa52012 <unknown>\n#8 0x561ecaa26fb6 <unknown>\n#9 0x561ecaa521de <unknown>\n#10 0x561ecaa6a369 <unknown>\n#11 0x561ecaa51de3 <unknown>\n#12 0x561ecaa25a7b <unknown>\n#13 0x561ecaa2681e <unknown>\n#14 0x561ecac8b638 <unknown>\n#15 0x561ecac8f507 <unknown>\n#16 0x561ecac99c4c <unknown>\n#17 0x561ecac90136 <unknown>\n#18 0x561ecac5e9cf <unknown>\n#19 0x561ecacb3b98 <unknown>\n#20 0x561ecacb3d68 <unknown>\n#21 0x561ecacc2cb3 <unknown>\n#22 0x7f3368435044 <unknown>","time":{"start":1694222213550,"stop":1694222216901,"duration":3351}},{"uid":"fd429378e9d55605","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/73//#testresult/fd429378e9d55605","status":"passed","time":{"start":1694135639501,"stop":1694135647188,"duration":7687}},{"uid":"236936ad03277065","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/72//#testresult/236936ad03277065","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <label for=\"discounted_products\" class=\"text-red\">...</label> is not clickable at point (265, 18). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=116.0.5845.96)\nStacktrace:\n#0 0x55f28f5cde23 <unknown>\n#1 0x55f28f2f67a7 <unknown>\n#2 0x55f28f33ad22 <unknown>\n#3 0x55f28f339267 <unknown>\n#4 0x55f28f3371e8 <unknown>\n#5 0x55f28f33632d <unknown>\n#6 0x55f28f32b599 <unknown>\n#7 0x55f28f356012 <unknown>\n#8 0x55f28f32afb6 <unknown>\n#9 0x55f28f3561de <unknown>\n#10 0x55f28f36e369 <unknown>\n#11 0x55f28f355de3 <unknown>\n#12 0x55f28f329a7b <unknown>\n#13 0x55f28f32a81e <unknown>\n#14 0x55f28f58f638 <unknown>\n#15 0x55f28f593507 <unknown>\n#16 0x55f28f59dc4c <unknown>\n#17 0x55f28f594136 <unknown>\n#18 0x55f28f5629cf <unknown>\n#19 0x55f28f5b7b98 <unknown>\n#20 0x55f28f5b7d68 <unknown>\n#21 0x55f28f5c6cb3 <unknown>\n#22 0x7fb506dde044 <unknown>","time":{"start":1694049329796,"stop":1694049333160,"duration":3364}},{"uid":"cd8835e9e91beaba","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/71//#testresult/cd8835e9e91beaba","status":"passed","time":{"start":1693963317455,"stop":1693963326083,"duration":8628}},{"uid":"ab7bd3b726343957","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/70//#testresult/ab7bd3b726343957","status":"passed","time":{"start":1693876641745,"stop":1693876650102,"duration":8357}},{"uid":"609ab5c329266411","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/69//#testresult/609ab5c329266411","status":"passed","time":{"start":1693790634790,"stop":1693790643695,"duration":8905}},{"uid":"14a6bd386124affd","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/68//#testresult/14a6bd386124affd","status":"passed","time":{"start":1693704124300,"stop":1693704132342,"duration":8042}},{"uid":"9cf37e878a609bcd","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/67//#testresult/9cf37e878a609bcd","status":"passed","time":{"start":1693617331749,"stop":1693617339972,"duration":8223}},{"uid":"7e70d92330babbf2","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/66//#testresult/7e70d92330babbf2","status":"passed","time":{"start":1693531194767,"stop":1693531202549,"duration":7782}},{"uid":"6de292ed3d138337","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/9//#testresult/6de292ed3d138337","status":"passed","time":{"start":1693507247278,"stop":1693507254685,"duration":7407}}]},"tags":["smoke_test"]},"source":"67e27e806820aef7.json","parameterValues":["'https://test2.stroyrem-nn.ru/catalog/action'"]}