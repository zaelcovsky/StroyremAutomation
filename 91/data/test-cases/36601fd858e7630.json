{"uid":"36601fd858e7630","name":"positive_discount_for_unauthorized_customer_purchase_amount_0_to_49rub_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_discount_for_unauthorized_customer_purchase_amount_0_to_49rub_smoke","historyId":"ee8bcd0b8fbab001b41c4ef3172c289b","time":{"start":1695691026373,"stop":1695691028781,"duration":2408},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=117.0.5938.92)\nStacktrace:\n#0 0x5611c78716b3 <unknown>\n#1 0x5611c75471e7 <unknown>\n#2 0x5611c759465d <unknown>\n#3 0x5611c75929fd <unknown>\n#4 0x5611c75907b8 <unknown>\n#5 0x5611c758f827 <unknown>\n#6 0x5611c75844f9 <unknown>\n#7 0x5611c75b00c2 <unknown>\n#8 0x5611c7583f16 <unknown>\n#9 0x5611c75b028e <unknown>\n#10 0x5611c75c9322 <unknown>\n#11 0x5611c75afe93 <unknown>\n#12 0x5611c7582934 <unknown>\n#13 0x5611c758371e <unknown>\n#14 0x5611c7836cb8 <unknown>\n#15 0x5611c783abf0 <unknown>\n#16 0x5611c784519c <unknown>\n#17 0x5611c783b808 <unknown>\n#18 0x5611c780827f <unknown>\n#19 0x5611c785fe88 <unknown>\n#20 0x5611c7860059 <unknown>\n#21 0x5611c7870843 <unknown>\n#22 0x7f6367535044 <unknown>","statusTrace":"self = <test_products_on_sale_page.TestProductsOnSalePage object at 0x7f1f04e25f10>\nlink = 'https://stroyrem-nn.ru/catalog/shurupy-po-derevu'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f1f044989d0>\n\n    @allure.title(\"positive_discount_for_unauthorized_customer_purchase_amount_0_to_49rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHURUPY_PO_DEREVU_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHURUPY_PO_DEREVU_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_discount_for_unauthorized_customer_purchase_amount_0_to_49rub_smoke(\n            self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(0)\n        product_page_open.get_field_price_last().send_keys(49)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:241: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:346: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f1f042478d0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x5611c7860059 \\\\u003Cunknown>\\\\n#21 0x5611c7870843 \\\\u003Cunknown>\\\\n#22 0x7f6367535044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: headless chrome=117.0.5938.92)\nE       Stacktrace:\nE       #0 0x5611c78716b3 <unknown>\nE       #1 0x5611c75471e7 <unknown>\nE       #2 0x5611c759465d <unknown>\nE       #3 0x5611c75929fd <unknown>\nE       #4 0x5611c75907b8 <unknown>\nE       #5 0x5611c758f827 <unknown>\nE       #6 0x5611c75844f9 <unknown>\nE       #7 0x5611c75b00c2 <unknown>\nE       #8 0x5611c7583f16 <unknown>\nE       #9 0x5611c75b028e <unknown>\nE       #10 0x5611c75c9322 <unknown>\nE       #11 0x5611c75afe93 <unknown>\nE       #12 0x5611c7582934 <unknown>\nE       #13 0x5611c758371e <unknown>\nE       #14 0x5611c7836cb8 <unknown>\nE       #15 0x5611c783abf0 <unknown>\nE       #16 0x5611c784519c <unknown>\nE       #17 0x5611c783b808 <unknown>\nE       #18 0x5611c780827f <unknown>\nE       #19 0x5611c785fe88 <unknown>\nE       #20 0x5611c7860059 <unknown>\nE       #21 0x5611c7870843 <unknown>\nE       #22 0x7f6367535044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1695690084070,"stop":1695690084161,"duration":91},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"clear_allure_results_folder","time":{"start":1695690084161,"stop":1695690084161,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver","time":{"start":1695691015140,"stop":1695691015941,"duration":801},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"product_page_open","time":{"start":1695691015942,"stop":1695691026372,"duration":10430},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup","time":{"start":1695691015942,"stop":1695691015942,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=117.0.5938.92)\nStacktrace:\n#0 0x5611c78716b3 <unknown>\n#1 0x5611c75471e7 <unknown>\n#2 0x5611c759465d <unknown>\n#3 0x5611c75929fd <unknown>\n#4 0x5611c75907b8 <unknown>\n#5 0x5611c758f827 <unknown>\n#6 0x5611c75844f9 <unknown>\n#7 0x5611c75b00c2 <unknown>\n#8 0x5611c7583f16 <unknown>\n#9 0x5611c75b028e <unknown>\n#10 0x5611c75c9322 <unknown>\n#11 0x5611c75afe93 <unknown>\n#12 0x5611c7582934 <unknown>\n#13 0x5611c758371e <unknown>\n#14 0x5611c7836cb8 <unknown>\n#15 0x5611c783abf0 <unknown>\n#16 0x5611c784519c <unknown>\n#17 0x5611c783b808 <unknown>\n#18 0x5611c780827f <unknown>\n#19 0x5611c785fe88 <unknown>\n#20 0x5611c7860059 <unknown>\n#21 0x5611c7870843 <unknown>\n#22 0x7f6367535044 <unknown>","statusTrace":"self = <test_products_on_sale_page.TestProductsOnSalePage object at 0x7f1f04e25f10>\nlink = 'https://stroyrem-nn.ru/catalog/shurupy-po-derevu'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f1f044989d0>\n\n    @allure.title(\"positive_discount_for_unauthorized_customer_purchase_amount_0_to_49rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHURUPY_PO_DEREVU_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHURUPY_PO_DEREVU_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_discount_for_unauthorized_customer_purchase_amount_0_to_49rub_smoke(\n            self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(0)\n        product_page_open.get_field_price_last().send_keys(49)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:241: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:346: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f1f042478d0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x5611c7860059 \\\\u003Cunknown>\\\\n#21 0x5611c7870843 \\\\u003Cunknown>\\\\n#22 0x7f6367535044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: headless chrome=117.0.5938.92)\nE       Stacktrace:\nE       #0 0x5611c78716b3 <unknown>\nE       #1 0x5611c75471e7 <unknown>\nE       #2 0x5611c759465d <unknown>\nE       #3 0x5611c75929fd <unknown>\nE       #4 0x5611c75907b8 <unknown>\nE       #5 0x5611c758f827 <unknown>\nE       #6 0x5611c75844f9 <unknown>\nE       #7 0x5611c75b00c2 <unknown>\nE       #8 0x5611c7583f16 <unknown>\nE       #9 0x5611c75b028e <unknown>\nE       #10 0x5611c75c9322 <unknown>\nE       #11 0x5611c75afe93 <unknown>\nE       #12 0x5611c7582934 <unknown>\nE       #13 0x5611c758371e <unknown>\nE       #14 0x5611c7836cb8 <unknown>\nE       #15 0x5611c783abf0 <unknown>\nE       #16 0x5611c784519c <unknown>\nE       #17 0x5611c783b808 <unknown>\nE       #18 0x5611c780827f <unknown>\nE       #19 0x5611c785fe88 <unknown>\nE       #20 0x5611c7860059 <unknown>\nE       #21 0x5611c7870843 <unknown>\nE       #22 0x7f6367535044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: ElementClickInterceptedException","steps":[{"name":"Проверяем видимость поля 'ЦЕНА от'","time":{"start":1695691026373,"stop":1695691026423,"duration":50},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем видимость поля 'ЦЕНА до'","time":{"start":1695691026514,"stop":1695691026573,"duration":59},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1695691027630,"stop":1695691027707,"duration":77},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[{"uid":"fdd0360773c774d9","name":"Screenshot","source":"fdd0360773c774d9.png","type":"image/png","size":64216},{"uid":"23f3a9e632dd37d3","name":"HTML source","source":"23f3a9e632dd37d3.html","type":"text/html","size":896419}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":2,"hasContent":true},"afterStages":[{"name":"setup::0","time":{"start":1695691029038,"stop":1695691029038,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver::0","time":{"start":1695691029039,"stop":1695691029107,"duration":68},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"b473dd2dc69f"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://stroyrem-nn.ru/catalog/shurupy-po-derevu'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":26,"unknown":0,"total":27},"items":[{"uid":"ff749920508f4ba0","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/90//#testresult/ff749920508f4ba0","status":"passed","time":{"start":1695604371260,"stop":1695604380824,"duration":9564}},{"uid":"c2357b97aaea157f","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/89//#testresult/c2357b97aaea157f","status":"passed","time":{"start":1695518229642,"stop":1695518240363,"duration":10721}},{"uid":"a13f851e720a8812","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/88//#testresult/a13f851e720a8812","status":"passed","time":{"start":1695431605957,"stop":1695431617020,"duration":11063}},{"uid":"87a0ecf9dbb6163","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/87//#testresult/87a0ecf9dbb6163","status":"passed","time":{"start":1695345121587,"stop":1695345131314,"duration":9727}},{"uid":"5c6da5a5cf162746","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/86//#testresult/5c6da5a5cf162746","status":"passed","time":{"start":1695258684741,"stop":1695258694325,"duration":9584}},{"uid":"a4db791934b74700","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/85//#testresult/a4db791934b74700","status":"passed","time":{"start":1695172615737,"stop":1695172626588,"duration":10851}},{"uid":"7bcb465f7ba371a2","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/84//#testresult/7bcb465f7ba371a2","status":"passed","time":{"start":1695086075790,"stop":1695086085448,"duration":9658}},{"uid":"28872a8161943fab","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/83//#testresult/28872a8161943fab","status":"passed","time":{"start":1694999721900,"stop":1694999733034,"duration":11134}},{"uid":"f70e341b2796e44b","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/82//#testresult/f70e341b2796e44b","status":"passed","time":{"start":1694913311622,"stop":1694913321601,"duration":9979}},{"uid":"32dfade906ca7da6","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/81//#testresult/32dfade906ca7da6","status":"passed","time":{"start":1694826788902,"stop":1694826799941,"duration":11039}},{"uid":"a69f06579f39587b","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/80//#testresult/a69f06579f39587b","status":"passed","time":{"start":1694740357946,"stop":1694740367401,"duration":9455}},{"uid":"d27ac7d900e5b8d8","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/79//#testresult/d27ac7d900e5b8d8","status":"passed","time":{"start":1694654267465,"stop":1694654278428,"duration":10963}},{"uid":"c6a28f1f57e96fc","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/78//#testresult/c6a28f1f57e96fc","status":"passed","time":{"start":1694567673166,"stop":1694567682961,"duration":9795}},{"uid":"e08c7523d012452a","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/77//#testresult/e08c7523d012452a","status":"passed","time":{"start":1694481410238,"stop":1694481421074,"duration":10836}},{"uid":"17df15b0cc25a297","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/76//#testresult/17df15b0cc25a297","status":"passed","time":{"start":1694394776638,"stop":1694394786226,"duration":9588}},{"uid":"47ca51071677017d","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/75//#testresult/47ca51071677017d","status":"passed","time":{"start":1694308549642,"stop":1694308559209,"duration":9567}},{"uid":"5b8d7577970f7962","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/74//#testresult/5b8d7577970f7962","status":"passed","time":{"start":1694222159599,"stop":1694222170453,"duration":10854}},{"uid":"d87fa73b3063c5fa","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/73//#testresult/d87fa73b3063c5fa","status":"passed","time":{"start":1694135590572,"stop":1694135600124,"duration":9552}},{"uid":"da539e0528998f48","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/72//#testresult/da539e0528998f48","status":"passed","time":{"start":1694049279955,"stop":1694049290480,"duration":10525}},{"uid":"849311085524b6f1","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/71//#testresult/849311085524b6f1","status":"passed","time":{"start":1693963255881,"stop":1693963266625,"duration":10744}}]},"tags":["smoke_test"]},"source":"36601fd858e7630.json","parameterValues":["'https://stroyrem-nn.ru/catalog/shurupy-po-derevu'"]}