{"uid":"75571ec78510e3f8","name":"Авторизация с помощью аккаунта OK.ru","fullName":"tests.test_sign_in.test_sign_in_page.TestSignInPage#test_positive_authorization_first_time_using_OK_smoke","historyId":"3273fef023a780529beca6cb62c64840","time":{"start":1692753188773,"stop":1692753208241,"duration":19468},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"self = <tests.test_sign_in.test_sign_in_page.TestSignInPage object at 0x7f081dbe0d50>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"a3313520c9d246f52a6bfa8e3b5b0386\")>\nsign_in_page = <pages.sign_in_page.SignInPage object at 0x7f081e2617d0>\nopen_sign_in_window = None\n\n    @allure.title(\"Авторизация с помощью аккаунта OK.ru\")\n    # @pytest.mark.xfail(reason=\"хранение логинов/паролей не реализовано\")\n    @pytest.mark.smoke_test\n    def test_positive_authorization_first_time_using_OK_smoke(self, driver, sign_in_page, open_sign_in_window):\n        sign_in_page.get_ok_ru_auth_icon().click()\n        driver.switch_to.window(driver.window_handles[1])\n        driver.add_cookie({'name': 'bci',\n                           'value': '232693873704985418',\n                           'domain': '.ok.ru',\n                           'httpOnly': True,\n                           'path': '/',\n                           'expiry': 1726518377,\n                           'secure': True})\n        driver.add_cookie({'name': '_statid',\n                           'value': '2ee9fe98-ab2c-4d1f-9c04-30b8090d3f61',\n                           'domain': '.ok.ru',\n                           'httpOnly': True,\n                           'path': '/',\n                           'expiry': 1726518377,\n                           'secure': True})\n        driver.add_cookie({'name': 'landref',\n                           'value': 'stroyrem-nn.ru',\n                           'domain': '.ok.ru',\n                           'httpOnly': False,\n                           'path': '/',\n                           'expiry': 1726518377,\n                           'secure': True})\n        driver.add_cookie({'name': '__last_online',\n                           'value': '1691958637776',\n                           'domain': 'connect.ok.ru',\n                           'httpOnly': False,\n                           'path': '/',\n                           'expiry': 1726518638,\n                           'secure': True})\n        sign_in_page.get_ok_ru_window_email_field().send_keys(credentials['ok.ru_email'])\n        sign_in_page.get_ok_ru_window_password_field().send_keys(credentials['ok.ru_password'])\n        sign_in_page.get_ok_ru_window_submit_button().click()\n        # на новых аккаунтах нужно еще кликнуть акцепт\n        # self.driver.find_element(*self._ok_ru_window_accept_button).click()\n        driver.switch_to.window(driver.window_handles[0])\n>       sign_in_page.check_number_of_windows_to_be_equal(1)\n\ntests/test_sign_in/test_sign_in_page.py:101: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nbase/seleniumbase.py:197: in check_number_of_windows_to_be_equal\n    return self.__wait.until(EC.number_of_windows_to_be(number))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"a3313520c9d246f52a6bfa8e3b5b0386\")>\nmethod = <function number_of_windows_to_be.<locals>._predicate at 0x7f081e8163e0>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1692752326659,"stop":1692752326737,"duration":78},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"clear_allure_results_folder","time":{"start":1692752326738,"stop":1692752326738,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"driver","time":{"start":1692753179740,"stop":1692753180526,"duration":786},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"sign_in_page","time":{"start":1692753180527,"stop":1692753188364,"duration":7837},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"setup","time":{"start":1692753180527,"stop":1692753180527,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"open_sign_in_window","time":{"start":1692753188364,"stop":1692753188773,"duration":409},"status":"passed","steps":[{"name":"Нахождение элемента: иконка профиля в хедере","time":{"start":1692753188364,"stop":1692753188381,"duration":17},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"self = <tests.test_sign_in.test_sign_in_page.TestSignInPage object at 0x7f081dbe0d50>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"a3313520c9d246f52a6bfa8e3b5b0386\")>\nsign_in_page = <pages.sign_in_page.SignInPage object at 0x7f081e2617d0>\nopen_sign_in_window = None\n\n    @allure.title(\"Авторизация с помощью аккаунта OK.ru\")\n    # @pytest.mark.xfail(reason=\"хранение логинов/паролей не реализовано\")\n    @pytest.mark.smoke_test\n    def test_positive_authorization_first_time_using_OK_smoke(self, driver, sign_in_page, open_sign_in_window):\n        sign_in_page.get_ok_ru_auth_icon().click()\n        driver.switch_to.window(driver.window_handles[1])\n        driver.add_cookie({'name': 'bci',\n                           'value': '232693873704985418',\n                           'domain': '.ok.ru',\n                           'httpOnly': True,\n                           'path': '/',\n                           'expiry': 1726518377,\n                           'secure': True})\n        driver.add_cookie({'name': '_statid',\n                           'value': '2ee9fe98-ab2c-4d1f-9c04-30b8090d3f61',\n                           'domain': '.ok.ru',\n                           'httpOnly': True,\n                           'path': '/',\n                           'expiry': 1726518377,\n                           'secure': True})\n        driver.add_cookie({'name': 'landref',\n                           'value': 'stroyrem-nn.ru',\n                           'domain': '.ok.ru',\n                           'httpOnly': False,\n                           'path': '/',\n                           'expiry': 1726518377,\n                           'secure': True})\n        driver.add_cookie({'name': '__last_online',\n                           'value': '1691958637776',\n                           'domain': 'connect.ok.ru',\n                           'httpOnly': False,\n                           'path': '/',\n                           'expiry': 1726518638,\n                           'secure': True})\n        sign_in_page.get_ok_ru_window_email_field().send_keys(credentials['ok.ru_email'])\n        sign_in_page.get_ok_ru_window_password_field().send_keys(credentials['ok.ru_password'])\n        sign_in_page.get_ok_ru_window_submit_button().click()\n        # на новых аккаунтах нужно еще кликнуть акцепт\n        # self.driver.find_element(*self._ok_ru_window_accept_button).click()\n        driver.switch_to.window(driver.window_handles[0])\n>       sign_in_page.check_number_of_windows_to_be_equal(1)\n\ntests/test_sign_in/test_sign_in_page.py:101: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nbase/seleniumbase.py:197: in check_number_of_windows_to_be_equal\n    return self.__wait.until(EC.number_of_windows_to_be(number))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"a3313520c9d246f52a6bfa8e3b5b0386\")>\nmethod = <function number_of_windows_to_be.<locals>._predicate at 0x7f081e8163e0>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","steps":[{"name":"Нахождение элемента: иконка 'OK.ru' окна авторизации","time":{"start":1692753188773,"stop":1692753188791,"duration":18},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Нахождение элемента: поле 'Email' окна авторизации через 'OK.ru'","time":{"start":1692753192681,"stop":1692753192696,"duration":15},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Нахождение элемента: поле 'Пароль' окна авторизации через 'OK.ru'","time":{"start":1692753192762,"stop":1692753192777,"duration":15},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Нахождение элемента: кнопка 'Войти' окна авторизации через 'OK.ru'","time":{"start":1692753192845,"stop":1692753192859,"duration":14},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[{"uid":"1a67f24f1bffe87f","name":"Screenshot","source":"1a67f24f1bffe87f.png","type":"image/png","size":38541},{"uid":"798ce1ab3c1f32ab","name":"HTML source","source":"798ce1ab3c1f32ab.html","type":"text/html","size":398836}],"parameters":[],"stepsCount":4,"attachmentsCount":2,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"setup::0","time":{"start":1692753208426,"stop":1692753208426,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"driver::0","time":{"start":1692753208427,"stop":1692753208492,"duration":65},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"epic","value":"Sign In Page"},{"name":"tag","value":"smoke_test"},{"name":"parentSuite","value":"tests.test_sign_in"},{"name":"suite","value":"test_sign_in_page"},{"name":"subSuite","value":"TestSignInPage"},{"name":"host","value":"0d09e66095fc"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_sign_in.test_sign_in_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":14,"skipped":3,"passed":8,"unknown":0,"total":27},"items":[{"uid":"f713751229c0b7ae","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/56//#testresult/f713751229c0b7ae","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1692666738775,"stop":1692666757648,"duration":18873}},{"uid":"512d24ffcd4a84be","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/55//#testresult/512d24ffcd4a84be","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1692580237277,"stop":1692580256320,"duration":19043}},{"uid":"9257fda5dcb53514","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/54//#testresult/9257fda5dcb53514","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1692494032914,"stop":1692494051437,"duration":18523}},{"uid":"ffa110e54291ea15","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/53//#testresult/ffa110e54291ea15","status":"passed","time":{"start":1692407468689,"stop":1692407484942,"duration":16253}},{"uid":"91c1ce3714011d7c","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/52//#testresult/91c1ce3714011d7c","status":"passed","time":{"start":1692321181349,"stop":1692321197626,"duration":16277}},{"uid":"582ce95d60a006c9","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/51//#testresult/582ce95d60a006c9","status":"passed","time":{"start":1692234628804,"stop":1692234644179,"duration":15375}},{"uid":"4824229b443b8353","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/50//#testresult/4824229b443b8353","status":"passed","time":{"start":1692148443664,"stop":1692148460840,"duration":17176}},{"uid":"aae086e606497052","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/49//#testresult/aae086e606497052","status":"passed","time":{"start":1692061805197,"stop":1692061821373,"duration":16176}},{"uid":"43f5162636f80ca2","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/48//#testresult/43f5162636f80ca2","status":"passed","time":{"start":1692014805276,"stop":1692014822253,"duration":16977}},{"uid":"bc2fbcdeb1247b94","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/37//#testresult/bc2fbcdeb1247b94","status":"passed","time":{"start":1691964458445,"stop":1691964475537,"duration":17092}},{"uid":"12f9b041a3a58a63","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/36//#testresult/12f9b041a3a58a63","status":"passed","time":{"start":1691963540471,"stop":1691963554779,"duration":14308}},{"uid":"aebc4beea825c3d5","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/35//#testresult/aebc4beea825c3d5","status":"broken","statusDetails":"selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: headless chrome=115.0.5790.170)\nStacktrace:\n#0 0x55cbba64f613 <unknown>\n#1 0x55cbba37b537 <unknown>\n#2 0x55cbba3533c1 <unknown>\n#3 0x55cbba3df82f <unknown>\n#4 0x55cbba3f2856 <unknown>\n#5 0x55cbba3da803 <unknown>\n#6 0x55cbba3ae68b <unknown>\n#7 0x55cbba3af42e <unknown>\n#8 0x55cbba610c28 <unknown>\n#9 0x55cbba614af7 <unknown>\n#10 0x55cbba61f01c <unknown>\n#11 0x55cbba615723 <unknown>\n#12 0x55cbba5e4457 <unknown>\n#13 0x55cbba639628 <unknown>\n#14 0x55cbba6397b7 <unknown>\n#15 0x55cbba648483 <unknown>\n#16 0x7f49bc09d044 <unknown>","time":{"start":1691962958055,"stop":1691962972189,"duration":14134}},{"uid":"d3df8b1c91d0816b","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/34//#testresult/d3df8b1c91d0816b","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1691888561518,"stop":1691888581948,"duration":20430}},{"uid":"657f04d5741a23e4","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/33//#testresult/657f04d5741a23e4","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1691801899385,"stop":1691801919248,"duration":19863}},{"uid":"95c44113d01a3d10","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/32//#testresult/95c44113d01a3d10","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1691715557133,"stop":1691715576545,"duration":19412}},{"uid":"9fa46e5d18ebdda6","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/31//#testresult/9fa46e5d18ebdda6","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1691687182270,"stop":1691687203443,"duration":21173}},{"uid":"fc1dad804ac86b56","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/30//#testresult/fc1dad804ac86b56","status":"skipped","statusDetails":"XFAIL хранение логинов/паролей не реализовано\n\nAssertionError: Неправильный url страницы: https://stroyrem-nn.ru/\nassert 'https://stroyrem-nn.ru/' == 'https://stro.../user/account'\n  - https://stroyrem-nn.ru/user/account\n  ?                        ------------\n  + https://stroyrem-nn.ru/","time":{"start":1691630563666,"stop":1691630578982,"duration":15316}},{"uid":"26ba9b7662c59b19","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/29//#testresult/26ba9b7662c59b19","status":"failed","statusDetails":"AssertionError: Неправильный url страницы: https://stroyrem-nn.ru/\nassert 'https://stroyrem-nn.ru/' == 'https://stro.../user/account'\n  - https://stroyrem-nn.ru/user/account\n  ?                        ------------\n  + https://stroyrem-nn.ru/","time":{"start":1691604241525,"stop":1691604256031,"duration":14506}},{"uid":"d2fdd048e08462d","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/28//#testresult/d2fdd048e08462d","status":"failed","statusDetails":"AssertionError: Неправильный url страницы: https://stroyrem-nn.ru/\nassert 'https://stroyrem-nn.ru/' == 'https://stro.../user/account'\n  - https://stroyrem-nn.ru/user/account\n  ?                        ------------\n  + https://stroyrem-nn.ru/","time":{"start":1691602782019,"stop":1691602796147,"duration":14128}},{"uid":"f592c92d2b3df44a","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/27//#testresult/f592c92d2b3df44a","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1691600545310,"stop":1691600565061,"duration":19751}}]},"tags":["smoke_test"]},"source":"75571ec78510e3f8.json","parameterValues":[]}