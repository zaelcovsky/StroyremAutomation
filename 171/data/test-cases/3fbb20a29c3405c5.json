{"uid":"3fbb20a29c3405c5","name":"positive_check_there_is_no_discount_for_unauthorized_customer_red_prices_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_check_there_is_no_discount_for_unauthorized_customer_red_prices_smoke","historyId":"ae0b03f524f3687047fb70a412376bdb","time":{"start":1702603251754,"stop":1702603256171,"duration":4417},"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: chrome-headless-shell=120.0.6099.71); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x563edee46d33 <unknown>\n#1 0x563edeb03f87 <unknown>\n#2 0x563edeb0a533 <unknown>\n#3 0x563edeb0ca28 <unknown>\n#4 0x563edeb0cb7c <unknown>\n#5 0x563edeb5bf21 <unknown>\n#6 0x563edeb59a64 <unknown>\n#7 0x563edeb56b04 <unknown>\n#8 0x563edeb55729 <unknown>\n#9 0x563edeb47583 <unknown>\n#10 0x563edeb7d342 <unknown>\n#11 0x563edeb46db9 <unknown>\n#12 0x563edeb7d75e <unknown>\n#13 0x563edeb9c297 <unknown>\n#14 0x563edeb7d0e3 <unknown>\n#15 0x563edeb45044 <unknown>\n#16 0x563edeb4644e <unknown>\n#17 0x563edee0b861 <unknown>\n#18 0x563edee0f785 <unknown>\n#19 0x563ededf9285 <unknown>\n#20 0x563edee1041f <unknown>\n#21 0x563ededdd20f <unknown>\n#22 0x563edee34028 <unknown>\n#23 0x563edee341f7 <unknown>\n#24 0x563edee45ed4 <unknown>\n#25 0x7efeb2f6a044 <unknown>","statusTrace":"self = <test_products_on_sale_page.TestProductsOnSalePage object at 0x7f0d678aa7d0>\nlink = 'https://stroyrem-nn.ru/catalog/action'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f0d664ac750>\n\n    @allure.title(\"positive_check_there_is_no_discount_for_unauthorized_customer_red_prices_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{ACTION_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{ACTION_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_there_is_no_discount_for_unauthorized_customer_red_prices_smoke(\n            self, link, product_page_open):\n        product_page_open.get_in_stock_products_link().click()\n        time.sleep(2)\n        product_page_open.get_text_red_link().click()\n        time.sleep(2)\n>       product_page_open.get_add_to_cart_btn().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:262: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:346: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f0d669b1b50>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#23 0x563edee341f7 \\\\u003Cunknown>\\\\n#24 0x563edee45ed4 \\\\u003Cunknown>\\\\n#25 0x7efeb2f6a044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\nE         (Session info: chrome-headless-shell=120.0.6099.71); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x563edee46d33 <unknown>\nE       #1 0x563edeb03f87 <unknown>\nE       #2 0x563edeb0a533 <unknown>\nE       #3 0x563edeb0ca28 <unknown>\nE       #4 0x563edeb0cb7c <unknown>\nE       #5 0x563edeb5bf21 <unknown>\nE       #6 0x563edeb59a64 <unknown>\nE       #7 0x563edeb56b04 <unknown>\nE       #8 0x563edeb55729 <unknown>\nE       #9 0x563edeb47583 <unknown>\nE       #10 0x563edeb7d342 <unknown>\nE       #11 0x563edeb46db9 <unknown>\nE       #12 0x563edeb7d75e <unknown>\nE       #13 0x563edeb9c297 <unknown>\nE       #14 0x563edeb7d0e3 <unknown>\nE       #15 0x563edeb45044 <unknown>\nE       #16 0x563edeb4644e <unknown>\nE       #17 0x563edee0b861 <unknown>\nE       #18 0x563edee0f785 <unknown>\nE       #19 0x563ededf9285 <unknown>\nE       #20 0x563edee1041f <unknown>\nE       #21 0x563ededdd20f <unknown>\nE       #22 0x563edee34028 <unknown>\nE       #23 0x563edee341f7 <unknown>\nE       #24 0x563edee45ed4 <unknown>\nE       #25 0x7efeb2f6a044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: StaleElementReferenceException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1702602320038,"stop":1702602320108,"duration":70},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_results_folder","time":{"start":1702602320108,"stop":1702602320108,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1702603238846,"stop":1702603239583,"duration":737},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"product_page_open","time":{"start":1702603239584,"stop":1702603251753,"duration":12169},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1702603239584,"stop":1702603239584,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: chrome-headless-shell=120.0.6099.71); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x563edee46d33 <unknown>\n#1 0x563edeb03f87 <unknown>\n#2 0x563edeb0a533 <unknown>\n#3 0x563edeb0ca28 <unknown>\n#4 0x563edeb0cb7c <unknown>\n#5 0x563edeb5bf21 <unknown>\n#6 0x563edeb59a64 <unknown>\n#7 0x563edeb56b04 <unknown>\n#8 0x563edeb55729 <unknown>\n#9 0x563edeb47583 <unknown>\n#10 0x563edeb7d342 <unknown>\n#11 0x563edeb46db9 <unknown>\n#12 0x563edeb7d75e <unknown>\n#13 0x563edeb9c297 <unknown>\n#14 0x563edeb7d0e3 <unknown>\n#15 0x563edeb45044 <unknown>\n#16 0x563edeb4644e <unknown>\n#17 0x563edee0b861 <unknown>\n#18 0x563edee0f785 <unknown>\n#19 0x563ededf9285 <unknown>\n#20 0x563edee1041f <unknown>\n#21 0x563ededdd20f <unknown>\n#22 0x563edee34028 <unknown>\n#23 0x563edee341f7 <unknown>\n#24 0x563edee45ed4 <unknown>\n#25 0x7efeb2f6a044 <unknown>","statusTrace":"self = <test_products_on_sale_page.TestProductsOnSalePage object at 0x7f0d678aa7d0>\nlink = 'https://stroyrem-nn.ru/catalog/action'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f0d664ac750>\n\n    @allure.title(\"positive_check_there_is_no_discount_for_unauthorized_customer_red_prices_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{ACTION_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{ACTION_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_there_is_no_discount_for_unauthorized_customer_red_prices_smoke(\n            self, link, product_page_open):\n        product_page_open.get_in_stock_products_link().click()\n        time.sleep(2)\n        product_page_open.get_text_red_link().click()\n        time.sleep(2)\n>       product_page_open.get_add_to_cart_btn().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:262: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:346: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f0d669b1b50>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#23 0x563edee341f7 \\\\u003Cunknown>\\\\n#24 0x563edee45ed4 \\\\u003Cunknown>\\\\n#25 0x7efeb2f6a044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\nE         (Session info: chrome-headless-shell=120.0.6099.71); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x563edee46d33 <unknown>\nE       #1 0x563edeb03f87 <unknown>\nE       #2 0x563edeb0a533 <unknown>\nE       #3 0x563edeb0ca28 <unknown>\nE       #4 0x563edeb0cb7c <unknown>\nE       #5 0x563edeb5bf21 <unknown>\nE       #6 0x563edeb59a64 <unknown>\nE       #7 0x563edeb56b04 <unknown>\nE       #8 0x563edeb55729 <unknown>\nE       #9 0x563edeb47583 <unknown>\nE       #10 0x563edeb7d342 <unknown>\nE       #11 0x563edeb46db9 <unknown>\nE       #12 0x563edeb7d75e <unknown>\nE       #13 0x563edeb9c297 <unknown>\nE       #14 0x563edeb7d0e3 <unknown>\nE       #15 0x563edeb45044 <unknown>\nE       #16 0x563edeb4644e <unknown>\nE       #17 0x563edee0b861 <unknown>\nE       #18 0x563edee0f785 <unknown>\nE       #19 0x563ededf9285 <unknown>\nE       #20 0x563edee1041f <unknown>\nE       #21 0x563ededdd20f <unknown>\nE       #22 0x563edee34028 <unknown>\nE       #23 0x563edee341f7 <unknown>\nE       #24 0x563edee45ed4 <unknown>\nE       #25 0x7efeb2f6a044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: StaleElementReferenceException","steps":[{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1702603251754,"stop":1702603251807,"duration":53},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем кликабельность кнопки 'Красная цена!'","time":{"start":1702603253867,"stop":1702603253911,"duration":44},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем кликабельность кнопки 'В корзину'","time":{"start":1702603255952,"stop":1702603256010,"duration":58},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"8479dacb88b6046c","name":"Screenshot","source":"8479dacb88b6046c.png","type":"image/png","size":253804},{"uid":"9362918a626f7c01","name":"HTML source","source":"9362918a626f7c01.html","type":"text/html","size":855733}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1702603256366,"stop":1702603256441,"duration":75},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1702603256366,"stop":1702603256366,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"826c1f1062ef"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://stroyrem-nn.ru/catalog/action'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":105,"unknown":0,"total":107},"items":[{"uid":"35ad68595ed3e549","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/170//#testresult/35ad68595ed3e549","status":"passed","time":{"start":1702516554581,"stop":1702516562139,"duration":7558}},{"uid":"2769a77fd1071a22","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/169//#testresult/2769a77fd1071a22","status":"passed","time":{"start":1702430189061,"stop":1702430196314,"duration":7253}},{"uid":"236dd95182963fb8","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/168//#testresult/236dd95182963fb8","status":"passed","time":{"start":1702343978369,"stop":1702343986488,"duration":8119}},{"uid":"a266a5513e0e49fa","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/167//#testresult/a266a5513e0e49fa","status":"passed","time":{"start":1702257603433,"stop":1702257612578,"duration":9145}},{"uid":"341ac49e1c5a7d53","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/166//#testresult/341ac49e1c5a7d53","status":"passed","time":{"start":1702171258551,"stop":1702171266167,"duration":7616}},{"uid":"9208e3af1e220a9d","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/165//#testresult/9208e3af1e220a9d","status":"passed","time":{"start":1702084522851,"stop":1702084530336,"duration":7485}},{"uid":"cfc05c740c79e102","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/164//#testresult/cfc05c740c79e102","status":"passed","time":{"start":1701998388632,"stop":1701998397193,"duration":8561}},{"uid":"69d9b60d09cc9198","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/163//#testresult/69d9b60d09cc9198","status":"passed","time":{"start":1701911943136,"stop":1701911951011,"duration":7875}},{"uid":"aa92ea003b6efd47","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/162//#testresult/aa92ea003b6efd47","status":"passed","time":{"start":1701825574285,"stop":1701825582632,"duration":8347}},{"uid":"fd25ab73e38d56b8","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/161//#testresult/fd25ab73e38d56b8","status":"passed","time":{"start":1701739039715,"stop":1701739047221,"duration":7506}},{"uid":"fe058ac4d0c04b19","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/160//#testresult/fe058ac4d0c04b19","status":"passed","time":{"start":1701652847676,"stop":1701652855706,"duration":8030}},{"uid":"c9ae39cc32eb6e23","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/159//#testresult/c9ae39cc32eb6e23","status":"passed","time":{"start":1701566560114,"stop":1701566567657,"duration":7543}},{"uid":"8f72f148dc99ba4f","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/158//#testresult/8f72f148dc99ba4f","status":"passed","time":{"start":1701479827660,"stop":1701479835648,"duration":7988}},{"uid":"1f638cfd51a86dc8","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/157//#testresult/1f638cfd51a86dc8","status":"passed","time":{"start":1701393999773,"stop":1701394008271,"duration":8498}},{"uid":"18e97d5c37834cd","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/156//#testresult/18e97d5c37834cd","status":"passed","time":{"start":1701307101828,"stop":1701307109550,"duration":7722}},{"uid":"cb2939dbe0fe90b1","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/155//#testresult/cb2939dbe0fe90b1","status":"passed","time":{"start":1701220712389,"stop":1701220720079,"duration":7690}},{"uid":"ae6a2901321b1a60","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/154//#testresult/ae6a2901321b1a60","status":"passed","time":{"start":1701134313435,"stop":1701134321032,"duration":7597}},{"uid":"1ce616f97049f761","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/153//#testresult/1ce616f97049f761","status":"passed","time":{"start":1701047951691,"stop":1701047959484,"duration":7793}},{"uid":"36110ea53fadc6ce","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/152//#testresult/36110ea53fadc6ce","status":"passed","time":{"start":1700961899497,"stop":1700961909259,"duration":9762}},{"uid":"ef4d0619f33b2a93","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/151//#testresult/ef4d0619f33b2a93","status":"passed","time":{"start":1700874938050,"stop":1700874945558,"duration":7508}}]},"tags":["smoke_test"]},"source":"3fbb20a29c3405c5.json","parameterValues":["'https://stroyrem-nn.ru/catalog/action'"]}