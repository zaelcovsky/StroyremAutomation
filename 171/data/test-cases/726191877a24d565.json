{"uid":"726191877a24d565","name":"positive_discount_for_unauthorized_customer_purchase_amount_3500_to_4999rub_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_discount_for_unauthorized_customer_purchase_amount_3500_to_4999rub_smoke","historyId":"20a229ea56dbfac299ce8155fae6537d","time":{"start":1702603370879,"stop":1702603373161,"duration":2282},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=120.0.6099.71)\nStacktrace:\n#0 0x5597ce9dcd33 <unknown>\n#1 0x5597ce699f87 <unknown>\n#2 0x5597ce6f2002 <unknown>\n#3 0x5597ce6efa64 <unknown>\n#4 0x5597ce6ecb04 <unknown>\n#5 0x5597ce6eb729 <unknown>\n#6 0x5597ce6dd583 <unknown>\n#7 0x5597ce713342 <unknown>\n#8 0x5597ce6dcdb9 <unknown>\n#9 0x5597ce71375e <unknown>\n#10 0x5597ce732297 <unknown>\n#11 0x5597ce7130e3 <unknown>\n#12 0x5597ce6db044 <unknown>\n#13 0x5597ce6dc44e <unknown>\n#14 0x5597ce9a1861 <unknown>\n#15 0x5597ce9a5785 <unknown>\n#16 0x5597ce98f285 <unknown>\n#17 0x5597ce9a641f <unknown>\n#18 0x5597ce97320f <unknown>\n#19 0x5597ce9ca028 <unknown>\n#20 0x5597ce9ca1f7 <unknown>\n#21 0x5597ce9dbed4 <unknown>\n#22 0x7f3580d4b044 <unknown>","statusTrace":"self = <test_products_on_sale_page.TestProductsOnSalePage object at 0x7f0d66c1f590>\nlink = 'https://stroyrem-nn.ru/catalog/shlifovalnye-mashiny'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f0d67903990>\n\n    @allure.title(\"positive_discount_for_unauthorized_customer_purchase_amount_3500_to_4999rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHLIFOVALNYE_MASHINY_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHLIFOVALNYE_MASHINY_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_discount_for_unauthorized_customer_purchase_amount_3500_to_4999rub_smoke(\n            self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(3500)\n        product_page_open.get_field_price_last().send_keys(4999)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:323: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:346: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f0d67075850>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x5597ce9ca1f7 \\\\u003Cunknown>\\\\n#21 0x5597ce9dbed4 \\\\u003Cunknown>\\\\n#22 0x7f3580d4b044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: chrome-headless-shell=120.0.6099.71)\nE       Stacktrace:\nE       #0 0x5597ce9dcd33 <unknown>\nE       #1 0x5597ce699f87 <unknown>\nE       #2 0x5597ce6f2002 <unknown>\nE       #3 0x5597ce6efa64 <unknown>\nE       #4 0x5597ce6ecb04 <unknown>\nE       #5 0x5597ce6eb729 <unknown>\nE       #6 0x5597ce6dd583 <unknown>\nE       #7 0x5597ce713342 <unknown>\nE       #8 0x5597ce6dcdb9 <unknown>\nE       #9 0x5597ce71375e <unknown>\nE       #10 0x5597ce732297 <unknown>\nE       #11 0x5597ce7130e3 <unknown>\nE       #12 0x5597ce6db044 <unknown>\nE       #13 0x5597ce6dc44e <unknown>\nE       #14 0x5597ce9a1861 <unknown>\nE       #15 0x5597ce9a5785 <unknown>\nE       #16 0x5597ce98f285 <unknown>\nE       #17 0x5597ce9a641f <unknown>\nE       #18 0x5597ce97320f <unknown>\nE       #19 0x5597ce9ca028 <unknown>\nE       #20 0x5597ce9ca1f7 <unknown>\nE       #21 0x5597ce9dbed4 <unknown>\nE       #22 0x7f3580d4b044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1702602320038,"stop":1702602320108,"duration":70},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_results_folder","time":{"start":1702602320108,"stop":1702602320108,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1702603355324,"stop":1702603356056,"duration":732},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1702603356056,"stop":1702603356056,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"product_page_open","time":{"start":1702603356056,"stop":1702603370879,"duration":14823},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=120.0.6099.71)\nStacktrace:\n#0 0x5597ce9dcd33 <unknown>\n#1 0x5597ce699f87 <unknown>\n#2 0x5597ce6f2002 <unknown>\n#3 0x5597ce6efa64 <unknown>\n#4 0x5597ce6ecb04 <unknown>\n#5 0x5597ce6eb729 <unknown>\n#6 0x5597ce6dd583 <unknown>\n#7 0x5597ce713342 <unknown>\n#8 0x5597ce6dcdb9 <unknown>\n#9 0x5597ce71375e <unknown>\n#10 0x5597ce732297 <unknown>\n#11 0x5597ce7130e3 <unknown>\n#12 0x5597ce6db044 <unknown>\n#13 0x5597ce6dc44e <unknown>\n#14 0x5597ce9a1861 <unknown>\n#15 0x5597ce9a5785 <unknown>\n#16 0x5597ce98f285 <unknown>\n#17 0x5597ce9a641f <unknown>\n#18 0x5597ce97320f <unknown>\n#19 0x5597ce9ca028 <unknown>\n#20 0x5597ce9ca1f7 <unknown>\n#21 0x5597ce9dbed4 <unknown>\n#22 0x7f3580d4b044 <unknown>","statusTrace":"self = <test_products_on_sale_page.TestProductsOnSalePage object at 0x7f0d66c1f590>\nlink = 'https://stroyrem-nn.ru/catalog/shlifovalnye-mashiny'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f0d67903990>\n\n    @allure.title(\"positive_discount_for_unauthorized_customer_purchase_amount_3500_to_4999rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHLIFOVALNYE_MASHINY_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHLIFOVALNYE_MASHINY_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_discount_for_unauthorized_customer_purchase_amount_3500_to_4999rub_smoke(\n            self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(3500)\n        product_page_open.get_field_price_last().send_keys(4999)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:323: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:346: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f0d67075850>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x5597ce9ca1f7 \\\\u003Cunknown>\\\\n#21 0x5597ce9dbed4 \\\\u003Cunknown>\\\\n#22 0x7f3580d4b044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: chrome-headless-shell=120.0.6099.71)\nE       Stacktrace:\nE       #0 0x5597ce9dcd33 <unknown>\nE       #1 0x5597ce699f87 <unknown>\nE       #2 0x5597ce6f2002 <unknown>\nE       #3 0x5597ce6efa64 <unknown>\nE       #4 0x5597ce6ecb04 <unknown>\nE       #5 0x5597ce6eb729 <unknown>\nE       #6 0x5597ce6dd583 <unknown>\nE       #7 0x5597ce713342 <unknown>\nE       #8 0x5597ce6dcdb9 <unknown>\nE       #9 0x5597ce71375e <unknown>\nE       #10 0x5597ce732297 <unknown>\nE       #11 0x5597ce7130e3 <unknown>\nE       #12 0x5597ce6db044 <unknown>\nE       #13 0x5597ce6dc44e <unknown>\nE       #14 0x5597ce9a1861 <unknown>\nE       #15 0x5597ce9a5785 <unknown>\nE       #16 0x5597ce98f285 <unknown>\nE       #17 0x5597ce9a641f <unknown>\nE       #18 0x5597ce97320f <unknown>\nE       #19 0x5597ce9ca028 <unknown>\nE       #20 0x5597ce9ca1f7 <unknown>\nE       #21 0x5597ce9dbed4 <unknown>\nE       #22 0x7f3580d4b044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: ElementClickInterceptedException","steps":[{"name":"Проверяем видимость поля 'ЦЕНА от'","time":{"start":1702603370879,"stop":1702603370908,"duration":29},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем видимость поля 'ЦЕНА до'","time":{"start":1702603370969,"stop":1702603371000,"duration":31},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1702603372037,"stop":1702603372095,"duration":58},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"47bfc8103abce404","name":"Screenshot","source":"47bfc8103abce404.png","type":"image/png","size":128932},{"uid":"af06e50ca38fbe7f","name":"HTML source","source":"af06e50ca38fbe7f.html","type":"text/html","size":724796}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1702603373336,"stop":1702603373336,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver::0","time":{"start":1702603373337,"stop":1702603373407,"duration":70},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"826c1f1062ef"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://stroyrem-nn.ru/catalog/shlifovalnye-mashiny'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":7,"broken":3,"skipped":0,"passed":97,"unknown":0,"total":107},"items":[{"uid":"a46f4d0a20a063d","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/170//#testresult/a46f4d0a20a063d","status":"failed","statusDetails":"AssertionError: ОР: Скидка за объем = 61.39, ФР: скидка = 61.4\nassert 61.4 == 61.39\n +  where 61.39 = round((4093.0 * 0.015), 2)","time":{"start":1702516650231,"stop":1702516659574,"duration":9343}},{"uid":"5ab85c99a6177a21","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/169//#testresult/5ab85c99a6177a21","status":"failed","statusDetails":"AssertionError: ОР: Скидка за объем = 61.39, ФР: скидка = 61.4\nassert 61.4 == 61.39\n +  where 61.39 = round((4093.0 * 0.015), 2)","time":{"start":1702430283954,"stop":1702430293293,"duration":9339}},{"uid":"9f8233ecd7e12e7c","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/168//#testresult/9f8233ecd7e12e7c","status":"failed","statusDetails":"AssertionError: ОР: Скидка за объем = 61.39, ФР: скидка = 61.4\nassert 61.4 == 61.39\n +  where 61.39 = round((4093.0 * 0.015), 2)","time":{"start":1702344086778,"stop":1702344097067,"duration":10289}},{"uid":"1fc28abb95870cd7","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/167//#testresult/1fc28abb95870cd7","status":"failed","statusDetails":"AssertionError: ОР: Скидка за объем = 61.39, ФР: скидка = 61.4\nassert 61.4 == 61.39\n +  where 61.39 = round((4093.0 * 0.015), 2)","time":{"start":1702257712336,"stop":1702257722455,"duration":10119}},{"uid":"6b610875fe280e16","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/166//#testresult/6b610875fe280e16","status":"failed","statusDetails":"AssertionError: ОР: Скидка за объем = 61.39, ФР: скидка = 61.4\nassert 61.4 == 61.39\n +  where 61.39 = round((4093.0 * 0.015), 2)","time":{"start":1702171353938,"stop":1702171363433,"duration":9495}},{"uid":"1ea1cebd32603f41","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/165//#testresult/1ea1cebd32603f41","status":"failed","statusDetails":"AssertionError: ОР: Скидка за объем = 61.39, ФР: скидка = 61.4\nassert 61.4 == 61.39\n +  where 61.39 = round((4093.0 * 0.015), 2)","time":{"start":1702084617361,"stop":1702084626608,"duration":9247}},{"uid":"f4cceb3b1e271edb","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/164//#testresult/f4cceb3b1e271edb","status":"failed","statusDetails":"AssertionError: ОР: Скидка за объем = 61.39, ФР: скидка = 61.4\nassert 61.4 == 61.39\n +  where 61.39 = round((4093.0 * 0.015), 2)","time":{"start":1701998500793,"stop":1701998511262,"duration":10469}},{"uid":"1936906a621c7af3","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/163//#testresult/1936906a621c7af3","status":"passed","time":{"start":1701912049751,"stop":1701912059859,"duration":10108}},{"uid":"5275402549ec63d4","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/162//#testresult/5275402549ec63d4","status":"passed","time":{"start":1701825682721,"stop":1701825693302,"duration":10581}},{"uid":"b57852d96bfb9270","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/161//#testresult/b57852d96bfb9270","status":"passed","time":{"start":1701739134184,"stop":1701739143751,"duration":9567}},{"uid":"814f86aed152793","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/160//#testresult/814f86aed152793","status":"passed","time":{"start":1701652950360,"stop":1701652960364,"duration":10004}},{"uid":"b1fa0cd1aeab6237","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/159//#testresult/b1fa0cd1aeab6237","status":"passed","time":{"start":1701566660679,"stop":1701566670393,"duration":9714}},{"uid":"51222b3fc16874ac","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/158//#testresult/51222b3fc16874ac","status":"passed","time":{"start":1701479927686,"stop":1701479937584,"duration":9898}},{"uid":"26a86557885b00cb","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/157//#testresult/26a86557885b00cb","status":"passed","time":{"start":1701394108589,"stop":1701394119075,"duration":10486}},{"uid":"59cfa915e8301dac","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/156//#testresult/59cfa915e8301dac","status":"passed","time":{"start":1701307199219,"stop":1701307209024,"duration":9805}},{"uid":"3c9fb334599e8d49","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/155//#testresult/3c9fb334599e8d49","status":"passed","time":{"start":1701220806142,"stop":1701220815582,"duration":9440}},{"uid":"bb9752b9cd1c0d99","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/154//#testresult/bb9752b9cd1c0d99","status":"passed","time":{"start":1701134410067,"stop":1701134419916,"duration":9849}},{"uid":"668d141e86c30677","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/153//#testresult/668d141e86c30677","status":"passed","time":{"start":1701048052670,"stop":1701048062320,"duration":9650}},{"uid":"3bdda282c14d1437","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/152//#testresult/3bdda282c14d1437","status":"passed","time":{"start":1700962011658,"stop":1700962022159,"duration":10501}},{"uid":"5da24276325f1a66","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/151//#testresult/5da24276325f1a66","status":"passed","time":{"start":1700875040171,"stop":1700875049393,"duration":9222}}]},"tags":["smoke_test"]},"source":"726191877a24d565.json","parameterValues":["'https://stroyrem-nn.ru/catalog/shlifovalnye-mashiny'"]}