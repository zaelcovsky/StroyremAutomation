{"uid":"72f9bd56c7041dbb","name":"Авторизация с помощью аккаунта mail.ru","fullName":"tests.test_sign_in.test_sign_in_page.TestSignInPage#test_positive_authorization_first_time_using_MAIL_smoke","historyId":"f4f3772e4e299a8f841d74c91831025e","time":{"start":1693012314036,"stop":1693012334817,"duration":20781},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"self = <tests.test_sign_in.test_sign_in_page.TestSignInPage object at 0x7f8adb9143d0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"321b78b6dd96054ea079cba054037c7d\")>\nsign_in_page = <pages.sign_in_page.SignInPage object at 0x7f8adb562d10>\nopen_sign_in_window = None\n\n    @allure.title(\"Авторизация с помощью аккаунта mail.ru\")\n    @pytest.mark.smoke_test\n    def test_positive_authorization_first_time_using_MAIL_smoke(self, driver, sign_in_page, open_sign_in_window):\n        sign_in_page.get_mail_auth_icon().click()\n        driver.switch_to.window(driver.window_handles[1])\n        sign_in_page.get_mail_ru_window_email_field().send_keys(credentials['mail.ru_email'])\n        sign_in_page.get_mail_ru_window_password_field().send_keys(credentials['mail.ru_password'])\n        sign_in_page.get_mail_ru_window_submit_button().click()\n        driver.switch_to.window(driver.window_handles[0])\n>       sign_in_page.check_number_of_windows_to_be_equal(1)\n\ntests/test_sign_in/test_sign_in_page.py:54: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nbase/seleniumbase.py:197: in check_number_of_windows_to_be_equal\n    return self.__wait.until(EC.number_of_windows_to_be(number))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"321b78b6dd96054ea079cba054037c7d\")>\nmethod = <function number_of_windows_to_be.<locals>._predicate at 0x7f8adc73ea20>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1693011466597,"stop":1693011466678,"duration":81},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"clear_allure_results_folder","time":{"start":1693011466679,"stop":1693011466679,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"driver","time":{"start":1693012304982,"stop":1693012305802,"duration":820},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"sign_in_page","time":{"start":1693012305802,"stop":1693012313600,"duration":7798},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"setup","time":{"start":1693012305802,"stop":1693012305802,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"open_sign_in_window","time":{"start":1693012313600,"stop":1693012314036,"duration":436},"status":"passed","steps":[{"name":"Нахождение элемента: иконка профиля в хедере","time":{"start":1693012313600,"stop":1693012313614,"duration":14},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"self = <tests.test_sign_in.test_sign_in_page.TestSignInPage object at 0x7f8adb9143d0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"321b78b6dd96054ea079cba054037c7d\")>\nsign_in_page = <pages.sign_in_page.SignInPage object at 0x7f8adb562d10>\nopen_sign_in_window = None\n\n    @allure.title(\"Авторизация с помощью аккаунта mail.ru\")\n    @pytest.mark.smoke_test\n    def test_positive_authorization_first_time_using_MAIL_smoke(self, driver, sign_in_page, open_sign_in_window):\n        sign_in_page.get_mail_auth_icon().click()\n        driver.switch_to.window(driver.window_handles[1])\n        sign_in_page.get_mail_ru_window_email_field().send_keys(credentials['mail.ru_email'])\n        sign_in_page.get_mail_ru_window_password_field().send_keys(credentials['mail.ru_password'])\n        sign_in_page.get_mail_ru_window_submit_button().click()\n        driver.switch_to.window(driver.window_handles[0])\n>       sign_in_page.check_number_of_windows_to_be_equal(1)\n\ntests/test_sign_in/test_sign_in_page.py:54: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nbase/seleniumbase.py:197: in check_number_of_windows_to_be_equal\n    return self.__wait.until(EC.number_of_windows_to_be(number))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"321b78b6dd96054ea079cba054037c7d\")>\nmethod = <function number_of_windows_to_be.<locals>._predicate at 0x7f8adc73ea20>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","steps":[{"name":"Нахождение элемента: иконка 'mail.ru' окна авторизации","time":{"start":1693012314036,"stop":1693012314058,"duration":22},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Нахождение элемента: поле 'Email' окна авторизации через 'mail.ru'","time":{"start":1693012314130,"stop":1693012316966,"duration":2836},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Нахождение элемента: поле 'Пароль' окна авторизации через 'mail.ru'","time":{"start":1693012317059,"stop":1693012317074,"duration":15},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Нахождение элемента: кнопка 'Войти' окна авторизации через 'mail.ru'","time":{"start":1693012317149,"stop":1693012317167,"duration":18},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[{"uid":"6610cd5b1414182f","name":"Screenshot","source":"6610cd5b1414182f.png","type":"image/png","size":38552},{"uid":"1b9f39aaf4f37f5e","name":"HTML source","source":"1b9f39aaf4f37f5e.html","type":"text/html","size":399179}],"parameters":[],"stepsCount":4,"attachmentsCount":2,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"driver::0","time":{"start":1693012335017,"stop":1693012335088,"duration":71},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"setup::0","time":{"start":1693012335017,"stop":1693012335017,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"epic","value":"Sign In Page"},{"name":"tag","value":"smoke_test"},{"name":"parentSuite","value":"tests.test_sign_in"},{"name":"suite","value":"test_sign_in_page"},{"name":"subSuite","value":"TestSignInPage"},{"name":"host","value":"40ee7c7a4f9d"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_sign_in.test_sign_in_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":5,"skipped":2,"passed":23,"unknown":0,"total":30},"items":[{"uid":"9827245e3ba0e8c","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/59//#testresult/9827245e3ba0e8c","status":"passed","time":{"start":1692925981750,"stop":1692925997224,"duration":15474}},{"uid":"6238ea430f7475c7","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/58//#testresult/6238ea430f7475c7","status":"passed","time":{"start":1692839433821,"stop":1692839448681,"duration":14860}},{"uid":"85e44c2edcca1c9e","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/57//#testresult/85e44c2edcca1c9e","status":"passed","time":{"start":1692753163092,"stop":1692753179664,"duration":16572}},{"uid":"5890e4403a48e5b7","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/56//#testresult/5890e4403a48e5b7","status":"passed","time":{"start":1692666714820,"stop":1692666730919,"duration":16099}},{"uid":"c0ecd8dff99e49a8","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/55//#testresult/c0ecd8dff99e49a8","status":"passed","time":{"start":1692580214239,"stop":1692580229754,"duration":15515}},{"uid":"93a77362653f08b","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/54//#testresult/93a77362653f08b","status":"passed","time":{"start":1692494010097,"stop":1692494025364,"duration":15267}},{"uid":"659e0644e34d4677","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/53//#testresult/659e0644e34d4677","status":"passed","time":{"start":1692407443747,"stop":1692407459530,"duration":15783}},{"uid":"8a83e1d1e775e6d2","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/52//#testresult/8a83e1d1e775e6d2","status":"passed","time":{"start":1692321154484,"stop":1692321171049,"duration":16565}},{"uid":"47a797028ad8fb03","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/51//#testresult/47a797028ad8fb03","status":"passed","time":{"start":1692234606269,"stop":1692234621203,"duration":14934}},{"uid":"b1dcd86297a6f6e4","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/50//#testresult/b1dcd86297a6f6e4","status":"passed","time":{"start":1692148417088,"stop":1692148433362,"duration":16274}},{"uid":"81add8d0eee795c2","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/49//#testresult/81add8d0eee795c2","status":"passed","time":{"start":1692061782346,"stop":1692061797557,"duration":15211}},{"uid":"78df7b7bd5e80e34","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/48//#testresult/78df7b7bd5e80e34","status":"passed","time":{"start":1692014776529,"stop":1692014793711,"duration":17182}},{"uid":"e71e4748c09f6642","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/37//#testresult/e71e4748c09f6642","status":"passed","time":{"start":1691964430199,"stop":1691964447454,"duration":17255}},{"uid":"33b479fb5cbaaad2","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/36//#testresult/33b479fb5cbaaad2","status":"passed","time":{"start":1691963517888,"stop":1691963532831,"duration":14943}},{"uid":"53c7528734a5af20","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/35//#testresult/53c7528734a5af20","status":"passed","time":{"start":1691962935000,"stop":1691962950428,"duration":15428}},{"uid":"a37daa2afe722457","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/34//#testresult/a37daa2afe722457","status":"passed","time":{"start":1691888534186,"stop":1691888551564,"duration":17378}},{"uid":"34e9a347ac7ed237","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/33//#testresult/34e9a347ac7ed237","status":"passed","time":{"start":1691801873435,"stop":1691801889560,"duration":16125}},{"uid":"a140de7d1ce8faf1","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/32//#testresult/a140de7d1ce8faf1","status":"passed","time":{"start":1691715531151,"stop":1691715547498,"duration":16347}},{"uid":"be5f3e253d3e8c87","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/31//#testresult/be5f3e253d3e8c87","status":"passed","time":{"start":1691687156142,"stop":1691687172394,"duration":16252}},{"uid":"7d62b8f9553f785f","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/30//#testresult/7d62b8f9553f785f","status":"passed","time":{"start":1691630538203,"stop":1691630554606,"duration":16403}}]},"tags":["smoke_test"]},"source":"72f9bd56c7041dbb.json","parameterValues":[]}