{"uid":"68ba86f996883369","name":"positive_check_there_is_no_discount_for_unauthorized_customer_red_prices_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_check_there_is_no_discount_for_unauthorized_customer_red_prices_smoke","historyId":"ae0b03f524f3687047fb70a412376bdb","time":{"start":1705281665303,"stop":1705281669635,"duration":4332},"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: chrome-headless-shell=120.0.6099.109); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x5609881d5f83 <unknown>\n#1 0x560987e8ecf7 <unknown>\n#2 0x560987e952a3 <unknown>\n#3 0x560987e97798 <unknown>\n#4 0x560987e978ec <unknown>\n#5 0x560987ed8a36 <unknown>\n#6 0x560987f080b2 <unknown>\n#7 0x560987ed1b49 <unknown>\n#8 0x560987f084ce <unknown>\n#9 0x560987f27006 <unknown>\n#10 0x560987f07e53 <unknown>\n#11 0x560987ecfdd4 <unknown>\n#12 0x560987ed11de <unknown>\n#13 0x56098819a531 <unknown>\n#14 0x56098819e455 <unknown>\n#15 0x560988186f55 <unknown>\n#16 0x56098819f0ef <unknown>\n#17 0x56098816a99f <unknown>\n#18 0x5609881c3008 <unknown>\n#19 0x5609881c31d7 <unknown>\n#20 0x5609881d5124 <unknown>\n#21 0x7fa8096c2044 <unknown>","statusTrace":"self = <test_products_on_sale_page.TestProductsOnSalePage object at 0x7fbbb190efd0>\nlink = 'https://stroyrem-nn.ru/catalog/action'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7fbbb0522690>\n\n    @allure.title(\"positive_check_there_is_no_discount_for_unauthorized_customer_red_prices_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{ACTION_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{ACTION_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_there_is_no_discount_for_unauthorized_customer_red_prices_smoke(\n            self, link, product_page_open):\n        product_page_open.get_in_stock_products_link().click()\n        time.sleep(2)\n        product_page_open.get_text_red_link().click()\n        time.sleep(2)\n>       product_page_open.get_add_to_cart_btn().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:262: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/products_on_sale_page.py:60: in get_add_to_cart_btn\n    return self.element_is_clickable(self._add_to_cart_btn)\nbase/seleniumbase.py:86: in element_is_clickable\n    return self.__wait.until(EC.element_to_be_clickable(locator))\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:86: in until\n    value = method(self._driver)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/support/expected_conditions.py:357: in _predicate\n    if target and target.is_enabled():\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:192: in is_enabled\n    return self._execute(Command.IS_ELEMENT_ENABLED)[\"value\"]\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:346: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fbbb05226d0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#19 0x5609881c31d7 \\\\u003Cunknown>\\\\n#20 0x5609881d5124 \\\\u003Cunknown>\\\\n#21 0x7fa8096c2044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\nE         (Session info: chrome-headless-shell=120.0.6099.109); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x5609881d5f83 <unknown>\nE       #1 0x560987e8ecf7 <unknown>\nE       #2 0x560987e952a3 <unknown>\nE       #3 0x560987e97798 <unknown>\nE       #4 0x560987e978ec <unknown>\nE       #5 0x560987ed8a36 <unknown>\nE       #6 0x560987f080b2 <unknown>\nE       #7 0x560987ed1b49 <unknown>\nE       #8 0x560987f084ce <unknown>\nE       #9 0x560987f27006 <unknown>\nE       #10 0x560987f07e53 <unknown>\nE       #11 0x560987ecfdd4 <unknown>\nE       #12 0x560987ed11de <unknown>\nE       #13 0x56098819a531 <unknown>\nE       #14 0x56098819e455 <unknown>\nE       #15 0x560988186f55 <unknown>\nE       #16 0x56098819f0ef <unknown>\nE       #17 0x56098816a99f <unknown>\nE       #18 0x5609881c3008 <unknown>\nE       #19 0x5609881c31d7 <unknown>\nE       #20 0x5609881d5124 <unknown>\nE       #21 0x7fa8096c2044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: StaleElementReferenceException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1705280855200,"stop":1705280855270,"duration":70},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_results_folder","time":{"start":1705280855271,"stop":1705280855271,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1705281657047,"stop":1705281657786,"duration":739},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1705281657786,"stop":1705281657786,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"product_page_open","time":{"start":1705281657787,"stop":1705281665302,"duration":7515},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: chrome-headless-shell=120.0.6099.109); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x5609881d5f83 <unknown>\n#1 0x560987e8ecf7 <unknown>\n#2 0x560987e952a3 <unknown>\n#3 0x560987e97798 <unknown>\n#4 0x560987e978ec <unknown>\n#5 0x560987ed8a36 <unknown>\n#6 0x560987f080b2 <unknown>\n#7 0x560987ed1b49 <unknown>\n#8 0x560987f084ce <unknown>\n#9 0x560987f27006 <unknown>\n#10 0x560987f07e53 <unknown>\n#11 0x560987ecfdd4 <unknown>\n#12 0x560987ed11de <unknown>\n#13 0x56098819a531 <unknown>\n#14 0x56098819e455 <unknown>\n#15 0x560988186f55 <unknown>\n#16 0x56098819f0ef <unknown>\n#17 0x56098816a99f <unknown>\n#18 0x5609881c3008 <unknown>\n#19 0x5609881c31d7 <unknown>\n#20 0x5609881d5124 <unknown>\n#21 0x7fa8096c2044 <unknown>","statusTrace":"self = <test_products_on_sale_page.TestProductsOnSalePage object at 0x7fbbb190efd0>\nlink = 'https://stroyrem-nn.ru/catalog/action'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7fbbb0522690>\n\n    @allure.title(\"positive_check_there_is_no_discount_for_unauthorized_customer_red_prices_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{ACTION_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{ACTION_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_there_is_no_discount_for_unauthorized_customer_red_prices_smoke(\n            self, link, product_page_open):\n        product_page_open.get_in_stock_products_link().click()\n        time.sleep(2)\n        product_page_open.get_text_red_link().click()\n        time.sleep(2)\n>       product_page_open.get_add_to_cart_btn().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:262: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/products_on_sale_page.py:60: in get_add_to_cart_btn\n    return self.element_is_clickable(self._add_to_cart_btn)\nbase/seleniumbase.py:86: in element_is_clickable\n    return self.__wait.until(EC.element_to_be_clickable(locator))\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:86: in until\n    value = method(self._driver)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/support/expected_conditions.py:357: in _predicate\n    if target and target.is_enabled():\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:192: in is_enabled\n    return self._execute(Command.IS_ELEMENT_ENABLED)[\"value\"]\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:346: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fbbb05226d0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#19 0x5609881c31d7 \\\\u003Cunknown>\\\\n#20 0x5609881d5124 \\\\u003Cunknown>\\\\n#21 0x7fa8096c2044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\nE         (Session info: chrome-headless-shell=120.0.6099.109); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x5609881d5f83 <unknown>\nE       #1 0x560987e8ecf7 <unknown>\nE       #2 0x560987e952a3 <unknown>\nE       #3 0x560987e97798 <unknown>\nE       #4 0x560987e978ec <unknown>\nE       #5 0x560987ed8a36 <unknown>\nE       #6 0x560987f080b2 <unknown>\nE       #7 0x560987ed1b49 <unknown>\nE       #8 0x560987f084ce <unknown>\nE       #9 0x560987f27006 <unknown>\nE       #10 0x560987f07e53 <unknown>\nE       #11 0x560987ecfdd4 <unknown>\nE       #12 0x560987ed11de <unknown>\nE       #13 0x56098819a531 <unknown>\nE       #14 0x56098819e455 <unknown>\nE       #15 0x560988186f55 <unknown>\nE       #16 0x56098819f0ef <unknown>\nE       #17 0x56098816a99f <unknown>\nE       #18 0x5609881c3008 <unknown>\nE       #19 0x5609881c31d7 <unknown>\nE       #20 0x5609881d5124 <unknown>\nE       #21 0x7fa8096c2044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: StaleElementReferenceException","steps":[{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1705281665303,"stop":1705281665359,"duration":56},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем кликабельность кнопки 'Красная цена!'","time":{"start":1705281667419,"stop":1705281667463,"duration":44},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем кликабельность кнопки 'В корзину'","time":{"start":1705281669500,"stop":1705281669634,"duration":134},"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: chrome-headless-shell=120.0.6099.109); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x5609881d5f83 <unknown>\n#1 0x560987e8ecf7 <unknown>\n#2 0x560987e952a3 <unknown>\n#3 0x560987e97798 <unknown>\n#4 0x560987e978ec <unknown>\n#5 0x560987ed8a36 <unknown>\n#6 0x560987f080b2 <unknown>\n#7 0x560987ed1b49 <unknown>\n#8 0x560987f084ce <unknown>\n#9 0x560987f27006 <unknown>\n#10 0x560987f07e53 <unknown>\n#11 0x560987ecfdd4 <unknown>\n#12 0x560987ed11de <unknown>\n#13 0x56098819a531 <unknown>\n#14 0x56098819e455 <unknown>\n#15 0x560988186f55 <unknown>\n#16 0x56098819f0ef <unknown>\n#17 0x56098816a99f <unknown>\n#18 0x5609881c3008 <unknown>\n#19 0x5609881c31d7 <unknown>\n#20 0x5609881d5124 <unknown>\n#21 0x7fa8096c2044 <unknown>\n\n","statusTrace":"  File \"/usr/local/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/app/pages/products_on_sale_page.py\", line 60, in get_add_to_cart_btn\n    return self.element_is_clickable(self._add_to_cart_btn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/app/base/seleniumbase.py\", line 86, in element_is_clickable\n    return self.__wait.until(EC.element_to_be_clickable(locator))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/support/wait.py\", line 86, in until\n    value = method(self._driver)\n            ^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/support/expected_conditions.py\", line 357, in _predicate\n    if target and target.is_enabled():\n                  ^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 192, in is_enabled\n    return self._execute(Command.IS_ELEMENT_ENABLED)[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 346, in execute\n    self.error_handler.check_response(response)\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 245, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"47596958335d2dd7","name":"Screenshot","source":"47596958335d2dd7.png","type":"image/png","size":252590},{"uid":"3cd75888227627fd","name":"HTML source","source":"3cd75888227627fd.html","type":"text/html","size":860005}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1705281669842,"stop":1705281669842,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver::0","time":{"start":1705281669842,"stop":1705281669915,"duration":73},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"f1fbb71af203"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://stroyrem-nn.ru/catalog/action'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":135,"unknown":0,"total":138},"items":[{"uid":"fa94d4cbeacf83f0","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/201//#testresult/fa94d4cbeacf83f0","status":"passed","time":{"start":1705195478859,"stop":1705195487527,"duration":8668}},{"uid":"21f74daf6b4bb0e0","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/200//#testresult/21f74daf6b4bb0e0","status":"passed","time":{"start":1705108768469,"stop":1705108776854,"duration":8385}},{"uid":"e86e992933dbc3d2","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/199//#testresult/e86e992933dbc3d2","status":"passed","time":{"start":1705022402889,"stop":1705022412515,"duration":9626}},{"uid":"2cf3b6ffd527d37b","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/198//#testresult/2cf3b6ffd527d37b","status":"passed","time":{"start":1704935899493,"stop":1704935907739,"duration":8246}},{"uid":"3a315c130950c816","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/197//#testresult/3a315c130950c816","status":"passed","time":{"start":1704849493414,"stop":1704849501240,"duration":7826}},{"uid":"e755c38c1a1f3d0a","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/196//#testresult/e755c38c1a1f3d0a","status":"passed","time":{"start":1704763089741,"stop":1704763097372,"duration":7631}},{"uid":"40aa63a00aec49ac","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/195//#testresult/40aa63a00aec49ac","status":"passed","time":{"start":1704676835153,"stop":1704676844353,"duration":9200}},{"uid":"e005d70e5d0b294c","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/194//#testresult/e005d70e5d0b294c","status":"passed","time":{"start":1704590735290,"stop":1704590744076,"duration":8786}},{"uid":"e3c4ffd8bd830c87","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/193//#testresult/e3c4ffd8bd830c87","status":"passed","time":{"start":1704503762387,"stop":1704503770255,"duration":7868}},{"uid":"39ed26e4c1c4c2fc","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/192//#testresult/39ed26e4c1c4c2fc","status":"passed","time":{"start":1704417421078,"stop":1704417428705,"duration":7627}},{"uid":"be2b544cbadc7b4f","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/191//#testresult/be2b544cbadc7b4f","status":"passed","time":{"start":1704331146760,"stop":1704331156177,"duration":9417}},{"uid":"537feb149e4229ca","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/190//#testresult/537feb149e4229ca","status":"passed","time":{"start":1704244594256,"stop":1704244602168,"duration":7912}},{"uid":"2c783f2c74deaba1","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/189//#testresult/2c783f2c74deaba1","status":"passed","time":{"start":1704158116788,"stop":1704158124815,"duration":8027}},{"uid":"b10bbaee8890e033","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/188//#testresult/b10bbaee8890e033","status":"passed","time":{"start":1704072231158,"stop":1704072239883,"duration":8725}},{"uid":"bc24f7aba79e8583","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/187//#testresult/bc24f7aba79e8583","status":"passed","time":{"start":1703985667291,"stop":1703985675454,"duration":8163}},{"uid":"2f0cf127ed12a817","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/186//#testresult/2f0cf127ed12a817","status":"passed","time":{"start":1703898973053,"stop":1703898981568,"duration":8515}},{"uid":"c2bf7741d44c8608","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/185//#testresult/c2bf7741d44c8608","status":"passed","time":{"start":1703811946862,"stop":1703811954600,"duration":7738}},{"uid":"56d45a254066aa1a","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/184//#testresult/56d45a254066aa1a","status":"passed","time":{"start":1703726086024,"stop":1703726094096,"duration":8072}},{"uid":"133cc7981104355","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/183//#testresult/133cc7981104355","status":"passed","time":{"start":1703639799659,"stop":1703639808876,"duration":9217}},{"uid":"748291ffc0a75629","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/182//#testresult/748291ffc0a75629","status":"passed","time":{"start":1703553243486,"stop":1703553251378,"duration":7892}}]},"tags":["smoke_test"]},"source":"68ba86f996883369.json","parameterValues":["'https://stroyrem-nn.ru/catalog/action'"]}