{"uid":"cae9042b051e932f","name":"positive_check_discount_displayed_for_unauthorized_customer_for_amount_50_3499rub_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_check_discount_for_unauthorized_customer_for_amount_50_3499rub_smoke","historyId":"30a4f622139d182a129f4a7eaccc059b","time":{"start":1692407306930,"stop":1692407317162,"duration":10232},"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: headless chrome=116.0.5845.96); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x56177747ae23 <unknown>\n#1 0x5617771a37a7 <unknown>\n#2 0x5617771a7d1e <unknown>\n#3 0x5617771a9859 <unknown>\n#4 0x56177721be4f <unknown>\n#5 0x561777203012 <unknown>\n#6 0x56177721b369 <unknown>\n#7 0x561777202de3 <unknown>\n#8 0x5617771d6a7b <unknown>\n#9 0x5617771d781e <unknown>\n#10 0x56177743c638 <unknown>\n#11 0x561777440507 <unknown>\n#12 0x56177744ac4c <unknown>\n#13 0x561777441136 <unknown>\n#14 0x56177740f9cf <unknown>\n#15 0x561777464b98 <unknown>\n#16 0x561777464d68 <unknown>\n#17 0x561777473cb3 <unknown>\n#18 0x7f7b6a69e044 <unknown>","statusTrace":"self = <test_products_on_sale_page.TestProductsOnSalePage object at 0x7f106cb79390>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"bfb2e0d0b1cba286c7d3f6da31312a9f\")>\nlink = 'https://stroyrem-nn.ru/catalog/kisti-malyarnye'\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_50_3499rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{KISTI_MALYARNYE_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{KISTI_MALYARNYE_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_discount_for_unauthorized_customer_for_amount_50_3499rub_smoke(self, driver, link):\n        page = ProductsOnSale(driver)\n        driver.get(link)\n        page.get_field_price_first().send_keys(50)\n        page.get_field_price_last().send_keys(3499)\n        page.get_in_stock_products_link().click()\n        time.sleep(1)\n>       price = (float(page.get_pc_price().text[:-2].replace(' ', '')))\n\ntests/test_products_on_sale/test_products_on_sale_page.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/products_on_sale_page.py:42: in get_pc_price\n    return self.element_is_visible(self._pc_price)\nbase/seleniumbase.py:39: in element_is_visible\n    self.go_to_element(self.element_is_present(locator))\nbase/seleniumbase.py:96: in go_to_element\n    self.driver.execute_script(\"arguments[0].scrollIntoView();\", element)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:406: in execute_script\n    return self.execute(command, {\"script\": script, \"args\": converted_args})[\"value\"]\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:346: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f106d6fb450>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#16 0x561777464d68 \\\\u003Cunknown>\\\\n#17 0x561777473cb3 \\\\u003Cunknown>\\\\n#18 0x7f7b6a69e044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\nE         (Session info: headless chrome=116.0.5845.96); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x56177747ae23 <unknown>\nE       #1 0x5617771a37a7 <unknown>\nE       #2 0x5617771a7d1e <unknown>\nE       #3 0x5617771a9859 <unknown>\nE       #4 0x56177721be4f <unknown>\nE       #5 0x561777203012 <unknown>\nE       #6 0x56177721b369 <unknown>\nE       #7 0x561777202de3 <unknown>\nE       #8 0x5617771d6a7b <unknown>\nE       #9 0x5617771d781e <unknown>\nE       #10 0x56177743c638 <unknown>\nE       #11 0x561777440507 <unknown>\nE       #12 0x56177744ac4c <unknown>\nE       #13 0x561777441136 <unknown>\nE       #14 0x56177740f9cf <unknown>\nE       #15 0x561777464b98 <unknown>\nE       #16 0x561777464d68 <unknown>\nE       #17 0x561777473cb3 <unknown>\nE       #18 0x7f7b6a69e044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: StaleElementReferenceException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1692406599494,"stop":1692406599565,"duration":71},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"clear_allure_results_folder","time":{"start":1692406599565,"stop":1692406599565,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"driver","time":{"start":1692407306159,"stop":1692407306929,"duration":770},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"setup","time":{"start":1692407306929,"stop":1692407306929,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: headless chrome=116.0.5845.96); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x56177747ae23 <unknown>\n#1 0x5617771a37a7 <unknown>\n#2 0x5617771a7d1e <unknown>\n#3 0x5617771a9859 <unknown>\n#4 0x56177721be4f <unknown>\n#5 0x561777203012 <unknown>\n#6 0x56177721b369 <unknown>\n#7 0x561777202de3 <unknown>\n#8 0x5617771d6a7b <unknown>\n#9 0x5617771d781e <unknown>\n#10 0x56177743c638 <unknown>\n#11 0x561777440507 <unknown>\n#12 0x56177744ac4c <unknown>\n#13 0x561777441136 <unknown>\n#14 0x56177740f9cf <unknown>\n#15 0x561777464b98 <unknown>\n#16 0x561777464d68 <unknown>\n#17 0x561777473cb3 <unknown>\n#18 0x7f7b6a69e044 <unknown>","statusTrace":"self = <test_products_on_sale_page.TestProductsOnSalePage object at 0x7f106cb79390>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"bfb2e0d0b1cba286c7d3f6da31312a9f\")>\nlink = 'https://stroyrem-nn.ru/catalog/kisti-malyarnye'\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_50_3499rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{KISTI_MALYARNYE_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{KISTI_MALYARNYE_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_discount_for_unauthorized_customer_for_amount_50_3499rub_smoke(self, driver, link):\n        page = ProductsOnSale(driver)\n        driver.get(link)\n        page.get_field_price_first().send_keys(50)\n        page.get_field_price_last().send_keys(3499)\n        page.get_in_stock_products_link().click()\n        time.sleep(1)\n>       price = (float(page.get_pc_price().text[:-2].replace(' ', '')))\n\ntests/test_products_on_sale/test_products_on_sale_page.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/products_on_sale_page.py:42: in get_pc_price\n    return self.element_is_visible(self._pc_price)\nbase/seleniumbase.py:39: in element_is_visible\n    self.go_to_element(self.element_is_present(locator))\nbase/seleniumbase.py:96: in go_to_element\n    self.driver.execute_script(\"arguments[0].scrollIntoView();\", element)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:406: in execute_script\n    return self.execute(command, {\"script\": script, \"args\": converted_args})[\"value\"]\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:346: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f106d6fb450>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#16 0x561777464d68 \\\\u003Cunknown>\\\\n#17 0x561777473cb3 \\\\u003Cunknown>\\\\n#18 0x7f7b6a69e044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\nE         (Session info: headless chrome=116.0.5845.96); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x56177747ae23 <unknown>\nE       #1 0x5617771a37a7 <unknown>\nE       #2 0x5617771a7d1e <unknown>\nE       #3 0x5617771a9859 <unknown>\nE       #4 0x56177721be4f <unknown>\nE       #5 0x561777203012 <unknown>\nE       #6 0x56177721b369 <unknown>\nE       #7 0x561777202de3 <unknown>\nE       #8 0x5617771d6a7b <unknown>\nE       #9 0x5617771d781e <unknown>\nE       #10 0x56177743c638 <unknown>\nE       #11 0x561777440507 <unknown>\nE       #12 0x56177744ac4c <unknown>\nE       #13 0x561777441136 <unknown>\nE       #14 0x56177740f9cf <unknown>\nE       #15 0x561777464b98 <unknown>\nE       #16 0x561777464d68 <unknown>\nE       #17 0x561777473cb3 <unknown>\nE       #18 0x7f7b6a69e044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: StaleElementReferenceException","steps":[{"name":"Проверяем видимость поля 'ЦЕНА от'","time":{"start":1692407314647,"stop":1692407314701,"duration":54},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Проверяем видимость поля 'ЦЕНА до'","time":{"start":1692407314801,"stop":1692407314848,"duration":47},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Проверяем видимость кнопки 'На складе'","time":{"start":1692407314910,"stop":1692407314952,"duration":42},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Проверяем видимость цены товара","time":{"start":1692407317017,"stop":1692407317161,"duration":144},"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: headless chrome=116.0.5845.96); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x56177747ae23 <unknown>\n#1 0x5617771a37a7 <unknown>\n#2 0x5617771a7d1e <unknown>\n#3 0x5617771a9859 <unknown>\n#4 0x56177721be4f <unknown>\n#5 0x561777203012 <unknown>\n#6 0x56177721b369 <unknown>\n#7 0x561777202de3 <unknown>\n#8 0x5617771d6a7b <unknown>\n#9 0x5617771d781e <unknown>\n#10 0x56177743c638 <unknown>\n#11 0x561777440507 <unknown>\n#12 0x56177744ac4c <unknown>\n#13 0x561777441136 <unknown>\n#14 0x56177740f9cf <unknown>\n#15 0x561777464b98 <unknown>\n#16 0x561777464d68 <unknown>\n#17 0x561777473cb3 <unknown>\n#18 0x7f7b6a69e044 <unknown>\n\n","statusTrace":"  File \"/usr/local/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/app/pages/products_on_sale_page.py\", line 42, in get_pc_price\n    return self.element_is_visible(self._pc_price)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/app/base/seleniumbase.py\", line 39, in element_is_visible\n    self.go_to_element(self.element_is_present(locator))\n  File \"/app/base/seleniumbase.py\", line 96, in go_to_element\n    self.driver.execute_script(\"arguments[0].scrollIntoView();\", element)\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 406, in execute_script\n    return self.execute(command, {\"script\": script, \"args\": converted_args})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 346, in execute\n    self.error_handler.check_response(response)\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 245, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[{"uid":"6a98a0e41e7f54b3","name":"Screenshot","source":"6a98a0e41e7f54b3.png","type":"image/png","size":161715},{"uid":"719eeff1a6e213d9","name":"HTML source","source":"719eeff1a6e213d9.html","type":"text/html","size":903085}],"parameters":[],"stepsCount":4,"attachmentsCount":2,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"driver::0","time":{"start":1692407317425,"stop":1692407317489,"duration":64},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"setup::0","time":{"start":1692407317425,"stop":1692407317425,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"a00d2879fe8a"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://stroyrem-nn.ru/catalog/kisti-malyarnye'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":4,"unknown":0,"total":5},"items":[{"uid":"6b7e89f1271d861","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/52//#testresult/6b7e89f1271d861","status":"passed","time":{"start":1692321016208,"stop":1692321030831,"duration":14623}},{"uid":"1de49acc051fb426","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/51//#testresult/1de49acc051fb426","status":"passed","time":{"start":1692234478691,"stop":1692234491664,"duration":12973}},{"uid":"e3ef940827f996c9","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/50//#testresult/e3ef940827f996c9","status":"passed","time":{"start":1692148338208,"stop":1692148354963,"duration":16755}},{"uid":"208b62f00694708b","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/49//#testresult/208b62f00694708b","status":"passed","time":{"start":1692061719721,"stop":1692061732651,"duration":12930}}]},"tags":["smoke_test"]},"source":"cae9042b051e932f.json","parameterValues":["'https://stroyrem-nn.ru/catalog/kisti-malyarnye'"]}