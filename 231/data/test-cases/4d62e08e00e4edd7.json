{"uid":"4d62e08e00e4edd7","name":"positive_check_there_is_no_discount_for_unauthorized_customer_red_prices_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_check_there_is_no_discount_for_unauthorized_customer_red_prices_smoke","historyId":"ae0b03f524f3687047fb70a412376bdb","time":{"start":1707786985840,"stop":1707786992088,"duration":6248},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a data-pid=\"22439\" href=\"javascript:void(0)\" class=\"add-to-cart yellow-btn\" \"=\"\" data-ya=\"{&quot;id&quot;:&quot;26491&quot;, &quot;price&quot;:355.00, &quot;variant&quot;:&quot;&quot;, &quot;name&quot;:&quot;Клей для плитки Юнис 3000 МАХ выравнивающий 25 кг&quot;, &quot;category&quot;:&quot;Плиточные клеи&quot;, &quot;brand&quot;:&quot;Unis&quot;, &quot;url&quot;:&quot;klej-dlya-plitki-yunis-3000-mah-tolstoslojnyj-25-kg&quot;}\">...</a> is not clickable at point (540, 20). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=121.0.6167.85)\nStacktrace:\n#0 0x5604842e6d93 <unknown>\n#1 0x560483fca337 <unknown>\n#2 0x56048401ce2e <unknown>\n#3 0x56048401abd0 <unknown>\n#4 0x56048401844a <unknown>\n#5 0x560484017226 <unknown>\n#6 0x56048400a6b7 <unknown>\n#7 0x560484038442 <unknown>\n#8 0x56048400a028 <unknown>\n#9 0x56048403860e <unknown>\n#10 0x56048405712d <unknown>\n#11 0x5604840381e3 <unknown>\n#12 0x560484008135 <unknown>\n#13 0x56048400913e <unknown>\n#14 0x5604842aae4b <unknown>\n#15 0x5604842aedfa <unknown>\n#16 0x5604842976d5 <unknown>\n#17 0x5604842afa6f <unknown>\n#18 0x56048427b69f <unknown>\n#19 0x5604842d4098 <unknown>\n#20 0x5604842d4262 <unknown>\n#21 0x5604842e5f34 <unknown>\n#22 0x7f335741c134 <unknown>","statusTrace":"self = <test_products_on_sale_page.TestProductsOnSalePage object at 0x7f190ec63b10>\nlink = 'https://stroyrem-nn.ru/catalog/action'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f190e232310>\n\n    @allure.title(\"positive_check_there_is_no_discount_for_unauthorized_customer_red_prices_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{ACTION_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{ACTION_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_there_is_no_discount_for_unauthorized_customer_red_prices_smoke(\n            self, link, product_page_open):\n        product_page_open.get_in_stock_products_link().click()\n        time.sleep(2)\n        product_page_open.get_text_red_link().click()\n        time.sleep(2)\n>       product_page_open.get_add_to_cart_btn().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:262: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:346: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f190cf4df50>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x5604842d4262 \\\\u003Cunknown>\\\\n#21 0x5604842e5f34 \\\\u003Cunknown>\\\\n#22 0x7f335741c134 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a data-pid=\"22439\" href=\"javascript:void(0)\" class=\"add-to-cart yellow-btn\" \"=\"\" data-ya=\"{&quot;id&quot;:&quot;26491&quot;, &quot;price&quot;:355.00, &quot;variant&quot;:&quot;&quot;, &quot;name&quot;:&quot;Клей для плитки Юнис 3000 МАХ выравнивающий 25 кг&quot;, &quot;category&quot;:&quot;Плиточные клеи&quot;, &quot;brand&quot;:&quot;Unis&quot;, &quot;url&quot;:&quot;klej-dlya-plitki-yunis-3000-mah-tolstoslojnyj-25-kg&quot;}\">...</a> is not clickable at point (540, 20). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: chrome-headless-shell=121.0.6167.85)\nE       Stacktrace:\nE       #0 0x5604842e6d93 <unknown>\nE       #1 0x560483fca337 <unknown>\nE       #2 0x56048401ce2e <unknown>\nE       #3 0x56048401abd0 <unknown>\nE       #4 0x56048401844a <unknown>\nE       #5 0x560484017226 <unknown>\nE       #6 0x56048400a6b7 <unknown>\nE       #7 0x560484038442 <unknown>\nE       #8 0x56048400a028 <unknown>\nE       #9 0x56048403860e <unknown>\nE       #10 0x56048405712d <unknown>\nE       #11 0x5604840381e3 <unknown>\nE       #12 0x560484008135 <unknown>\nE       #13 0x56048400913e <unknown>\nE       #14 0x5604842aae4b <unknown>\nE       #15 0x5604842aedfa <unknown>\nE       #16 0x5604842976d5 <unknown>\nE       #17 0x5604842afa6f <unknown>\nE       #18 0x56048427b69f <unknown>\nE       #19 0x5604842d4098 <unknown>\nE       #20 0x5604842d4262 <unknown>\nE       #21 0x5604842e5f34 <unknown>\nE       #22 0x7f335741c134 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1707786061393,"stop":1707786061462,"duration":69},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_results_folder","time":{"start":1707786061462,"stop":1707786061462,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1707786972836,"stop":1707786973578,"duration":742},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1707786973578,"stop":1707786973578,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"product_page_open","time":{"start":1707786973579,"stop":1707786985840,"duration":12261},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a data-pid=\"22439\" href=\"javascript:void(0)\" class=\"add-to-cart yellow-btn\" \"=\"\" data-ya=\"{&quot;id&quot;:&quot;26491&quot;, &quot;price&quot;:355.00, &quot;variant&quot;:&quot;&quot;, &quot;name&quot;:&quot;Клей для плитки Юнис 3000 МАХ выравнивающий 25 кг&quot;, &quot;category&quot;:&quot;Плиточные клеи&quot;, &quot;brand&quot;:&quot;Unis&quot;, &quot;url&quot;:&quot;klej-dlya-plitki-yunis-3000-mah-tolstoslojnyj-25-kg&quot;}\">...</a> is not clickable at point (540, 20). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=121.0.6167.85)\nStacktrace:\n#0 0x5604842e6d93 <unknown>\n#1 0x560483fca337 <unknown>\n#2 0x56048401ce2e <unknown>\n#3 0x56048401abd0 <unknown>\n#4 0x56048401844a <unknown>\n#5 0x560484017226 <unknown>\n#6 0x56048400a6b7 <unknown>\n#7 0x560484038442 <unknown>\n#8 0x56048400a028 <unknown>\n#9 0x56048403860e <unknown>\n#10 0x56048405712d <unknown>\n#11 0x5604840381e3 <unknown>\n#12 0x560484008135 <unknown>\n#13 0x56048400913e <unknown>\n#14 0x5604842aae4b <unknown>\n#15 0x5604842aedfa <unknown>\n#16 0x5604842976d5 <unknown>\n#17 0x5604842afa6f <unknown>\n#18 0x56048427b69f <unknown>\n#19 0x5604842d4098 <unknown>\n#20 0x5604842d4262 <unknown>\n#21 0x5604842e5f34 <unknown>\n#22 0x7f335741c134 <unknown>","statusTrace":"self = <test_products_on_sale_page.TestProductsOnSalePage object at 0x7f190ec63b10>\nlink = 'https://stroyrem-nn.ru/catalog/action'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f190e232310>\n\n    @allure.title(\"positive_check_there_is_no_discount_for_unauthorized_customer_red_prices_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{ACTION_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{ACTION_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_there_is_no_discount_for_unauthorized_customer_red_prices_smoke(\n            self, link, product_page_open):\n        product_page_open.get_in_stock_products_link().click()\n        time.sleep(2)\n        product_page_open.get_text_red_link().click()\n        time.sleep(2)\n>       product_page_open.get_add_to_cart_btn().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:262: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:346: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f190cf4df50>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x5604842d4262 \\\\u003Cunknown>\\\\n#21 0x5604842e5f34 \\\\u003Cunknown>\\\\n#22 0x7f335741c134 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a data-pid=\"22439\" href=\"javascript:void(0)\" class=\"add-to-cart yellow-btn\" \"=\"\" data-ya=\"{&quot;id&quot;:&quot;26491&quot;, &quot;price&quot;:355.00, &quot;variant&quot;:&quot;&quot;, &quot;name&quot;:&quot;Клей для плитки Юнис 3000 МАХ выравнивающий 25 кг&quot;, &quot;category&quot;:&quot;Плиточные клеи&quot;, &quot;brand&quot;:&quot;Unis&quot;, &quot;url&quot;:&quot;klej-dlya-plitki-yunis-3000-mah-tolstoslojnyj-25-kg&quot;}\">...</a> is not clickable at point (540, 20). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: chrome-headless-shell=121.0.6167.85)\nE       Stacktrace:\nE       #0 0x5604842e6d93 <unknown>\nE       #1 0x560483fca337 <unknown>\nE       #2 0x56048401ce2e <unknown>\nE       #3 0x56048401abd0 <unknown>\nE       #4 0x56048401844a <unknown>\nE       #5 0x560484017226 <unknown>\nE       #6 0x56048400a6b7 <unknown>\nE       #7 0x560484038442 <unknown>\nE       #8 0x56048400a028 <unknown>\nE       #9 0x56048403860e <unknown>\nE       #10 0x56048405712d <unknown>\nE       #11 0x5604840381e3 <unknown>\nE       #12 0x560484008135 <unknown>\nE       #13 0x56048400913e <unknown>\nE       #14 0x5604842aae4b <unknown>\nE       #15 0x5604842aedfa <unknown>\nE       #16 0x5604842976d5 <unknown>\nE       #17 0x5604842afa6f <unknown>\nE       #18 0x56048427b69f <unknown>\nE       #19 0x5604842d4098 <unknown>\nE       #20 0x5604842d4262 <unknown>\nE       #21 0x5604842e5f34 <unknown>\nE       #22 0x7f335741c134 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: ElementClickInterceptedException","steps":[{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1707786985840,"stop":1707786985901,"duration":61},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем кликабельность кнопки 'Красная цена!'","time":{"start":1707786987958,"stop":1707786988002,"duration":44},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем кликабельность кнопки 'В корзину'","time":{"start":1707786990962,"stop":1707786991015,"duration":53},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"af0049ec58f33602","name":"Screenshot","source":"af0049ec58f33602.png","type":"image/png","size":215816},{"uid":"fdd8bce280bae423","name":"HTML source","source":"fdd8bce280bae423.html","type":"text/html","size":861723}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1707786992364,"stop":1707786992439,"duration":75},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1707786992364,"stop":1707786992364,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"08d980143012"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://stroyrem-nn.ru/catalog/action'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":4,"skipped":0,"passed":163,"unknown":0,"total":167},"items":[{"uid":"3b3b5c8ffc547aec","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/230//#testresult/3b3b5c8ffc547aec","status":"passed","time":{"start":1707700419148,"stop":1707700426699,"duration":7551}},{"uid":"c7650e614eb319aa","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/229//#testresult/c7650e614eb319aa","status":"passed","time":{"start":1707614247330,"stop":1707614255445,"duration":8115}},{"uid":"8f432f63770e5a98","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/228//#testresult/8f432f63770e5a98","status":"passed","time":{"start":1707527453475,"stop":1707527460942,"duration":7467}},{"uid":"1ed18313f1627420","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/227//#testresult/1ed18313f1627420","status":"passed","time":{"start":1707441145528,"stop":1707441153441,"duration":7913}},{"uid":"a54c5e7b8806f884","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/226//#testresult/a54c5e7b8806f884","status":"passed","time":{"start":1707354734835,"stop":1707354742842,"duration":8007}},{"uid":"60c11ff7ae088ae5","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/225//#testresult/60c11ff7ae088ae5","status":"passed","time":{"start":1707268279644,"stop":1707268287823,"duration":8179}},{"uid":"4b20531a88dd77b4","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/224//#testresult/4b20531a88dd77b4","status":"passed","time":{"start":1707181987877,"stop":1707181996206,"duration":8329}},{"uid":"fa9106d471adf171","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/223//#testresult/fa9106d471adf171","status":"passed","time":{"start":1707095714770,"stop":1707095722728,"duration":7958}},{"uid":"cd48bf502697fb1a","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/222//#testresult/cd48bf502697fb1a","status":"passed","time":{"start":1707009470831,"stop":1707009478225,"duration":7394}},{"uid":"71cd2c4043e9ae8d","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/221//#testresult/71cd2c4043e9ae8d","status":"passed","time":{"start":1706922751396,"stop":1706922759568,"duration":8172}},{"uid":"e5c5f68e655efc01","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/220//#testresult/e5c5f68e655efc01","status":"passed","time":{"start":1706836426819,"stop":1706836434911,"duration":8092}},{"uid":"c1df6f6178853805","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/219//#testresult/c1df6f6178853805","status":"passed","time":{"start":1706750361345,"stop":1706750370651,"duration":9306}},{"uid":"cf22acb32b66f970","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/218//#testresult/cf22acb32b66f970","status":"passed","time":{"start":1706663630979,"stop":1706663639078,"duration":8099}},{"uid":"38da4fa727b54d1a","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/217//#testresult/38da4fa727b54d1a","status":"passed","time":{"start":1706577183490,"stop":1706577191649,"duration":8159}},{"uid":"56ae91028427190f","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/216//#testresult/56ae91028427190f","status":"passed","time":{"start":1706490880031,"stop":1706490888441,"duration":8410}},{"uid":"1d7662ed8c12226b","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/215//#testresult/1d7662ed8c12226b","status":"passed","time":{"start":1706404708782,"stop":1706404716789,"duration":8007}},{"uid":"a42d460cd03c403e","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/214//#testresult/a42d460cd03c403e","status":"passed","time":{"start":1706318109618,"stop":1706318118788,"duration":9170}},{"uid":"f39945e77dec23f5","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/213//#testresult/f39945e77dec23f5","status":"passed","time":{"start":1706231666023,"stop":1706231674051,"duration":8028}},{"uid":"d6ff3b5883bf7d75","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/212//#testresult/d6ff3b5883bf7d75","status":"passed","time":{"start":1706149094927,"stop":1706149103284,"duration":8357}},{"uid":"d6a25abdb56c03a0","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/211//#testresult/d6a25abdb56c03a0","status":"passed","time":{"start":1706059194580,"stop":1706059203593,"duration":9013}}]},"tags":["smoke_test"]},"source":"4d62e08e00e4edd7.json","parameterValues":["'https://stroyrem-nn.ru/catalog/action'"]}