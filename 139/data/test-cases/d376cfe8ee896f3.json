{"uid":"d376cfe8ee896f3","name":"positive_discount_for_unauthorized_customer_purchase_amount_50_to_3499rub_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_discount_for_unauthorized_customer_purchase_amount_50_to_3499rub_smoke","historyId":"24bb2201ad02feae4230ec2c85755ba8","time":{"start":1699838479157,"stop":1699838481440,"duration":2283},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=119.0.6045.105)\nStacktrace:\n#0 0x5575cb1625e3 <unknown>\n#1 0x5575cae250b7 <unknown>\n#2 0x5575cae7acfc <unknown>\n#3 0x5575cae7865f <unknown>\n#4 0x5575cae75be4 <unknown>\n#5 0x5575cae74934 <unknown>\n#6 0x5575cae671a0 <unknown>\n#7 0x5575cae99ef2 <unknown>\n#8 0x5575cae66a02 <unknown>\n#9 0x5575cae9a0be <unknown>\n#10 0x5575caeb5b3d <unknown>\n#11 0x5575cae99cc3 <unknown>\n#12 0x5575cae650e4 <unknown>\n#13 0x5575cae660ae <unknown>\n#14 0x5575cb128ce1 <unknown>\n#15 0x5575cb12cb7e <unknown>\n#16 0x5575cb1164b5 <unknown>\n#17 0x5575cb12d7d6 <unknown>\n#18 0x5575cb0f9dbf <unknown>\n#19 0x5575cb150748 <unknown>\n#20 0x5575cb150917 <unknown>\n#21 0x5575cb161773 <unknown>\n#22 0x7f0736c5a044 <unknown>","statusTrace":"self = <test_products_on_sale_page.TestProductsOnSalePage object at 0x7ff240c885d0>\nlink = 'https://stroyrem-nn.ru/catalog/kisti-malyarnye'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7ff2403451d0>\n\n    @allure.title(\"positive_discount_for_unauthorized_customer_purchase_amount_50_to_3499rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{KISTI_MALYARNYE_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{KISTI_MALYARNYE_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_discount_for_unauthorized_customer_purchase_amount_50_to_3499rub_smoke(\n            self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(50)\n        product_page_open.get_field_price_last().send_keys(3499)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:368: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:346: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7ff241061fd0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x5575cb150917 \\\\u003Cunknown>\\\\n#21 0x5575cb161773 \\\\u003Cunknown>\\\\n#22 0x7f0736c5a044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: headless chrome=119.0.6045.105)\nE       Stacktrace:\nE       #0 0x5575cb1625e3 <unknown>\nE       #1 0x5575cae250b7 <unknown>\nE       #2 0x5575cae7acfc <unknown>\nE       #3 0x5575cae7865f <unknown>\nE       #4 0x5575cae75be4 <unknown>\nE       #5 0x5575cae74934 <unknown>\nE       #6 0x5575cae671a0 <unknown>\nE       #7 0x5575cae99ef2 <unknown>\nE       #8 0x5575cae66a02 <unknown>\nE       #9 0x5575cae9a0be <unknown>\nE       #10 0x5575caeb5b3d <unknown>\nE       #11 0x5575cae99cc3 <unknown>\nE       #12 0x5575cae650e4 <unknown>\nE       #13 0x5575cae660ae <unknown>\nE       #14 0x5575cb128ce1 <unknown>\nE       #15 0x5575cb12cb7e <unknown>\nE       #16 0x5575cb1164b5 <unknown>\nE       #17 0x5575cb12d7d6 <unknown>\nE       #18 0x5575cb0f9dbf <unknown>\nE       #19 0x5575cb150748 <unknown>\nE       #20 0x5575cb150917 <unknown>\nE       #21 0x5575cb161773 <unknown>\nE       #22 0x7f0736c5a044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1699837489270,"stop":1699837489337,"duration":67},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"clear_allure_results_folder","time":{"start":1699837489337,"stop":1699837489337,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver","time":{"start":1699838472385,"stop":1699838473121,"duration":736},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup","time":{"start":1699838473121,"stop":1699838473121,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"product_page_open","time":{"start":1699838473121,"stop":1699838479156,"duration":6035},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=119.0.6045.105)\nStacktrace:\n#0 0x5575cb1625e3 <unknown>\n#1 0x5575cae250b7 <unknown>\n#2 0x5575cae7acfc <unknown>\n#3 0x5575cae7865f <unknown>\n#4 0x5575cae75be4 <unknown>\n#5 0x5575cae74934 <unknown>\n#6 0x5575cae671a0 <unknown>\n#7 0x5575cae99ef2 <unknown>\n#8 0x5575cae66a02 <unknown>\n#9 0x5575cae9a0be <unknown>\n#10 0x5575caeb5b3d <unknown>\n#11 0x5575cae99cc3 <unknown>\n#12 0x5575cae650e4 <unknown>\n#13 0x5575cae660ae <unknown>\n#14 0x5575cb128ce1 <unknown>\n#15 0x5575cb12cb7e <unknown>\n#16 0x5575cb1164b5 <unknown>\n#17 0x5575cb12d7d6 <unknown>\n#18 0x5575cb0f9dbf <unknown>\n#19 0x5575cb150748 <unknown>\n#20 0x5575cb150917 <unknown>\n#21 0x5575cb161773 <unknown>\n#22 0x7f0736c5a044 <unknown>","statusTrace":"self = <test_products_on_sale_page.TestProductsOnSalePage object at 0x7ff240c885d0>\nlink = 'https://stroyrem-nn.ru/catalog/kisti-malyarnye'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7ff2403451d0>\n\n    @allure.title(\"positive_discount_for_unauthorized_customer_purchase_amount_50_to_3499rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{KISTI_MALYARNYE_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{KISTI_MALYARNYE_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_discount_for_unauthorized_customer_purchase_amount_50_to_3499rub_smoke(\n            self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(50)\n        product_page_open.get_field_price_last().send_keys(3499)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:368: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:346: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7ff241061fd0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x5575cb150917 \\\\u003Cunknown>\\\\n#21 0x5575cb161773 \\\\u003Cunknown>\\\\n#22 0x7f0736c5a044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: headless chrome=119.0.6045.105)\nE       Stacktrace:\nE       #0 0x5575cb1625e3 <unknown>\nE       #1 0x5575cae250b7 <unknown>\nE       #2 0x5575cae7acfc <unknown>\nE       #3 0x5575cae7865f <unknown>\nE       #4 0x5575cae75be4 <unknown>\nE       #5 0x5575cae74934 <unknown>\nE       #6 0x5575cae671a0 <unknown>\nE       #7 0x5575cae99ef2 <unknown>\nE       #8 0x5575cae66a02 <unknown>\nE       #9 0x5575cae9a0be <unknown>\nE       #10 0x5575caeb5b3d <unknown>\nE       #11 0x5575cae99cc3 <unknown>\nE       #12 0x5575cae650e4 <unknown>\nE       #13 0x5575cae660ae <unknown>\nE       #14 0x5575cb128ce1 <unknown>\nE       #15 0x5575cb12cb7e <unknown>\nE       #16 0x5575cb1164b5 <unknown>\nE       #17 0x5575cb12d7d6 <unknown>\nE       #18 0x5575cb0f9dbf <unknown>\nE       #19 0x5575cb150748 <unknown>\nE       #20 0x5575cb150917 <unknown>\nE       #21 0x5575cb161773 <unknown>\nE       #22 0x7f0736c5a044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: ElementClickInterceptedException","steps":[{"name":"Проверяем видимость поля 'ЦЕНА от'","time":{"start":1699838479157,"stop":1699838479187,"duration":30},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем видимость поля 'ЦЕНА до'","time":{"start":1699838479262,"stop":1699838479295,"duration":33},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1699838480338,"stop":1699838480377,"duration":39},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[{"uid":"6682322e46e2ea75","name":"Screenshot","source":"6682322e46e2ea75.png","type":"image/png","size":142669},{"uid":"38d9a9ed5372fda2","name":"HTML source","source":"38d9a9ed5372fda2.html","type":"text/html","size":865181}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":2,"hasContent":true},"afterStages":[{"name":"driver::0","time":{"start":1699838481629,"stop":1699838481698,"duration":69},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup::0","time":{"start":1699838481629,"stop":1699838481629,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"67ff8d2f2a0f"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://stroyrem-nn.ru/catalog/kisti-malyarnye'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":72,"unknown":0,"total":75},"items":[{"uid":"25df8d86ce9890b8","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/138//#testresult/25df8d86ce9890b8","status":"passed","time":{"start":1699752332902,"stop":1699752343296,"duration":10394}},{"uid":"b2a593c0edd552af","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/137//#testresult/b2a593c0edd552af","status":"passed","time":{"start":1699665462585,"stop":1699665472348,"duration":9763}},{"uid":"d86ca174528f504","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/136//#testresult/d86ca174528f504","status":"passed","time":{"start":1699579235573,"stop":1699579245617,"duration":10044}},{"uid":"7091bc31d4cf341a","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/135//#testresult/7091bc31d4cf341a","status":"passed","time":{"start":1699492788240,"stop":1699492798109,"duration":9869}},{"uid":"5dee11ec0a4d1be4","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/134//#testresult/5dee11ec0a4d1be4","status":"passed","time":{"start":1699406319474,"stop":1699406328942,"duration":9468}},{"uid":"756d91c734aacc28","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/133//#testresult/756d91c734aacc28","status":"passed","time":{"start":1699320067829,"stop":1699320078161,"duration":10332}},{"uid":"1e69059ef10e4366","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/132//#testresult/1e69059ef10e4366","status":"passed","time":{"start":1699233679967,"stop":1699233689714,"duration":9747}},{"uid":"371646264c43ae8b","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/131//#testresult/371646264c43ae8b","status":"passed","time":{"start":1699147484842,"stop":1699147494939,"duration":10097}},{"uid":"914e70567bb0c749","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/130//#testresult/914e70567bb0c749","status":"passed","time":{"start":1699060782487,"stop":1699060792711,"duration":10224}},{"uid":"b80fa61288702efa","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/129//#testresult/b80fa61288702efa","status":"passed","time":{"start":1698974327939,"stop":1698974337790,"duration":9851}},{"uid":"ff655d7d77a161c5","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/128//#testresult/ff655d7d77a161c5","status":"passed","time":{"start":1698887907378,"stop":1698887916832,"duration":9454}},{"uid":"3663b8fd24fb46a2","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/127//#testresult/3663b8fd24fb46a2","status":"passed","time":{"start":1698801837432,"stop":1698801847784,"duration":10352}},{"uid":"1ab72e8d19a1b18f","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/126//#testresult/1ab72e8d19a1b18f","status":"passed","time":{"start":1698715125197,"stop":1698715134932,"duration":9735}},{"uid":"682b5998e8a6983b","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/125//#testresult/682b5998e8a6983b","status":"passed","time":{"start":1698628706171,"stop":1698628715767,"duration":9596}},{"uid":"5e67c813c94c770e","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/124//#testresult/5e67c813c94c770e","status":"passed","time":{"start":1698542488233,"stop":1698542497977,"duration":9744}},{"uid":"a1778dac6bdcd3d1","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/123//#testresult/a1778dac6bdcd3d1","status":"passed","time":{"start":1698455840442,"stop":1698455850496,"duration":10054}},{"uid":"1270faa22b4cdeb1","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/122//#testresult/1270faa22b4cdeb1","status":"passed","time":{"start":1698369460954,"stop":1698369470599,"duration":9645}},{"uid":"ada312966bc1833a","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/121//#testresult/ada312966bc1833a","status":"passed","time":{"start":1698283055543,"stop":1698283065356,"duration":9813}},{"uid":"cc841b2c6a01170","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/120//#testresult/cc841b2c6a01170","status":"passed","time":{"start":1698196665102,"stop":1698196674573,"duration":9471}},{"uid":"adf23246c7d9deba","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/119//#testresult/adf23246c7d9deba","status":"passed","time":{"start":1698110385272,"stop":1698110396403,"duration":11131}}]},"tags":["smoke_test"]},"source":"d376cfe8ee896f3.json","parameterValues":["'https://stroyrem-nn.ru/catalog/kisti-malyarnye'"]}