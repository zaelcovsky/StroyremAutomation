{"uid":"2b01a0186689b4b1","name":"test_positive_delivery_green_zone_smoke[TD 002-products/shtukaturka-tsementnaya-bergauf-bau-putts-tsement-25kg-56sht-1-30-400-1590-2190-https://sandboxtest.stroyrem-nn.ru/]","fullName":"tests.delivery.test_delivery_calculation.TestDeliveryPageCalculation#test_positive_delivery_green_zone_smoke","historyId":"664bacae59a5acf1e4ceda0def0913e7","time":{"start":1693789980666,"stop":1693789987634,"duration":6968},"status":"broken","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: headless chrome=116.0.5845.96)\nStacktrace:\n#0 0x562f41c3ae23 <unknown>\n#1 0x562f419635f6 <unknown>\n#2 0x562f419a31c2 <unknown>\n#3 0x562f41998599 <unknown>\n#4 0x562f419c3012 <unknown>\n#5 0x562f41997fb6 <unknown>\n#6 0x562f419c31de <unknown>\n#7 0x562f419db369 <unknown>\n#8 0x562f419c2de3 <unknown>\n#9 0x562f41996a7b <unknown>\n#10 0x562f4199781e <unknown>\n#11 0x562f41bfc638 <unknown>\n#12 0x562f41c00507 <unknown>\n#13 0x562f41c0ac4c <unknown>\n#14 0x562f41c01136 <unknown>\n#15 0x562f41bcf9cf <unknown>\n#16 0x562f41c24b98 <unknown>\n#17 0x562f41c24d68 <unknown>\n#18 0x562f41c33cb3 <unknown>\n#19 0x7fa238862044 <unknown>","statusTrace":"self = <tests.delivery.test_delivery_calculation.TestDeliveryPageCalculation object at 0x7f6b6b6fdd10>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"d128d671c4b47d7fe837b4034c79d71d\")>\nurl = 'https://sandboxtest.stroyrem-nn.ru/', case_id = 'TD 002'\nlink_item = 'products/shtukaturka-tsementnaya-bergauf-bau-putts-tsement-25kg-56sht'\namount = 1, weight = 30, standard = 400, in_time = 1590, all_time = 2190\n\n    @pytest.mark.parametrize('case_id, link_item, amount, weight, standard, in_time, all_time', [\n        (\"TD 001\", uroven_3000, 1, 30, 0, 1590, 2190),\n        (\"TD 002\", bundeks_25, 1, 30, 400, 1590, 2190),\n        (\"TD 003\", aksolit_30, 8, 300, 400, 1590, 2190),\n        (\"TD 004\", aksolit_30, 13, 400, 450, 1590, 2190),\n        (\"TD 005\", aksolit_30, 16, 500, 600, 1590, 2190),\n        (\"TD 006\", aksolit_30, 25, 1700, 990, 1990, 2480),\n        (\"TD 007\", aksolit_30, 66, 2000, 1300, 2490, 2980),\n        (\"TD 008\", aksolit_30, 149, 4500, 2300, 3980, 4490),\n        (\"TD 009\", aksolit_30, 166, 5000, 2500, 4990, 5480),\n        pytest.param(\n            \"TD 010\", aksolit_30, 206, 6200, 2900, 5570, 6120,\n            marks=pytest.mark.xfail(reson=\"Цена доставки 3600 7960 8980\")\n        ),\n        (\"TD 011\", aksolit_30, 299, 9000, 3600, 7960, 8980),\n        (\"TD 012\", aksolit_30, 333, 10000, 4450, 11990, 12500),\n        pytest.param(\n            \"TD 013\", aksolit_30, 366, 11000, 4800, 12450, 13480,\n            marks=pytest.mark.xfail(reason=\"Цена стандартной доставки 4450\")\n        ),\n        pytest.param(\n            \"TD 014\", aksolit_30, 666, 20000, 5400, 15600, 17490,\n            marks=pytest.mark.xfail(reason=\"Цена стандартной доставки 4450\")\n        )\n    ])\n    @pytest.mark.smoke\n    def test_positive_delivery_green_zone_smoke(\n            self, driver, url, case_id, link_item, amount, weight, standard, in_time, all_time\n    ):\n    \n        driver.get(f'{url}{link_item}')\n        item_page = ItemPage(driver)\n>       item_page.add_item_to_cart(amount).click_on_cart()\n\ntests/delivery/test_delivery_calculation.py:49: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/item_page.py:40: in add_item_to_cart\n    self.find_element(self._add_item).click()\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:346: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f6b6b2c8190>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable\\\\n  (Sessio...\\\\n#17 0x562f41c24d68 \\\\u003Cunknown>\\\\n#18 0x562f41c33cb3 \\\\u003Cunknown>\\\\n#19 0x7fa238862044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\nE         (Session info: headless chrome=116.0.5845.96)\nE       Stacktrace:\nE       #0 0x562f41c3ae23 <unknown>\nE       #1 0x562f419635f6 <unknown>\nE       #2 0x562f419a31c2 <unknown>\nE       #3 0x562f41998599 <unknown>\nE       #4 0x562f419c3012 <unknown>\nE       #5 0x562f41997fb6 <unknown>\nE       #6 0x562f419c31de <unknown>\nE       #7 0x562f419db369 <unknown>\nE       #8 0x562f419c2de3 <unknown>\nE       #9 0x562f41996a7b <unknown>\nE       #10 0x562f4199781e <unknown>\nE       #11 0x562f41bfc638 <unknown>\nE       #12 0x562f41c00507 <unknown>\nE       #13 0x562f41c0ac4c <unknown>\nE       #14 0x562f41c01136 <unknown>\nE       #15 0x562f41bcf9cf <unknown>\nE       #16 0x562f41c24b98 <unknown>\nE       #17 0x562f41c24d68 <unknown>\nE       #18 0x562f41c33cb3 <unknown>\nE       #19 0x7fa238862044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: ElementNotInteractableException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1693789273210,"stop":1693789273325,"duration":115},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"clear_allure_results_folder","time":{"start":1693789273326,"stop":1693789273326,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver","time":{"start":1693789979822,"stop":1693789980664,"duration":842},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup","time":{"start":1693789980664,"stop":1693789980664,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: headless chrome=116.0.5845.96)\nStacktrace:\n#0 0x562f41c3ae23 <unknown>\n#1 0x562f419635f6 <unknown>\n#2 0x562f419a31c2 <unknown>\n#3 0x562f41998599 <unknown>\n#4 0x562f419c3012 <unknown>\n#5 0x562f41997fb6 <unknown>\n#6 0x562f419c31de <unknown>\n#7 0x562f419db369 <unknown>\n#8 0x562f419c2de3 <unknown>\n#9 0x562f41996a7b <unknown>\n#10 0x562f4199781e <unknown>\n#11 0x562f41bfc638 <unknown>\n#12 0x562f41c00507 <unknown>\n#13 0x562f41c0ac4c <unknown>\n#14 0x562f41c01136 <unknown>\n#15 0x562f41bcf9cf <unknown>\n#16 0x562f41c24b98 <unknown>\n#17 0x562f41c24d68 <unknown>\n#18 0x562f41c33cb3 <unknown>\n#19 0x7fa238862044 <unknown>","statusTrace":"self = <tests.delivery.test_delivery_calculation.TestDeliveryPageCalculation object at 0x7f6b6b6fdd10>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"d128d671c4b47d7fe837b4034c79d71d\")>\nurl = 'https://sandboxtest.stroyrem-nn.ru/', case_id = 'TD 002'\nlink_item = 'products/shtukaturka-tsementnaya-bergauf-bau-putts-tsement-25kg-56sht'\namount = 1, weight = 30, standard = 400, in_time = 1590, all_time = 2190\n\n    @pytest.mark.parametrize('case_id, link_item, amount, weight, standard, in_time, all_time', [\n        (\"TD 001\", uroven_3000, 1, 30, 0, 1590, 2190),\n        (\"TD 002\", bundeks_25, 1, 30, 400, 1590, 2190),\n        (\"TD 003\", aksolit_30, 8, 300, 400, 1590, 2190),\n        (\"TD 004\", aksolit_30, 13, 400, 450, 1590, 2190),\n        (\"TD 005\", aksolit_30, 16, 500, 600, 1590, 2190),\n        (\"TD 006\", aksolit_30, 25, 1700, 990, 1990, 2480),\n        (\"TD 007\", aksolit_30, 66, 2000, 1300, 2490, 2980),\n        (\"TD 008\", aksolit_30, 149, 4500, 2300, 3980, 4490),\n        (\"TD 009\", aksolit_30, 166, 5000, 2500, 4990, 5480),\n        pytest.param(\n            \"TD 010\", aksolit_30, 206, 6200, 2900, 5570, 6120,\n            marks=pytest.mark.xfail(reson=\"Цена доставки 3600 7960 8980\")\n        ),\n        (\"TD 011\", aksolit_30, 299, 9000, 3600, 7960, 8980),\n        (\"TD 012\", aksolit_30, 333, 10000, 4450, 11990, 12500),\n        pytest.param(\n            \"TD 013\", aksolit_30, 366, 11000, 4800, 12450, 13480,\n            marks=pytest.mark.xfail(reason=\"Цена стандартной доставки 4450\")\n        ),\n        pytest.param(\n            \"TD 014\", aksolit_30, 666, 20000, 5400, 15600, 17490,\n            marks=pytest.mark.xfail(reason=\"Цена стандартной доставки 4450\")\n        )\n    ])\n    @pytest.mark.smoke\n    def test_positive_delivery_green_zone_smoke(\n            self, driver, url, case_id, link_item, amount, weight, standard, in_time, all_time\n    ):\n    \n        driver.get(f'{url}{link_item}')\n        item_page = ItemPage(driver)\n>       item_page.add_item_to_cart(amount).click_on_cart()\n\ntests/delivery/test_delivery_calculation.py:49: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/item_page.py:40: in add_item_to_cart\n    self.find_element(self._add_item).click()\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:346: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f6b6b2c8190>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable\\\\n  (Sessio...\\\\n#17 0x562f41c24d68 \\\\u003Cunknown>\\\\n#18 0x562f41c33cb3 \\\\u003Cunknown>\\\\n#19 0x7fa238862044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\nE         (Session info: headless chrome=116.0.5845.96)\nE       Stacktrace:\nE       #0 0x562f41c3ae23 <unknown>\nE       #1 0x562f419635f6 <unknown>\nE       #2 0x562f419a31c2 <unknown>\nE       #3 0x562f41998599 <unknown>\nE       #4 0x562f419c3012 <unknown>\nE       #5 0x562f41997fb6 <unknown>\nE       #6 0x562f419c31de <unknown>\nE       #7 0x562f419db369 <unknown>\nE       #8 0x562f419c2de3 <unknown>\nE       #9 0x562f41996a7b <unknown>\nE       #10 0x562f4199781e <unknown>\nE       #11 0x562f41bfc638 <unknown>\nE       #12 0x562f41c00507 <unknown>\nE       #13 0x562f41c0ac4c <unknown>\nE       #14 0x562f41c01136 <unknown>\nE       #15 0x562f41bcf9cf <unknown>\nE       #16 0x562f41c24b98 <unknown>\nE       #17 0x562f41c24d68 <unknown>\nE       #18 0x562f41c33cb3 <unknown>\nE       #19 0x7fa238862044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: ElementNotInteractableException","steps":[{"name":"Добавляем товар в корзину в количестве 1","time":{"start":1693789987591,"stop":1693789987633,"duration":42},"status":"broken","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: headless chrome=116.0.5845.96)\nStacktrace:\n#0 0x562f41c3ae23 <unknown>\n#1 0x562f419635f6 <unknown>\n#2 0x562f419a31c2 <unknown>\n#3 0x562f41998599 <unknown>\n#4 0x562f419c3012 <unknown>\n#5 0x562f41997fb6 <unknown>\n#6 0x562f419c31de <unknown>\n#7 0x562f419db369 <unknown>\n#8 0x562f419c2de3 <unknown>\n#9 0x562f41996a7b <unknown>\n#10 0x562f4199781e <unknown>\n#11 0x562f41bfc638 <unknown>\n#12 0x562f41c00507 <unknown>\n#13 0x562f41c0ac4c <unknown>\n#14 0x562f41c01136 <unknown>\n#15 0x562f41bcf9cf <unknown>\n#16 0x562f41c24b98 <unknown>\n#17 0x562f41c24d68 <unknown>\n#18 0x562f41c33cb3 <unknown>\n#19 0x7fa238862044 <unknown>\n\n","statusTrace":"  File \"/usr/local/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/app/pages/item_page.py\", line 40, in add_item_to_cart\n    self.find_element(self._add_item).click()\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 346, in execute\n    self.error_handler.check_response(response)\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 245, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[{"name":"amount","value":"1"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[{"uid":"c2bd36f8ee0f8526","name":"Screenshot","source":"c2bd36f8ee0f8526.png","type":"image/png","size":259261},{"uid":"1327cf4b4f2fdbf3","name":"HTML source","source":"1327cf4b4f2fdbf3.html","type":"text/html","size":343172}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":2,"hasContent":true},"afterStages":[{"name":"setup::0","time":{"start":1693789987933,"stop":1693789987933,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver::0","time":{"start":1693789987933,"stop":1693789987997,"duration":64},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"epic","value":"Delivery Page - calculation"},{"name":"tag","value":"smoke"},{"name":"parentSuite","value":"tests.delivery"},{"name":"suite","value":"test_delivery_calculation"},{"name":"subSuite","value":"TestDeliveryPageCalculation"},{"name":"host","value":"c9b0958aaa6a"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.delivery.test_delivery_calculation"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"all_time","value":"2190"},{"name":"amount","value":"1"},{"name":"case_id","value":"'TD 002'"},{"name":"in_time","value":"1590"},{"name":"link_item","value":"'products/shtukaturka-tsementnaya-bergauf-bau-putts-tsement-25kg-56sht'"},{"name":"standard","value":"400"},{"name":"url","value":"'https://sandboxtest.stroyrem-nn.ru/'"},{"name":"weight","value":"30"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":5,"skipped":0,"passed":0,"unknown":0,"total":5},"items":[{"uid":"486aff07c6da0c05","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/68//#testresult/486aff07c6da0c05","status":"broken","statusDetails":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: headless chrome=116.0.5845.96)\nStacktrace:\n#0 0x55ed47177e23 <unknown>\n#1 0x55ed46ea05f6 <unknown>\n#2 0x55ed46ee01c2 <unknown>\n#3 0x55ed46ed5599 <unknown>\n#4 0x55ed46f00012 <unknown>\n#5 0x55ed46ed4fb6 <unknown>\n#6 0x55ed46f001de <unknown>\n#7 0x55ed46f18369 <unknown>\n#8 0x55ed46effde3 <unknown>\n#9 0x55ed46ed3a7b <unknown>\n#10 0x55ed46ed481e <unknown>\n#11 0x55ed47139638 <unknown>\n#12 0x55ed4713d507 <unknown>\n#13 0x55ed47147c4c <unknown>\n#14 0x55ed4713e136 <unknown>\n#15 0x55ed4710c9cf <unknown>\n#16 0x55ed47161b98 <unknown>\n#17 0x55ed47161d68 <unknown>\n#18 0x55ed47170cb3 <unknown>\n#19 0x7f8df0ba1044 <unknown>","time":{"start":1693703569224,"stop":1693703575753,"duration":6529}},{"uid":"ca90669c7aab22ea","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/67//#testresult/ca90669c7aab22ea","status":"broken","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\n  (Session info: headless chrome=116.0.5845.96)\nStacktrace:\n#0 0x55f145c6fe23 <unknown>\n#1 0x55f1459987a7 <unknown>\n#2 0x55f145990829 <unknown>\n#3 0x55f1459802c2 <unknown>\n#4 0x55f1459819fb <unknown>\n#5 0x55f14598069d <unknown>\n#6 0x55f14597f65c <unknown>\n#7 0x55f14597f5ce <unknown>\n#8 0x55f14597e28a <unknown>\n#9 0x55f14597e6da <unknown>\n#10 0x55f14599a630 <unknown>\n#11 0x55f145a10b15 <unknown>\n#12 0x55f1459f8012 <unknown>\n#13 0x55f145a10369 <unknown>\n#14 0x55f1459f7de3 <unknown>\n#15 0x55f1459cba7b <unknown>\n#16 0x55f1459cc81e <unknown>\n#17 0x55f145c31638 <unknown>\n#18 0x55f145c35507 <unknown>\n#19 0x55f145c3fc4c <unknown>\n#20 0x55f145c36136 <unknown>\n#21 0x55f145c049cf <unknown>\n#22 0x55f145c59b98 <unknown>\n#23 0x55f145c59d68 <unknown>\n#24 0x55f145c68cb3 <unknown>\n#25 0x7f5ceba71044 <unknown>","time":{"start":1693616886939,"stop":1693616887299,"duration":360}},{"uid":"80090c46ed04e13f","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/66//#testresult/80090c46ed04e13f","status":"broken","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\n  (Session info: headless chrome=116.0.5845.96)\nStacktrace:\n#0 0x556c0e28de23 <unknown>\n#1 0x556c0dfb67a7 <unknown>\n#2 0x556c0dfae829 <unknown>\n#3 0x556c0df9e2c2 <unknown>\n#4 0x556c0df9f9fb <unknown>\n#5 0x556c0df9e69d <unknown>\n#6 0x556c0df9d65c <unknown>\n#7 0x556c0df9d5ce <unknown>\n#8 0x556c0df9c28a <unknown>\n#9 0x556c0df9c6da <unknown>\n#10 0x556c0dfb8630 <unknown>\n#11 0x556c0e02eb15 <unknown>\n#12 0x556c0e016012 <unknown>\n#13 0x556c0e02e369 <unknown>\n#14 0x556c0e015de3 <unknown>\n#15 0x556c0dfe9a7b <unknown>\n#16 0x556c0dfea81e <unknown>\n#17 0x556c0e24f638 <unknown>\n#18 0x556c0e253507 <unknown>\n#19 0x556c0e25dc4c <unknown>\n#20 0x556c0e254136 <unknown>\n#21 0x556c0e2229cf <unknown>\n#22 0x556c0e277b98 <unknown>\n#23 0x556c0e277d68 <unknown>\n#24 0x556c0e286cb3 <unknown>\n#25 0x7fb107a95044 <unknown>","time":{"start":1693530788809,"stop":1693530789005,"duration":196}},{"uid":"eda9f62ad7047917","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/9//#testresult/eda9f62ad7047917","status":"broken","statusDetails":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: headless chrome=116.0.5845.96)\nStacktrace:\n#0 0x55e19b22fe23 <unknown>\n#1 0x55e19af585f6 <unknown>\n#2 0x55e19af981c2 <unknown>\n#3 0x55e19af8d599 <unknown>\n#4 0x55e19afb8012 <unknown>\n#5 0x55e19af8cfb6 <unknown>\n#6 0x55e19afb81de <unknown>\n#7 0x55e19afd0369 <unknown>\n#8 0x55e19afb7de3 <unknown>\n#9 0x55e19af8ba7b <unknown>\n#10 0x55e19af8c81e <unknown>\n#11 0x55e19b1f1638 <unknown>\n#12 0x55e19b1f5507 <unknown>\n#13 0x55e19b1ffc4c <unknown>\n#14 0x55e19b1f6136 <unknown>\n#15 0x55e19b1c49cf <unknown>\n#16 0x55e19b219b98 <unknown>\n#17 0x55e19b219d68 <unknown>\n#18 0x55e19b228cb3 <unknown>\n#19 0x7fe07f6d5044 <unknown>","time":{"start":1693507116958,"stop":1693507120644,"duration":3686}}]},"tags":["smoke"]},"source":"2b01a0186689b4b1.json","parameterValues":["2190","1","'TD 002'","1590","'products/shtukaturka-tsementnaya-bergauf-bau-putts-tsement-25kg-56sht'","400","'https://sandboxtest.stroyrem-nn.ru/'","30"]}