{"uid":"aebc4beea825c3d5","name":"Авторизация с помощью аккаунта OK.ru","fullName":"tests.test_sign_in.test_sign_in_page.TestSignInPage#test_positive_authorization_first_time_using_OK_smoke","historyId":"3273fef023a780529beca6cb62c64840","time":{"start":1691962958055,"stop":1691962972189,"duration":14134},"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: headless chrome=115.0.5790.170)\nStacktrace:\n#0 0x55cbba64f613 <unknown>\n#1 0x55cbba37b537 <unknown>\n#2 0x55cbba3533c1 <unknown>\n#3 0x55cbba3df82f <unknown>\n#4 0x55cbba3f2856 <unknown>\n#5 0x55cbba3da803 <unknown>\n#6 0x55cbba3ae68b <unknown>\n#7 0x55cbba3af42e <unknown>\n#8 0x55cbba610c28 <unknown>\n#9 0x55cbba614af7 <unknown>\n#10 0x55cbba61f01c <unknown>\n#11 0x55cbba615723 <unknown>\n#12 0x55cbba5e4457 <unknown>\n#13 0x55cbba639628 <unknown>\n#14 0x55cbba6397b7 <unknown>\n#15 0x55cbba648483 <unknown>\n#16 0x7f49bc09d044 <unknown>","statusTrace":"self = <tests.test_sign_in.test_sign_in_page.TestSignInPage object at 0x7f777e646190>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"f7d450474d0a1296ded6e30df0361b92\")>\nsign_in_page = <pages.sign_in_page.SignInPage object at 0x7f777e6a8e10>\nopen_sign_in_window = None\n\n    @allure.title(\"Авторизация с помощью аккаунта OK.ru\")\n    # @pytest.mark.xfail(reason=\"хранение логинов/паролей не реализовано\")\n    @pytest.mark.smoke_test\n    def test_positive_authorization_first_time_using_OK_smoke(self, driver, sign_in_page, open_sign_in_window):\n        sign_in_page.get_ok_ru_auth_icon().click()\n        driver.switch_to.window(driver.window_handles[1])\n        driver.add_cookie({'name': 'bci',\n                           'value': '232693873704985418',\n                           'domain': '.ok.ru',\n                           'httpOnly': True,\n                           'path': '/',\n                           'expiry': 1726518377,\n                           'secure': True})\n        driver.add_cookie({'name': '_statid',\n                           'value': '2ee9fe98-ab2c-4d1f-9c04-30b8090d3f61',\n                           'domain': '.ok.ru',\n                           'httpOnly': True,\n                           'path': '/',\n                           'expiry': 1726518377,\n                           'secure': True})\n        driver.add_cookie({'name': 'landref',\n                           'value': 'stroyrem-nn.ru',\n                           'domain': '.ok.ru',\n                           'httpOnly': False,\n                           'path': '/',\n                           'expiry': 1726518377,\n                           'secure': True})\n        driver.add_cookie({'name': '__last_online',\n                           'value': '1691958637776',\n                           'domain': 'connect.ok.ru',\n                           'httpOnly': False,\n                           'path': '/',\n                           'expiry': 1726518638,\n                           'secure': True})\n        sign_in_page.get_ok_ru_window_email_field().send_keys(credentials['ok.ru_email'])\n        sign_in_page.get_ok_ru_window_password_field().send_keys(credentials['ok.ru_password'])\n        sign_in_page.get_ok_ru_window_submit_button().click()\n        # на новых аккаунтах нужно еще кликнуть акцепт\n        # self.driver.find_element(*self._ok_ru_window_accept_button).click()\n        # driver.switch_to.window(driver.window_handles[0])\n        sign_in_page.check_number_of_windows_to_be_equal(1)\n        # c OK.ru не подтягивается email, нужно вводить вручную https://trello.com/c/D1M0KnkP\n        # self.driver.find_element(*self._ulogin_window_email_field).send_keys(email)\n        # self.driver.find_element(*self._ulogin_window_submit_button).click()\n        sleep(10)\n>       assert driver.current_url == ACCOUNT_PAGE, f\"Неправильный url страницы: {driver.current_url}\"\n\ntests/test_sign_in/test_sign_in_page.py:106: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:436: in current_url\n    return self.execute(Command.GET_CURRENT_URL)[\"value\"]\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:346: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f777ec1a490>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such window\",\"message\":\"no such window: target window already closed\\\\...\\\\n#14 0x55cbba6397b7 \\\\u003Cunknown>\\\\n#15 0x55cbba648483 \\\\u003Cunknown>\\\\n#16 0x7f49bc09d044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nE       from unknown error: web view not found\nE         (Session info: headless chrome=115.0.5790.170)\nE       Stacktrace:\nE       #0 0x55cbba64f613 <unknown>\nE       #1 0x55cbba37b537 <unknown>\nE       #2 0x55cbba3533c1 <unknown>\nE       #3 0x55cbba3df82f <unknown>\nE       #4 0x55cbba3f2856 <unknown>\nE       #5 0x55cbba3da803 <unknown>\nE       #6 0x55cbba3ae68b <unknown>\nE       #7 0x55cbba3af42e <unknown>\nE       #8 0x55cbba610c28 <unknown>\nE       #9 0x55cbba614af7 <unknown>\nE       #10 0x55cbba61f01c <unknown>\nE       #11 0x55cbba615723 <unknown>\nE       #12 0x55cbba5e4457 <unknown>\nE       #13 0x55cbba639628 <unknown>\nE       #14 0x55cbba6397b7 <unknown>\nE       #15 0x55cbba648483 <unknown>\nE       #16 0x7f49bc09d044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: NoSuchWindowException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1691962902801,"stop":1691962902865,"duration":64},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"clear_allure_results_folder","time":{"start":1691962902865,"stop":1691962902866,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"driver","time":{"start":1691962950500,"stop":1691962951256,"duration":756},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"sign_in_page","time":{"start":1691962951256,"stop":1691962957695,"duration":6439},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"setup","time":{"start":1691962951256,"stop":1691962951256,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"open_sign_in_window","time":{"start":1691962957695,"stop":1691962958055,"duration":360},"status":"passed","steps":[{"name":"Нахождение элемента: иконка профиля в хедере","time":{"start":1691962957695,"stop":1691962957708,"duration":13},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: headless chrome=115.0.5790.170)\nStacktrace:\n#0 0x55cbba64f613 <unknown>\n#1 0x55cbba37b537 <unknown>\n#2 0x55cbba3533c1 <unknown>\n#3 0x55cbba3df82f <unknown>\n#4 0x55cbba3f2856 <unknown>\n#5 0x55cbba3da803 <unknown>\n#6 0x55cbba3ae68b <unknown>\n#7 0x55cbba3af42e <unknown>\n#8 0x55cbba610c28 <unknown>\n#9 0x55cbba614af7 <unknown>\n#10 0x55cbba61f01c <unknown>\n#11 0x55cbba615723 <unknown>\n#12 0x55cbba5e4457 <unknown>\n#13 0x55cbba639628 <unknown>\n#14 0x55cbba6397b7 <unknown>\n#15 0x55cbba648483 <unknown>\n#16 0x7f49bc09d044 <unknown>","statusTrace":"self = <tests.test_sign_in.test_sign_in_page.TestSignInPage object at 0x7f777e646190>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"f7d450474d0a1296ded6e30df0361b92\")>\nsign_in_page = <pages.sign_in_page.SignInPage object at 0x7f777e6a8e10>\nopen_sign_in_window = None\n\n    @allure.title(\"Авторизация с помощью аккаунта OK.ru\")\n    # @pytest.mark.xfail(reason=\"хранение логинов/паролей не реализовано\")\n    @pytest.mark.smoke_test\n    def test_positive_authorization_first_time_using_OK_smoke(self, driver, sign_in_page, open_sign_in_window):\n        sign_in_page.get_ok_ru_auth_icon().click()\n        driver.switch_to.window(driver.window_handles[1])\n        driver.add_cookie({'name': 'bci',\n                           'value': '232693873704985418',\n                           'domain': '.ok.ru',\n                           'httpOnly': True,\n                           'path': '/',\n                           'expiry': 1726518377,\n                           'secure': True})\n        driver.add_cookie({'name': '_statid',\n                           'value': '2ee9fe98-ab2c-4d1f-9c04-30b8090d3f61',\n                           'domain': '.ok.ru',\n                           'httpOnly': True,\n                           'path': '/',\n                           'expiry': 1726518377,\n                           'secure': True})\n        driver.add_cookie({'name': 'landref',\n                           'value': 'stroyrem-nn.ru',\n                           'domain': '.ok.ru',\n                           'httpOnly': False,\n                           'path': '/',\n                           'expiry': 1726518377,\n                           'secure': True})\n        driver.add_cookie({'name': '__last_online',\n                           'value': '1691958637776',\n                           'domain': 'connect.ok.ru',\n                           'httpOnly': False,\n                           'path': '/',\n                           'expiry': 1726518638,\n                           'secure': True})\n        sign_in_page.get_ok_ru_window_email_field().send_keys(credentials['ok.ru_email'])\n        sign_in_page.get_ok_ru_window_password_field().send_keys(credentials['ok.ru_password'])\n        sign_in_page.get_ok_ru_window_submit_button().click()\n        # на новых аккаунтах нужно еще кликнуть акцепт\n        # self.driver.find_element(*self._ok_ru_window_accept_button).click()\n        # driver.switch_to.window(driver.window_handles[0])\n        sign_in_page.check_number_of_windows_to_be_equal(1)\n        # c OK.ru не подтягивается email, нужно вводить вручную https://trello.com/c/D1M0KnkP\n        # self.driver.find_element(*self._ulogin_window_email_field).send_keys(email)\n        # self.driver.find_element(*self._ulogin_window_submit_button).click()\n        sleep(10)\n>       assert driver.current_url == ACCOUNT_PAGE, f\"Неправильный url страницы: {driver.current_url}\"\n\ntests/test_sign_in/test_sign_in_page.py:106: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:436: in current_url\n    return self.execute(Command.GET_CURRENT_URL)[\"value\"]\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:346: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f777ec1a490>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such window\",\"message\":\"no such window: target window already closed\\\\...\\\\n#14 0x55cbba6397b7 \\\\u003Cunknown>\\\\n#15 0x55cbba648483 \\\\u003Cunknown>\\\\n#16 0x7f49bc09d044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nE       from unknown error: web view not found\nE         (Session info: headless chrome=115.0.5790.170)\nE       Stacktrace:\nE       #0 0x55cbba64f613 <unknown>\nE       #1 0x55cbba37b537 <unknown>\nE       #2 0x55cbba3533c1 <unknown>\nE       #3 0x55cbba3df82f <unknown>\nE       #4 0x55cbba3f2856 <unknown>\nE       #5 0x55cbba3da803 <unknown>\nE       #6 0x55cbba3ae68b <unknown>\nE       #7 0x55cbba3af42e <unknown>\nE       #8 0x55cbba610c28 <unknown>\nE       #9 0x55cbba614af7 <unknown>\nE       #10 0x55cbba61f01c <unknown>\nE       #11 0x55cbba615723 <unknown>\nE       #12 0x55cbba5e4457 <unknown>\nE       #13 0x55cbba639628 <unknown>\nE       #14 0x55cbba6397b7 <unknown>\nE       #15 0x55cbba648483 <unknown>\nE       #16 0x7f49bc09d044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: NoSuchWindowException","steps":[{"name":"Нахождение элемента: иконка 'OK.ru' окна авторизации","time":{"start":1691962958055,"stop":1691962958067,"duration":12},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Нахождение элемента: поле 'Email' окна авторизации через 'OK.ru'","time":{"start":1691962961240,"stop":1691962961251,"duration":11},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Нахождение элемента: поле 'Пароль' окна авторизации через 'OK.ru'","time":{"start":1691962961302,"stop":1691962961313,"duration":11},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Нахождение элемента: кнопка 'Войти' окна авторизации через 'OK.ru'","time":{"start":1691962961357,"stop":1691962961368,"duration":11},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[],"stepsCount":4,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"driver::0","time":{"start":1691962972240,"stop":1691962972304,"duration":64},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"setup::0","time":{"start":1691962972240,"stop":1691962972240,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"epic","value":"Sign In Page"},{"name":"tag","value":"smoke_test"},{"name":"parentSuite","value":"tests.test_sign_in"},{"name":"suite","value":"test_sign_in_page"},{"name":"subSuite","value":"TestSignInPage"},{"name":"host","value":"4a5f0342547c"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_sign_in.test_sign_in_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":10,"skipped":3,"passed":0,"unknown":0,"total":15},"items":[{"uid":"d3df8b1c91d0816b","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/34//#testresult/d3df8b1c91d0816b","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1691888561518,"stop":1691888581948,"duration":20430}},{"uid":"657f04d5741a23e4","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/33//#testresult/657f04d5741a23e4","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1691801899385,"stop":1691801919248,"duration":19863}},{"uid":"95c44113d01a3d10","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/32//#testresult/95c44113d01a3d10","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1691715557133,"stop":1691715576545,"duration":19412}},{"uid":"9fa46e5d18ebdda6","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/31//#testresult/9fa46e5d18ebdda6","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1691687182270,"stop":1691687203443,"duration":21173}},{"uid":"fc1dad804ac86b56","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/30//#testresult/fc1dad804ac86b56","status":"skipped","statusDetails":"XFAIL хранение логинов/паролей не реализовано\n\nAssertionError: Неправильный url страницы: https://stroyrem-nn.ru/\nassert 'https://stroyrem-nn.ru/' == 'https://stro.../user/account'\n  - https://stroyrem-nn.ru/user/account\n  ?                        ------------\n  + https://stroyrem-nn.ru/","time":{"start":1691630563666,"stop":1691630578982,"duration":15316}},{"uid":"26ba9b7662c59b19","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/29//#testresult/26ba9b7662c59b19","status":"failed","statusDetails":"AssertionError: Неправильный url страницы: https://stroyrem-nn.ru/\nassert 'https://stroyrem-nn.ru/' == 'https://stro.../user/account'\n  - https://stroyrem-nn.ru/user/account\n  ?                        ------------\n  + https://stroyrem-nn.ru/","time":{"start":1691604241525,"stop":1691604256031,"duration":14506}},{"uid":"d2fdd048e08462d","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/28//#testresult/d2fdd048e08462d","status":"failed","statusDetails":"AssertionError: Неправильный url страницы: https://stroyrem-nn.ru/\nassert 'https://stroyrem-nn.ru/' == 'https://stro.../user/account'\n  - https://stroyrem-nn.ru/user/account\n  ?                        ------------\n  + https://stroyrem-nn.ru/","time":{"start":1691602782019,"stop":1691602796147,"duration":14128}},{"uid":"f592c92d2b3df44a","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/27//#testresult/f592c92d2b3df44a","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1691600545310,"stop":1691600565061,"duration":19751}},{"uid":"53349984c1b536f1","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/26//#testresult/53349984c1b536f1","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1691543653159,"stop":1691543672952,"duration":19793}},{"uid":"1d32a84e05f5be23","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/25//#testresult/1d32a84e05f5be23","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1691520947170,"stop":1691520964840,"duration":17670}},{"uid":"f19f08ed53bf8680","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/24//#testresult/f19f08ed53bf8680","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1691520085238,"stop":1691520104162,"duration":18924}},{"uid":"217c0df0aa38191e","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/23//#testresult/217c0df0aa38191e","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1691519578118,"stop":1691519598047,"duration":19929}},{"uid":"a0e9868a8b3e4412","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/22//#testresult/a0e9868a8b3e4412","status":"skipped","statusDetails":"XFAIL хранение логинов/паролей не реализовано\n\nselenium.common.exceptions.TimeoutException: Message:","time":{"start":1691519036068,"stop":1691519055109,"duration":19041}},{"uid":"2a06741cd209f269","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/20//#testresult/2a06741cd209f269","status":"skipped","statusDetails":"XFAIL хранение логинов/паролей не реализовано\n\nNameError: name 'credentials' is not defined","time":{"start":1691517590735,"stop":1691517593612,"duration":2877}}]},"tags":["smoke_test"]},"source":"aebc4beea825c3d5.json","parameterValues":[]}