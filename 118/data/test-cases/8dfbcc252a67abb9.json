{"uid":"8dfbcc252a67abb9","name":"TC 012 - Проверка функциональности ссылки 'Местоположение'","fullName":"tests.test_main_page.TestMainPage#test_positive_footer_location_smoke","historyId":"33457859b647cbeb6f81133cc53ce556","time":{"start":1698023032283,"stop":1698023032320,"duration":37},"status":"broken","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: headless chrome=118.0.5993.70)\nStacktrace:\n#0 0x55d4c004ffb3 <unknown>\n#1 0x55d4bfd232f6 <unknown>\n#2 0x55d4bfd6bf26 <unknown>\n#3 0x55d4bfd60d59 <unknown>\n#4 0x55d4bfd8c942 <unknown>\n#5 0x55d4bfd60776 <unknown>\n#6 0x55d4bfd8cb0e <unknown>\n#7 0x55d4bfda5c02 <unknown>\n#8 0x55d4bfd8c713 <unknown>\n#9 0x55d4bfd5f18b <unknown>\n#10 0x55d4bfd5ff7e <unknown>\n#11 0x55d4c00158d8 <unknown>\n#12 0x55d4c0019800 <unknown>\n#13 0x55d4c0023cfc <unknown>\n#14 0x55d4c001a418 <unknown>\n#15 0x55d4bffe742f <unknown>\n#16 0x55d4c003e4e8 <unknown>\n#17 0x55d4c003e6b4 <unknown>\n#18 0x55d4c004f143 <unknown>\n#19 0x7f5d3ded9044 <unknown>","statusTrace":"self = <tests.test_main_page.TestMainPage object at 0x7f99edf81f50>\nmain_page = <pages.main_page.MainPage object at 0x7f99ed8e5790>\n\n    @allure.feature(\"Footer functionality\")\n    @allure.title(\"TC 012 - Проверка функциональности ссылки 'Местоположение'\")\n    @pytest.mark.smoke_test\n    def test_positive_footer_location_smoke(self, main_page):\n        location_page = LocationPage(main_page.driver)\n>       main_page.check_location_link()\n\ntests/test_main_page.py:116: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/main_page.py:148: in check_location_link\n    self.driver.find_element(*self._location).click()\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:346: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f99ed8e4490>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable\\\\n  (Sessio...\\\\n#17 0x55d4c003e6b4 \\\\u003Cunknown>\\\\n#18 0x55d4c004f143 \\\\u003Cunknown>\\\\n#19 0x7f5d3ded9044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\nE         (Session info: headless chrome=118.0.5993.70)\nE       Stacktrace:\nE       #0 0x55d4c004ffb3 <unknown>\nE       #1 0x55d4bfd232f6 <unknown>\nE       #2 0x55d4bfd6bf26 <unknown>\nE       #3 0x55d4bfd60d59 <unknown>\nE       #4 0x55d4bfd8c942 <unknown>\nE       #5 0x55d4bfd60776 <unknown>\nE       #6 0x55d4bfd8cb0e <unknown>\nE       #7 0x55d4bfda5c02 <unknown>\nE       #8 0x55d4bfd8c713 <unknown>\nE       #9 0x55d4bfd5f18b <unknown>\nE       #10 0x55d4bfd5ff7e <unknown>\nE       #11 0x55d4c00158d8 <unknown>\nE       #12 0x55d4c0019800 <unknown>\nE       #13 0x55d4c0023cfc <unknown>\nE       #14 0x55d4c001a418 <unknown>\nE       #15 0x55d4bffe742f <unknown>\nE       #16 0x55d4c003e4e8 <unknown>\nE       #17 0x55d4c003e6b4 <unknown>\nE       #18 0x55d4c004f143 <unknown>\nE       #19 0x7f5d3ded9044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: ElementNotInteractableException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1698022896186,"stop":1698022896274,"duration":88},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"clear_allure_results_folder","time":{"start":1698022896274,"stop":1698022896274,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver","time":{"start":1698023025140,"stop":1698023025921,"duration":781},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup","time":{"start":1698023025922,"stop":1698023025922,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_page","time":{"start":1698023025922,"stop":1698023032282,"duration":6360},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: headless chrome=118.0.5993.70)\nStacktrace:\n#0 0x55d4c004ffb3 <unknown>\n#1 0x55d4bfd232f6 <unknown>\n#2 0x55d4bfd6bf26 <unknown>\n#3 0x55d4bfd60d59 <unknown>\n#4 0x55d4bfd8c942 <unknown>\n#5 0x55d4bfd60776 <unknown>\n#6 0x55d4bfd8cb0e <unknown>\n#7 0x55d4bfda5c02 <unknown>\n#8 0x55d4bfd8c713 <unknown>\n#9 0x55d4bfd5f18b <unknown>\n#10 0x55d4bfd5ff7e <unknown>\n#11 0x55d4c00158d8 <unknown>\n#12 0x55d4c0019800 <unknown>\n#13 0x55d4c0023cfc <unknown>\n#14 0x55d4c001a418 <unknown>\n#15 0x55d4bffe742f <unknown>\n#16 0x55d4c003e4e8 <unknown>\n#17 0x55d4c003e6b4 <unknown>\n#18 0x55d4c004f143 <unknown>\n#19 0x7f5d3ded9044 <unknown>","statusTrace":"self = <tests.test_main_page.TestMainPage object at 0x7f99edf81f50>\nmain_page = <pages.main_page.MainPage object at 0x7f99ed8e5790>\n\n    @allure.feature(\"Footer functionality\")\n    @allure.title(\"TC 012 - Проверка функциональности ссылки 'Местоположение'\")\n    @pytest.mark.smoke_test\n    def test_positive_footer_location_smoke(self, main_page):\n        location_page = LocationPage(main_page.driver)\n>       main_page.check_location_link()\n\ntests/test_main_page.py:116: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/main_page.py:148: in check_location_link\n    self.driver.find_element(*self._location).click()\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:346: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f99ed8e4490>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable\\\\n  (Sessio...\\\\n#17 0x55d4c003e6b4 \\\\u003Cunknown>\\\\n#18 0x55d4c004f143 \\\\u003Cunknown>\\\\n#19 0x7f5d3ded9044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\nE         (Session info: headless chrome=118.0.5993.70)\nE       Stacktrace:\nE       #0 0x55d4c004ffb3 <unknown>\nE       #1 0x55d4bfd232f6 <unknown>\nE       #2 0x55d4bfd6bf26 <unknown>\nE       #3 0x55d4bfd60d59 <unknown>\nE       #4 0x55d4bfd8c942 <unknown>\nE       #5 0x55d4bfd60776 <unknown>\nE       #6 0x55d4bfd8cb0e <unknown>\nE       #7 0x55d4bfda5c02 <unknown>\nE       #8 0x55d4bfd8c713 <unknown>\nE       #9 0x55d4bfd5f18b <unknown>\nE       #10 0x55d4bfd5ff7e <unknown>\nE       #11 0x55d4c00158d8 <unknown>\nE       #12 0x55d4c0019800 <unknown>\nE       #13 0x55d4c0023cfc <unknown>\nE       #14 0x55d4c001a418 <unknown>\nE       #15 0x55d4bffe742f <unknown>\nE       #16 0x55d4c003e4e8 <unknown>\nE       #17 0x55d4c003e6b4 <unknown>\nE       #18 0x55d4c004f143 <unknown>\nE       #19 0x7f5d3ded9044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: ElementNotInteractableException","steps":[{"name":"Проверка функциональности ссылки 'Местоположение'","time":{"start":1698023032283,"stop":1698023032320,"duration":37},"status":"broken","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: headless chrome=118.0.5993.70)\nStacktrace:\n#0 0x55d4c004ffb3 <unknown>\n#1 0x55d4bfd232f6 <unknown>\n#2 0x55d4bfd6bf26 <unknown>\n#3 0x55d4bfd60d59 <unknown>\n#4 0x55d4bfd8c942 <unknown>\n#5 0x55d4bfd60776 <unknown>\n#6 0x55d4bfd8cb0e <unknown>\n#7 0x55d4bfda5c02 <unknown>\n#8 0x55d4bfd8c713 <unknown>\n#9 0x55d4bfd5f18b <unknown>\n#10 0x55d4bfd5ff7e <unknown>\n#11 0x55d4c00158d8 <unknown>\n#12 0x55d4c0019800 <unknown>\n#13 0x55d4c0023cfc <unknown>\n#14 0x55d4c001a418 <unknown>\n#15 0x55d4bffe742f <unknown>\n#16 0x55d4c003e4e8 <unknown>\n#17 0x55d4c003e6b4 <unknown>\n#18 0x55d4c004f143 <unknown>\n#19 0x7f5d3ded9044 <unknown>\n\n","statusTrace":"  File \"/usr/local/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/app/pages/main_page.py\", line 148, in check_location_link\n    self.driver.find_element(*self._location).click()\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 346, in execute\n    self.error_handler.check_response(response)\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 245, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[{"uid":"799cda0d147d05a7","name":"Screenshot","source":"799cda0d147d05a7.png","type":"image/png","size":239060},{"uid":"7a1346e8a8c5a4c2","name":"HTML source","source":"7a1346e8a8c5a4c2.html","type":"text/html","size":395414}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":2,"hasContent":true},"afterStages":[{"name":"driver::0","time":{"start":1698023032526,"stop":1698023032591,"duration":65},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup::0","time":{"start":1698023032526,"stop":1698023032526,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"feature","value":"Footer functionality"},{"name":"epic","value":"Main Page"},{"name":"tag","value":"smoke_test"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_main_page"},{"name":"subSuite","value":"TestMainPage"},{"name":"host","value":"5cb5c3ca9635"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_main_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"url","value":"'https://stroyrem-nn.ru/'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":74,"unknown":0,"total":75},"items":[{"uid":"f8e1cba47a122fee","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/117//#testresult/f8e1cba47a122fee","status":"passed","time":{"start":1697936844590,"stop":1697936847868,"duration":3278}},{"uid":"c3f9cc2e47d6d0e1","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/116//#testresult/c3f9cc2e47d6d0e1","status":"passed","time":{"start":1697850130705,"stop":1697850134178,"duration":3473}},{"uid":"f91ab3e5b6c2f985","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/115//#testresult/f91ab3e5b6c2f985","status":"passed","time":{"start":1697763844233,"stop":1697763848379,"duration":4146}},{"uid":"31d4428eafac2631","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/114//#testresult/31d4428eafac2631","status":"passed","time":{"start":1697677446089,"stop":1697677448735,"duration":2646}},{"uid":"61654ff176e82a5d","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/113//#testresult/61654ff176e82a5d","status":"passed","time":{"start":1697591083109,"stop":1697591086302,"duration":3193}},{"uid":"718c76c4b24c2ff3","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/112//#testresult/718c76c4b24c2ff3","status":"passed","time":{"start":1697504695041,"stop":1697504700095,"duration":5054}},{"uid":"724db300e8ddb060","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/111//#testresult/724db300e8ddb060","status":"passed","time":{"start":1697418298274,"stop":1697418301649,"duration":3375}},{"uid":"653f8de1925a27e6","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/110//#testresult/653f8de1925a27e6","status":"passed","time":{"start":1697332082278,"stop":1697332084910,"duration":2632}},{"uid":"224c9effcd23ea92","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/109//#testresult/224c9effcd23ea92","status":"passed","time":{"start":1697245356986,"stop":1697245361158,"duration":4172}},{"uid":"887651b28753212b","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/108//#testresult/887651b28753212b","status":"passed","time":{"start":1697159124580,"stop":1697159128859,"duration":4279}},{"uid":"52a21fbf65fd7641","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/107//#testresult/52a21fbf65fd7641","status":"passed","time":{"start":1697072541872,"stop":1697072544572,"duration":2700}},{"uid":"d740689e973c59f2","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/106//#testresult/d740689e973c59f2","status":"passed","time":{"start":1696986193137,"stop":1696986196613,"duration":3476}},{"uid":"31f8de6ffa31d1c9","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/105//#testresult/31f8de6ffa31d1c9","status":"passed","time":{"start":1696899776312,"stop":1696899779802,"duration":3490}},{"uid":"aa29244b12827bbe","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/104//#testresult/aa29244b12827bbe","status":"passed","time":{"start":1696813443715,"stop":1696813446333,"duration":2618}},{"uid":"a15c759670f2636b","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/103//#testresult/a15c759670f2636b","status":"passed","time":{"start":1696727286966,"stop":1696727291897,"duration":4931}},{"uid":"702974b17a78c3bc","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/102//#testresult/702974b17a78c3bc","status":"passed","time":{"start":1696640593793,"stop":1696640596560,"duration":2767}},{"uid":"fbb43f98dd800867","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/101//#testresult/fbb43f98dd800867","status":"passed","time":{"start":1696554222240,"stop":1696554225746,"duration":3506}},{"uid":"dffa51a05bd4142a","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/100//#testresult/dffa51a05bd4142a","status":"passed","time":{"start":1696467926644,"stop":1696467934196,"duration":7552}},{"uid":"192329764bca511d","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/99//#testresult/192329764bca511d","status":"passed","time":{"start":1696381496870,"stop":1696381500896,"duration":4026}},{"uid":"d7d6b43aba10b65b","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/98//#testresult/d7d6b43aba10b65b","status":"passed","time":{"start":1696295084303,"stop":1696295087179,"duration":2876}}]},"tags":["smoke_test"]},"source":"8dfbcc252a67abb9.json","parameterValues":["'https://stroyrem-nn.ru/'"]}