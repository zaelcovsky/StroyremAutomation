{"uid":"b9d05c6d771c450e","name":"Авторизация с помощью аккаунта mail.ru","fullName":"tests.test_sign_in.test_sign_in_page.TestSignInPage#test_positive_authorization_first_time_using_MAIL_smoke","historyId":"f4f3772e4e299a8f841d74c91831025e","time":{"start":1694049563464,"stop":1694049587982,"duration":24518},"status":"skipped","statusMessage":"XFAIL Сломалось?\n\nselenium.common.exceptions.TimeoutException: Message:","statusTrace":"self = <tests.test_sign_in.test_sign_in_page.TestSignInPage object at 0x7f57906097d0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"0fdf12b837876297d1fa62d0740d9f1b\")>\nsign_in_page = <pages.sign_in_page.SignInPage object at 0x7f579170c890>\nopen_sign_in_window = None\n\n    @allure.title(\"Авторизация с помощью аккаунта mail.ru\")\n    @pytest.mark.xfail(reason=\"Сломалось?\")\n    @pytest.mark.smoke_test\n    def test_positive_authorization_first_time_using_MAIL_smoke(self, driver, sign_in_page, open_sign_in_window):\n        sign_in_page.get_mail_auth_icon().click()\n        driver.switch_to.window(driver.window_handles[1])\n        sign_in_page.get_mail_ru_window_email_field().send_keys(credentials['mail.ru_email'])\n        sign_in_page.get_mail_ru_window_password_field().send_keys(credentials['mail.ru_password'])\n        sign_in_page.get_mail_ru_window_submit_button().click()\n        driver.switch_to.window(driver.window_handles[0])\n>       sign_in_page.check_number_of_windows_to_be_equal(1)\n\ntests/test_sign_in/test_sign_in_page.py:55: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nbase/seleniumbase.py:115: in check_number_of_windows_to_be_equal\n    return self.__wait.until(EC.number_of_windows_to_be(number))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"0fdf12b837876297d1fa62d0740d9f1b\")>\nmethod = <function number_of_windows_to_be.<locals>._predicate at 0x7f5790bd79c0>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1694048388041,"stop":1694048388137,"duration":96},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"clear_allure_results_folder","time":{"start":1694048388137,"stop":1694048388138,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"driver","time":{"start":1694049554212,"stop":1694049555028,"duration":816},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"sign_in_page","time":{"start":1694049555028,"stop":1694049563017,"duration":7989},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"setup","time":{"start":1694049555028,"stop":1694049555028,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"open_sign_in_window","time":{"start":1694049563017,"stop":1694049563463,"duration":446},"status":"passed","steps":[{"name":"Нахождение элемента: иконка профиля в хедере","time":{"start":1694049563017,"stop":1694049563033,"duration":16},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0}],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":true,"shouldDisplayMessage":false,"stepsCount":1}],"testStage":{"status":"skipped","statusMessage":"XFAIL Сломалось?\n\nselenium.common.exceptions.TimeoutException: Message:","statusTrace":"self = <tests.test_sign_in.test_sign_in_page.TestSignInPage object at 0x7f57906097d0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"0fdf12b837876297d1fa62d0740d9f1b\")>\nsign_in_page = <pages.sign_in_page.SignInPage object at 0x7f579170c890>\nopen_sign_in_window = None\n\n    @allure.title(\"Авторизация с помощью аккаунта mail.ru\")\n    @pytest.mark.xfail(reason=\"Сломалось?\")\n    @pytest.mark.smoke_test\n    def test_positive_authorization_first_time_using_MAIL_smoke(self, driver, sign_in_page, open_sign_in_window):\n        sign_in_page.get_mail_auth_icon().click()\n        driver.switch_to.window(driver.window_handles[1])\n        sign_in_page.get_mail_ru_window_email_field().send_keys(credentials['mail.ru_email'])\n        sign_in_page.get_mail_ru_window_password_field().send_keys(credentials['mail.ru_password'])\n        sign_in_page.get_mail_ru_window_submit_button().click()\n        driver.switch_to.window(driver.window_handles[0])\n>       sign_in_page.check_number_of_windows_to_be_equal(1)\n\ntests/test_sign_in/test_sign_in_page.py:55: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nbase/seleniumbase.py:115: in check_number_of_windows_to_be_equal\n    return self.__wait.until(EC.number_of_windows_to_be(number))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"0fdf12b837876297d1fa62d0740d9f1b\")>\nmethod = <function number_of_windows_to_be.<locals>._predicate at 0x7f5790bd79c0>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","steps":[{"name":"Нахождение элемента: иконка 'mail.ru' окна авторизации","time":{"start":1694049563464,"stop":1694049563478,"duration":14},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"Нахождение элемента: поле 'Email' окна авторизации через 'mail.ru'","time":{"start":1694049563545,"stop":1694049566323,"duration":2778},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"Нахождение элемента: поле 'Пароль' окна авторизации через 'mail.ru'","time":{"start":1694049566408,"stop":1694049566423,"duration":15},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"Нахождение элемента: кнопка 'Войти' окна авторизации через 'mail.ru'","time":{"start":1694049566489,"stop":1694049566501,"duration":12},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0}],"attachments":[{"uid":"26e53f566767a974","name":"Screenshot","source":"26e53f566767a974.png","type":"image/png","size":38186},{"uid":"1951925130975e6f","name":"HTML source","source":"1951925130975e6f.html","type":"text/html","size":402162}],"parameters":[],"attachmentsCount":2,"hasContent":true,"shouldDisplayMessage":true,"stepsCount":4},"afterStages":[{"name":"setup::0","time":{"start":1694049588179,"stop":1694049588179,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"driver::0","time":{"start":1694049588180,"stop":1694049588246,"duration":66},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0}],"labels":[{"name":"epic","value":"Sign In Page"},{"name":"tag","value":"smoke_test"},{"name":"tag","value":"@pytest.mark.xfail(reason='Сломалось?')"},{"name":"parentSuite","value":"tests.test_sign_in"},{"name":"suite","value":"test_sign_in_page"},{"name":"subSuite","value":"TestSignInPage"},{"name":"host","value":"60deaa3afbff"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_sign_in.test_sign_in_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":10,"skipped":10,"passed":23,"unknown":0,"total":43},"items":[{"uid":"a582499aaf1ef04a","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/71//#testresult/a582499aaf1ef04a","status":"skipped","statusDetails":"XFAIL Сломалось?\n\nselenium.common.exceptions.TimeoutException: Message:","time":{"start":1693963625846,"stop":1693963651671,"duration":25825}},{"uid":"baa80e23f9951783","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/70//#testresult/baa80e23f9951783","status":"skipped","statusDetails":"XFAIL Сломалось?\n\nselenium.common.exceptions.TimeoutException: Message:","time":{"start":1693876932773,"stop":1693876957263,"duration":24490}},{"uid":"bb6847bb7ec5a6f6","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/69//#testresult/bb6847bb7ec5a6f6","status":"skipped","statusDetails":"XFAIL Сломалось?\n\nselenium.common.exceptions.TimeoutException: Message:","time":{"start":1693790951933,"stop":1693790979349,"duration":27416}},{"uid":"f024eb1e8f87a3e","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/68//#testresult/f024eb1e8f87a3e","status":"skipped","statusDetails":"XFAIL Сломалось?\n\nselenium.common.exceptions.TimeoutException: Message:","time":{"start":1693704399129,"stop":1693704418934,"duration":19805}},{"uid":"3b35334c56d90d27","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/67//#testresult/3b35334c56d90d27","status":"skipped","statusDetails":"XFAIL Сломалось?\n\nselenium.common.exceptions.TimeoutException: Message:","time":{"start":1693617615738,"stop":1693617640249,"duration":24511}},{"uid":"f7f85d83867dc6f1","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/66//#testresult/f7f85d83867dc6f1","status":"skipped","statusDetails":"XFAIL Сломалось?\n\nselenium.common.exceptions.TimeoutException: Message:","time":{"start":1693531467562,"stop":1693531491444,"duration":23882}},{"uid":"9db80856c20ff9ce","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/9//#testresult/9db80856c20ff9ce","status":"skipped","statusDetails":"XFAIL Сломалось?\n\nselenium.common.exceptions.TimeoutException: Message:","time":{"start":1693507377922,"stop":1693507400911,"duration":22989}},{"uid":"a08f4d84290b3602","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/65//#testresult/a08f4d84290b3602","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1693444611974,"stop":1693444637460,"duration":25486}},{"uid":"65fceee8be3795e8","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/64//#testresult/65fceee8be3795e8","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1693358075079,"stop":1693358100013,"duration":24934}},{"uid":"86f31b7c2fc79501","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/63//#testresult/86f31b7c2fc79501","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1693271598336,"stop":1693271621987,"duration":23651}},{"uid":"8aa0824be9ea496d","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/62//#testresult/8aa0824be9ea496d","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1693185203664,"stop":1693185226197,"duration":22533}},{"uid":"65a07afc684b3995","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/61//#testresult/65a07afc684b3995","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1693098940094,"stop":1693098963557,"duration":23463}},{"uid":"72f9bd56c7041dbb","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/60//#testresult/72f9bd56c7041dbb","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1693012314036,"stop":1693012334817,"duration":20781}},{"uid":"9827245e3ba0e8c","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/59//#testresult/9827245e3ba0e8c","status":"passed","time":{"start":1692925981750,"stop":1692925997224,"duration":15474}},{"uid":"6238ea430f7475c7","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/58//#testresult/6238ea430f7475c7","status":"passed","time":{"start":1692839433821,"stop":1692839448681,"duration":14860}},{"uid":"85e44c2edcca1c9e","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/57//#testresult/85e44c2edcca1c9e","status":"passed","time":{"start":1692753163092,"stop":1692753179664,"duration":16572}},{"uid":"5890e4403a48e5b7","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/56//#testresult/5890e4403a48e5b7","status":"passed","time":{"start":1692666714820,"stop":1692666730919,"duration":16099}},{"uid":"c0ecd8dff99e49a8","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/55//#testresult/c0ecd8dff99e49a8","status":"passed","time":{"start":1692580214239,"stop":1692580229754,"duration":15515}},{"uid":"93a77362653f08b","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/54//#testresult/93a77362653f08b","status":"passed","time":{"start":1692494010097,"stop":1692494025364,"duration":15267}},{"uid":"659e0644e34d4677","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/53//#testresult/659e0644e34d4677","status":"passed","time":{"start":1692407443747,"stop":1692407459530,"duration":15783}}]},"tags":["@pytest.mark.xfail(reason='Сломалось?')","smoke_test"]},"source":"b9d05c6d771c450e.json","parameterValues":[]}