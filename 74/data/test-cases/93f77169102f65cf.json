{"uid":"93f77169102f65cf","name":"positive_discount_for_unauthorized_customer_purchase_amount_0_to_49rub_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_discount_for_unauthorized_customer_purchase_amount_0_to_49rub_smoke","historyId":"af8fbd6f50a28c543b5170548fcea335","time":{"start":1694222179528,"stop":1694222181969,"duration":2441},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=116.0.5845.96)\nStacktrace:\n#0 0x55d1726c7e23 <unknown>\n#1 0x55d1723f07a7 <unknown>\n#2 0x55d172434d22 <unknown>\n#3 0x55d172433267 <unknown>\n#4 0x55d1724311e8 <unknown>\n#5 0x55d17243032d <unknown>\n#6 0x55d172425599 <unknown>\n#7 0x55d172450012 <unknown>\n#8 0x55d172424fb6 <unknown>\n#9 0x55d1724501de <unknown>\n#10 0x55d172468369 <unknown>\n#11 0x55d17244fde3 <unknown>\n#12 0x55d172423a7b <unknown>\n#13 0x55d17242481e <unknown>\n#14 0x55d172689638 <unknown>\n#15 0x55d17268d507 <unknown>\n#16 0x55d172697c4c <unknown>\n#17 0x55d17268e136 <unknown>\n#18 0x55d17265c9cf <unknown>\n#19 0x55d1726b1b98 <unknown>\n#20 0x55d1726b1d68 <unknown>\n#21 0x55d1726c0cb3 <unknown>\n#22 0x7f8a21a97044 <unknown>","statusTrace":"self = <test_products_on_sale_page.TestProductsOnSalePage object at 0x7f92f8fed9d0>\nlink = 'https://test2.stroyrem-nn.ru/catalog/shurupy-po-derevu'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f92f7c03390>\n\n    @allure.title(\"positive_discount_for_unauthorized_customer_purchase_amount_0_to_49rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHURUPY_PO_DEREVU_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHURUPY_PO_DEREVU_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_discount_for_unauthorized_customer_purchase_amount_0_to_49rub_smoke(\n            self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(0)\n        product_page_open.get_field_price_last().send_keys(49)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:241: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:346: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f92f80c9b50>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55d1726b1d68 \\\\u003Cunknown>\\\\n#21 0x55d1726c0cb3 \\\\u003Cunknown>\\\\n#22 0x7f8a21a97044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: headless chrome=116.0.5845.96)\nE       Stacktrace:\nE       #0 0x55d1726c7e23 <unknown>\nE       #1 0x55d1723f07a7 <unknown>\nE       #2 0x55d172434d22 <unknown>\nE       #3 0x55d172433267 <unknown>\nE       #4 0x55d1724311e8 <unknown>\nE       #5 0x55d17243032d <unknown>\nE       #6 0x55d172425599 <unknown>\nE       #7 0x55d172450012 <unknown>\nE       #8 0x55d172424fb6 <unknown>\nE       #9 0x55d1724501de <unknown>\nE       #10 0x55d172468369 <unknown>\nE       #11 0x55d17244fde3 <unknown>\nE       #12 0x55d172423a7b <unknown>\nE       #13 0x55d17242481e <unknown>\nE       #14 0x55d172689638 <unknown>\nE       #15 0x55d17268d507 <unknown>\nE       #16 0x55d172697c4c <unknown>\nE       #17 0x55d17268e136 <unknown>\nE       #18 0x55d17265c9cf <unknown>\nE       #19 0x55d1726b1b98 <unknown>\nE       #20 0x55d1726b1d68 <unknown>\nE       #21 0x55d1726c0cb3 <unknown>\nE       #22 0x7f8a21a97044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1694221113625,"stop":1694221113725,"duration":100},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"clear_allure_results_folder","time":{"start":1694221113725,"stop":1694221113725,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver","time":{"start":1694222170526,"stop":1694222171319,"duration":793},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup","time":{"start":1694222171319,"stop":1694222171319,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"product_page_open","time":{"start":1694222171319,"stop":1694222179528,"duration":8209},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=116.0.5845.96)\nStacktrace:\n#0 0x55d1726c7e23 <unknown>\n#1 0x55d1723f07a7 <unknown>\n#2 0x55d172434d22 <unknown>\n#3 0x55d172433267 <unknown>\n#4 0x55d1724311e8 <unknown>\n#5 0x55d17243032d <unknown>\n#6 0x55d172425599 <unknown>\n#7 0x55d172450012 <unknown>\n#8 0x55d172424fb6 <unknown>\n#9 0x55d1724501de <unknown>\n#10 0x55d172468369 <unknown>\n#11 0x55d17244fde3 <unknown>\n#12 0x55d172423a7b <unknown>\n#13 0x55d17242481e <unknown>\n#14 0x55d172689638 <unknown>\n#15 0x55d17268d507 <unknown>\n#16 0x55d172697c4c <unknown>\n#17 0x55d17268e136 <unknown>\n#18 0x55d17265c9cf <unknown>\n#19 0x55d1726b1b98 <unknown>\n#20 0x55d1726b1d68 <unknown>\n#21 0x55d1726c0cb3 <unknown>\n#22 0x7f8a21a97044 <unknown>","statusTrace":"self = <test_products_on_sale_page.TestProductsOnSalePage object at 0x7f92f8fed9d0>\nlink = 'https://test2.stroyrem-nn.ru/catalog/shurupy-po-derevu'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f92f7c03390>\n\n    @allure.title(\"positive_discount_for_unauthorized_customer_purchase_amount_0_to_49rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHURUPY_PO_DEREVU_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHURUPY_PO_DEREVU_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_discount_for_unauthorized_customer_purchase_amount_0_to_49rub_smoke(\n            self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(0)\n        product_page_open.get_field_price_last().send_keys(49)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:241: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:346: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f92f80c9b50>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55d1726b1d68 \\\\u003Cunknown>\\\\n#21 0x55d1726c0cb3 \\\\u003Cunknown>\\\\n#22 0x7f8a21a97044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: headless chrome=116.0.5845.96)\nE       Stacktrace:\nE       #0 0x55d1726c7e23 <unknown>\nE       #1 0x55d1723f07a7 <unknown>\nE       #2 0x55d172434d22 <unknown>\nE       #3 0x55d172433267 <unknown>\nE       #4 0x55d1724311e8 <unknown>\nE       #5 0x55d17243032d <unknown>\nE       #6 0x55d172425599 <unknown>\nE       #7 0x55d172450012 <unknown>\nE       #8 0x55d172424fb6 <unknown>\nE       #9 0x55d1724501de <unknown>\nE       #10 0x55d172468369 <unknown>\nE       #11 0x55d17244fde3 <unknown>\nE       #12 0x55d172423a7b <unknown>\nE       #13 0x55d17242481e <unknown>\nE       #14 0x55d172689638 <unknown>\nE       #15 0x55d17268d507 <unknown>\nE       #16 0x55d172697c4c <unknown>\nE       #17 0x55d17268e136 <unknown>\nE       #18 0x55d17265c9cf <unknown>\nE       #19 0x55d1726b1b98 <unknown>\nE       #20 0x55d1726b1d68 <unknown>\nE       #21 0x55d1726c0cb3 <unknown>\nE       #22 0x7f8a21a97044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: ElementClickInterceptedException","steps":[{"name":"Проверяем видимость поля 'ЦЕНА от'","time":{"start":1694222179528,"stop":1694222179587,"duration":59},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем видимость поля 'ЦЕНА до'","time":{"start":1694222179662,"stop":1694222179712,"duration":50},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1694222180786,"stop":1694222180883,"duration":97},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[{"uid":"7a7d580198c8e33a","name":"Screenshot","source":"7a7d580198c8e33a.png","type":"image/png","size":58752},{"uid":"e386312712725822","name":"HTML source","source":"e386312712725822.html","type":"text/html","size":892253}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":2,"hasContent":true},"afterStages":[{"name":"setup::0","time":{"start":1694222182248,"stop":1694222182248,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver::0","time":{"start":1694222182249,"stop":1694222182312,"duration":63},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"61551f3c426e"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://test2.stroyrem-nn.ru/catalog/shurupy-po-derevu'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":8,"unknown":0,"total":10},"items":[{"uid":"b4b206db53788ffd","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/73//#testresult/b4b206db53788ffd","status":"passed","time":{"start":1694135606686,"stop":1694135616446,"duration":9760}},{"uid":"de495b1f359688c5","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/72//#testresult/de495b1f359688c5","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=116.0.5845.96)\nStacktrace:\n#0 0x55ea10219e23 <unknown>\n#1 0x55ea0ff427a7 <unknown>\n#2 0x55ea0ff86d22 <unknown>\n#3 0x55ea0ff85267 <unknown>\n#4 0x55ea0ff831e8 <unknown>\n#5 0x55ea0ff8232d <unknown>\n#6 0x55ea0ff77599 <unknown>\n#7 0x55ea0ffa2012 <unknown>\n#8 0x55ea0ff76fb6 <unknown>\n#9 0x55ea0ffa21de <unknown>\n#10 0x55ea0ffba369 <unknown>\n#11 0x55ea0ffa1de3 <unknown>\n#12 0x55ea0ff75a7b <unknown>\n#13 0x55ea0ff7681e <unknown>\n#14 0x55ea101db638 <unknown>\n#15 0x55ea101df507 <unknown>\n#16 0x55ea101e9c4c <unknown>\n#17 0x55ea101e0136 <unknown>\n#18 0x55ea101ae9cf <unknown>\n#19 0x55ea10203b98 <unknown>\n#20 0x55ea10203d68 <unknown>\n#21 0x55ea10212cb3 <unknown>\n#22 0x7f3c37e8a044 <unknown>","time":{"start":1694049298985,"stop":1694049301464,"duration":2479}},{"uid":"c3a5502f05133cad","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/71//#testresult/c3a5502f05133cad","status":"passed","time":{"start":1693963275917,"stop":1693963286551,"duration":10634}},{"uid":"63b42b5c03f80d8a","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/70//#testresult/63b42b5c03f80d8a","status":"passed","time":{"start":1693876602407,"stop":1693876612945,"duration":10538}},{"uid":"8433ecf97165d2b3","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/69//#testresult/8433ecf97165d2b3","status":"passed","time":{"start":1693790589207,"stop":1693790600508,"duration":11301}},{"uid":"65c91edd739d7fc7","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/68//#testresult/65c91edd739d7fc7","status":"passed","time":{"start":1693704087291,"stop":1693704097430,"duration":10139}},{"uid":"2361a9b61a46fb77","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/67//#testresult/2361a9b61a46fb77","status":"passed","time":{"start":1693617293409,"stop":1693617303742,"duration":10333}},{"uid":"1747add97258772b","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/66//#testresult/1747add97258772b","status":"passed","time":{"start":1693531157224,"stop":1693531167104,"duration":9880}},{"uid":"5a70d4f47fb0b225","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/9//#testresult/5a70d4f47fb0b225","status":"passed","time":{"start":1693507214558,"stop":1693507224138,"duration":9580}}]},"tags":["smoke_test"]},"source":"93f77169102f65cf.json","parameterValues":["'https://test2.stroyrem-nn.ru/catalog/shurupy-po-derevu'"]}