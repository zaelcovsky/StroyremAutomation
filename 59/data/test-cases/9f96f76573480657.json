{"uid":"9f96f76573480657","name":"positive_check_discount_displayed_for_unauthorized_customer_for_amount_0-49rub_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_check_discount_for_unauthorized_customer_for_amount_0_49rub_smoke","historyId":"6acc55528dac86ebd33a3d68ace88998","time":{"start":1692925776854,"stop":1692925785572,"duration":8718},"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: headless chrome=116.0.5845.96); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x56068d287e23 <unknown>\n#1 0x56068cfb07a7 <unknown>\n#2 0x56068cfb4d1e <unknown>\n#3 0x56068cfb6580 <unknown>\n#4 0x56068cfb663c <unknown>\n#5 0x56068cff4c06 <unknown>\n#6 0x56068cff3267 <unknown>\n#7 0x56068cff11e8 <unknown>\n#8 0x56068cff032d <unknown>\n#9 0x56068cfe5599 <unknown>\n#10 0x56068d010012 <unknown>\n#11 0x56068cfe4fb6 <unknown>\n#12 0x56068d0101de <unknown>\n#13 0x56068d028369 <unknown>\n#14 0x56068d00fde3 <unknown>\n#15 0x56068cfe3a7b <unknown>\n#16 0x56068cfe481e <unknown>\n#17 0x56068d249638 <unknown>\n#18 0x56068d24d507 <unknown>\n#19 0x56068d257c4c <unknown>\n#20 0x56068d24e136 <unknown>\n#21 0x56068d21c9cf <unknown>\n#22 0x56068d271b98 <unknown>\n#23 0x56068d271d68 <unknown>\n#24 0x56068d280cb3 <unknown>\n#25 0x7fe4ab2f6044 <unknown>","statusTrace":"self = <test_products_on_sale_page.TestProductsOnSalePage object at 0x7f1a5d398c50>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"e0bf9bd758d40960e9bc90fc4e34ca2d\")>\nlink = 'https://test2.stroyrem-nn.ru/catalog/shurupy-po-derevu'\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_0-49rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHURUPY_PO_DEREVU_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHURUPY_PO_DEREVU_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_discount_for_unauthorized_customer_for_amount_0_49rub_smoke(self, driver, link):\n        page = ProductsOnSale(driver)\n        driver.get(link)\n        page.get_field_price_first().send_keys(0)\n        page.get_field_price_last().send_keys(49)\n        page.get_in_stock_products_link().click()\n        time.sleep(1)\n        price = (float(page.get_pc_price().text[:-2]))\n>       page.get_add_to_cart_btn().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:346: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f1a5d981990>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#23 0x56068d271d68 \\\\u003Cunknown>\\\\n#24 0x56068d280cb3 \\\\u003Cunknown>\\\\n#25 0x7fe4ab2f6044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\nE         (Session info: headless chrome=116.0.5845.96); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x56068d287e23 <unknown>\nE       #1 0x56068cfb07a7 <unknown>\nE       #2 0x56068cfb4d1e <unknown>\nE       #3 0x56068cfb6580 <unknown>\nE       #4 0x56068cfb663c <unknown>\nE       #5 0x56068cff4c06 <unknown>\nE       #6 0x56068cff3267 <unknown>\nE       #7 0x56068cff11e8 <unknown>\nE       #8 0x56068cff032d <unknown>\nE       #9 0x56068cfe5599 <unknown>\nE       #10 0x56068d010012 <unknown>\nE       #11 0x56068cfe4fb6 <unknown>\nE       #12 0x56068d0101de <unknown>\nE       #13 0x56068d028369 <unknown>\nE       #14 0x56068d00fde3 <unknown>\nE       #15 0x56068cfe3a7b <unknown>\nE       #16 0x56068cfe481e <unknown>\nE       #17 0x56068d249638 <unknown>\nE       #18 0x56068d24d507 <unknown>\nE       #19 0x56068d257c4c <unknown>\nE       #20 0x56068d24e136 <unknown>\nE       #21 0x56068d21c9cf <unknown>\nE       #22 0x56068d271b98 <unknown>\nE       #23 0x56068d271d68 <unknown>\nE       #24 0x56068d280cb3 <unknown>\nE       #25 0x7fe4ab2f6044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: StaleElementReferenceException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1692925206534,"stop":1692925206613,"duration":79},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"clear_allure_results_folder","time":{"start":1692925206613,"stop":1692925206613,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"driver","time":{"start":1692925776020,"stop":1692925776853,"duration":833},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"setup","time":{"start":1692925776853,"stop":1692925776854,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: headless chrome=116.0.5845.96); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x56068d287e23 <unknown>\n#1 0x56068cfb07a7 <unknown>\n#2 0x56068cfb4d1e <unknown>\n#3 0x56068cfb6580 <unknown>\n#4 0x56068cfb663c <unknown>\n#5 0x56068cff4c06 <unknown>\n#6 0x56068cff3267 <unknown>\n#7 0x56068cff11e8 <unknown>\n#8 0x56068cff032d <unknown>\n#9 0x56068cfe5599 <unknown>\n#10 0x56068d010012 <unknown>\n#11 0x56068cfe4fb6 <unknown>\n#12 0x56068d0101de <unknown>\n#13 0x56068d028369 <unknown>\n#14 0x56068d00fde3 <unknown>\n#15 0x56068cfe3a7b <unknown>\n#16 0x56068cfe481e <unknown>\n#17 0x56068d249638 <unknown>\n#18 0x56068d24d507 <unknown>\n#19 0x56068d257c4c <unknown>\n#20 0x56068d24e136 <unknown>\n#21 0x56068d21c9cf <unknown>\n#22 0x56068d271b98 <unknown>\n#23 0x56068d271d68 <unknown>\n#24 0x56068d280cb3 <unknown>\n#25 0x7fe4ab2f6044 <unknown>","statusTrace":"self = <test_products_on_sale_page.TestProductsOnSalePage object at 0x7f1a5d398c50>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"e0bf9bd758d40960e9bc90fc4e34ca2d\")>\nlink = 'https://test2.stroyrem-nn.ru/catalog/shurupy-po-derevu'\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_0-49rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHURUPY_PO_DEREVU_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHURUPY_PO_DEREVU_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_discount_for_unauthorized_customer_for_amount_0_49rub_smoke(self, driver, link):\n        page = ProductsOnSale(driver)\n        driver.get(link)\n        page.get_field_price_first().send_keys(0)\n        page.get_field_price_last().send_keys(49)\n        page.get_in_stock_products_link().click()\n        time.sleep(1)\n        price = (float(page.get_pc_price().text[:-2]))\n>       page.get_add_to_cart_btn().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:346: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f1a5d981990>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#23 0x56068d271d68 \\\\u003Cunknown>\\\\n#24 0x56068d280cb3 \\\\u003Cunknown>\\\\n#25 0x7fe4ab2f6044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\nE         (Session info: headless chrome=116.0.5845.96); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x56068d287e23 <unknown>\nE       #1 0x56068cfb07a7 <unknown>\nE       #2 0x56068cfb4d1e <unknown>\nE       #3 0x56068cfb6580 <unknown>\nE       #4 0x56068cfb663c <unknown>\nE       #5 0x56068cff4c06 <unknown>\nE       #6 0x56068cff3267 <unknown>\nE       #7 0x56068cff11e8 <unknown>\nE       #8 0x56068cff032d <unknown>\nE       #9 0x56068cfe5599 <unknown>\nE       #10 0x56068d010012 <unknown>\nE       #11 0x56068cfe4fb6 <unknown>\nE       #12 0x56068d0101de <unknown>\nE       #13 0x56068d028369 <unknown>\nE       #14 0x56068d00fde3 <unknown>\nE       #15 0x56068cfe3a7b <unknown>\nE       #16 0x56068cfe481e <unknown>\nE       #17 0x56068d249638 <unknown>\nE       #18 0x56068d24d507 <unknown>\nE       #19 0x56068d257c4c <unknown>\nE       #20 0x56068d24e136 <unknown>\nE       #21 0x56068d21c9cf <unknown>\nE       #22 0x56068d271b98 <unknown>\nE       #23 0x56068d271d68 <unknown>\nE       #24 0x56068d280cb3 <unknown>\nE       #25 0x7fe4ab2f6044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: StaleElementReferenceException","steps":[{"name":"Проверяем видимость поля 'ЦЕНА от'","time":{"start":1692925782768,"stop":1692925782828,"duration":60},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Проверяем видимость поля 'ЦЕНА до'","time":{"start":1692925782938,"stop":1692925782988,"duration":50},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Проверяем видимость кнопки 'На складе'","time":{"start":1692925783055,"stop":1692925783106,"duration":51},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Проверяем видимость цены товара","time":{"start":1692925785023,"stop":1692925785098,"duration":75},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Проверяем видимость кнопки 'В корзину'","time":{"start":1692925785116,"stop":1692925785149,"duration":33},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[{"uid":"7e4f35811625bc04","name":"Screenshot","source":"7e4f35811625bc04.png","type":"image/png","size":122259},{"uid":"ff736b69b8cdef4c","name":"HTML source","source":"ff736b69b8cdef4c.html","type":"text/html","size":888430}],"parameters":[],"stepsCount":5,"attachmentsCount":2,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"driver::0","time":{"start":1692925785867,"stop":1692925785933,"duration":66},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"setup::0","time":{"start":1692925785867,"stop":1692925785867,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"3c0f7734f28f"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://test2.stroyrem-nn.ru/catalog/shurupy-po-derevu'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":10,"unknown":0,"total":11},"items":[{"uid":"c864441c94d7e4fa","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/58//#testresult/c864441c94d7e4fa","status":"passed","time":{"start":1692839208419,"stop":1692839221172,"duration":12753}},{"uid":"1f87ec8d195d9658","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/57//#testresult/1f87ec8d195d9658","status":"passed","time":{"start":1692752911877,"stop":1692752925728,"duration":13851}},{"uid":"ea55f20cf76baa04","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/56//#testresult/ea55f20cf76baa04","status":"passed","time":{"start":1692666493213,"stop":1692666505850,"duration":12637}},{"uid":"d5c98201952db717","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/55//#testresult/d5c98201952db717","status":"passed","time":{"start":1692580009228,"stop":1692580020901,"duration":11673}},{"uid":"8a95cf3edd02bf1a","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/54//#testresult/8a95cf3edd02bf1a","status":"passed","time":{"start":1692493797329,"stop":1692493809412,"duration":12083}},{"uid":"9c01ef67e914ce2a","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/53//#testresult/9c01ef67e914ce2a","status":"passed","time":{"start":1692407193922,"stop":1692407206940,"duration":13018}},{"uid":"75915fdf210af8fd","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/52//#testresult/75915fdf210af8fd","status":"passed","time":{"start":1692320900539,"stop":1692320913989,"duration":13450}},{"uid":"8ff4877b2b8c5978","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/51//#testresult/8ff4877b2b8c5978","status":"passed","time":{"start":1692234389293,"stop":1692234401424,"duration":12131}},{"uid":"8a8be505977f8c13","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/50//#testresult/8a8be505977f8c13","status":"passed","time":{"start":1692148209761,"stop":1692148224882,"duration":15121}},{"uid":"8140e650205f3ada","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/49//#testresult/8140e650205f3ada","status":"passed","time":{"start":1692061630636,"stop":1692061642240,"duration":11604}}]},"tags":["smoke_test"]},"source":"9f96f76573480657.json","parameterValues":["'https://test2.stroyrem-nn.ru/catalog/shurupy-po-derevu'"]}