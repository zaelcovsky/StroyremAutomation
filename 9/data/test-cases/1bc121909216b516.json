{"uid":"1bc121909216b516","name":"Авторизация с помощью аккаунта OK.ru","fullName":"tests.test_sign_in.test_sign_in_page.TestSignInPage#test_positive_authorization_first_time_using_OK_smoke","historyId":"3273fef023a780529beca6cb62c64840","time":{"start":1693507381896,"stop":1693507400616,"duration":18720},"status":"skipped","statusMessage":"XFAIL хранение логинов/паролей не реализовано\n\nselenium.common.exceptions.TimeoutException: Message:","statusTrace":"self = <tests.test_sign_in.test_sign_in_page.TestSignInPage object at 0x7efe2de08190>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"1e5702773a28459edd1800216f2c6d57\")>\nsign_in_page = <pages.sign_in_page.SignInPage object at 0x7efe2ef8c610>\nopen_sign_in_window = None\n\n    @allure.title(\"Авторизация с помощью аккаунта OK.ru\")\n    @pytest.mark.xfail(reason=\"хранение логинов/паролей не реализовано\")\n    @pytest.mark.smoke_test\n    def test_positive_authorization_first_time_using_OK_smoke(self, driver, sign_in_page, open_sign_in_window):\n        sign_in_page.get_ok_ru_auth_icon().click()\n        driver.switch_to.window(driver.window_handles[1])\n        driver.add_cookie({'name': 'bci',\n                           'value': '232693873704985418',\n                           'domain': '.ok.ru',\n                           'httpOnly': True,\n                           'path': '/',\n                           'expiry': 1726518377,\n                           'secure': True})\n        driver.add_cookie({'name': '_statid',\n                           'value': '2ee9fe98-ab2c-4d1f-9c04-30b8090d3f61',\n                           'domain': '.ok.ru',\n                           'httpOnly': True,\n                           'path': '/',\n                           'expiry': 1726518377,\n                           'secure': True})\n        driver.add_cookie({'name': 'landref',\n                           'value': 'stroyrem-nn.ru',\n                           'domain': '.ok.ru',\n                           'httpOnly': False,\n                           'path': '/',\n                           'expiry': 1726518377,\n                           'secure': True})\n        driver.add_cookie({'name': '__last_online',\n                           'value': '1691958637776',\n                           'domain': 'connect.ok.ru',\n                           'httpOnly': False,\n                           'path': '/',\n                           'expiry': 1726518638,\n                           'secure': True})\n        sign_in_page.get_ok_ru_window_email_field().send_keys(credentials['ok.ru_email'])\n        sign_in_page.get_ok_ru_window_password_field().send_keys(credentials['ok.ru_password'])\n        sign_in_page.get_ok_ru_window_submit_button().click()\n        # на новых аккаунтах нужно еще кликнуть акцепт\n        # self.driver.find_element(*self._ok_ru_window_accept_button).click()\n        driver.switch_to.window(driver.window_handles[0])\n>       sign_in_page.check_number_of_windows_to_be_equal(1)\n\ntests/test_sign_in/test_sign_in_page.py:102: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nbase/seleniumbase.py:115: in check_number_of_windows_to_be_equal\n    return self.__wait.until(EC.number_of_windows_to_be(number))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"1e5702773a28459edd1800216f2c6d57\")>\nmethod = <function number_of_windows_to_be.<locals>._predicate at 0x7efe2ef66700>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1693506779516,"stop":1693506779595,"duration":79},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"clear_allure_results_folder","time":{"start":1693506779595,"stop":1693506779595,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"driver","time":{"start":1693507374572,"stop":1693507375336,"duration":764},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"sign_in_page","time":{"start":1693507375336,"stop":1693507381495,"duration":6159},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"setup","time":{"start":1693507375336,"stop":1693507375336,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"open_sign_in_window","time":{"start":1693507381496,"stop":1693507381895,"duration":399},"status":"passed","steps":[{"name":"Нахождение элемента: иконка профиля в хедере","time":{"start":1693507381496,"stop":1693507381508,"duration":12},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"testStage":{"status":"skipped","statusMessage":"XFAIL хранение логинов/паролей не реализовано\n\nselenium.common.exceptions.TimeoutException: Message:","statusTrace":"self = <tests.test_sign_in.test_sign_in_page.TestSignInPage object at 0x7efe2de08190>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"1e5702773a28459edd1800216f2c6d57\")>\nsign_in_page = <pages.sign_in_page.SignInPage object at 0x7efe2ef8c610>\nopen_sign_in_window = None\n\n    @allure.title(\"Авторизация с помощью аккаунта OK.ru\")\n    @pytest.mark.xfail(reason=\"хранение логинов/паролей не реализовано\")\n    @pytest.mark.smoke_test\n    def test_positive_authorization_first_time_using_OK_smoke(self, driver, sign_in_page, open_sign_in_window):\n        sign_in_page.get_ok_ru_auth_icon().click()\n        driver.switch_to.window(driver.window_handles[1])\n        driver.add_cookie({'name': 'bci',\n                           'value': '232693873704985418',\n                           'domain': '.ok.ru',\n                           'httpOnly': True,\n                           'path': '/',\n                           'expiry': 1726518377,\n                           'secure': True})\n        driver.add_cookie({'name': '_statid',\n                           'value': '2ee9fe98-ab2c-4d1f-9c04-30b8090d3f61',\n                           'domain': '.ok.ru',\n                           'httpOnly': True,\n                           'path': '/',\n                           'expiry': 1726518377,\n                           'secure': True})\n        driver.add_cookie({'name': 'landref',\n                           'value': 'stroyrem-nn.ru',\n                           'domain': '.ok.ru',\n                           'httpOnly': False,\n                           'path': '/',\n                           'expiry': 1726518377,\n                           'secure': True})\n        driver.add_cookie({'name': '__last_online',\n                           'value': '1691958637776',\n                           'domain': 'connect.ok.ru',\n                           'httpOnly': False,\n                           'path': '/',\n                           'expiry': 1726518638,\n                           'secure': True})\n        sign_in_page.get_ok_ru_window_email_field().send_keys(credentials['ok.ru_email'])\n        sign_in_page.get_ok_ru_window_password_field().send_keys(credentials['ok.ru_password'])\n        sign_in_page.get_ok_ru_window_submit_button().click()\n        # на новых аккаунтах нужно еще кликнуть акцепт\n        # self.driver.find_element(*self._ok_ru_window_accept_button).click()\n        driver.switch_to.window(driver.window_handles[0])\n>       sign_in_page.check_number_of_windows_to_be_equal(1)\n\ntests/test_sign_in/test_sign_in_page.py:102: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nbase/seleniumbase.py:115: in check_number_of_windows_to_be_equal\n    return self.__wait.until(EC.number_of_windows_to_be(number))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"1e5702773a28459edd1800216f2c6d57\")>\nmethod = <function number_of_windows_to_be.<locals>._predicate at 0x7efe2ef66700>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","steps":[{"name":"Нахождение элемента: иконка 'OK.ru' окна авторизации","time":{"start":1693507381897,"stop":1693507381910,"duration":13},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Нахождение элемента: поле 'Email' окна авторизации через 'OK.ru'","time":{"start":1693507384914,"stop":1693507384925,"duration":11},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Нахождение элемента: поле 'Пароль' окна авторизации через 'OK.ru'","time":{"start":1693507384985,"stop":1693507384999,"duration":14},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Нахождение элемента: кнопка 'Войти' окна авторизации через 'OK.ru'","time":{"start":1693507385060,"stop":1693507385071,"duration":11},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[{"uid":"38275f464e752418","name":"Screenshot","source":"38275f464e752418.png","type":"image/png","size":38202},{"uid":"d30554e53d0b5bf9","name":"HTML source","source":"d30554e53d0b5bf9.html","type":"text/html","size":402335}],"parameters":[],"stepsCount":4,"attachmentsCount":2,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"driver::0","time":{"start":1693507400754,"stop":1693507400820,"duration":66},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"setup::0","time":{"start":1693507400754,"stop":1693507400754,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"epic","value":"Sign In Page"},{"name":"tag","value":"smoke_test"},{"name":"tag","value":"@pytest.mark.xfail(reason='хранение логинов/паролей не реализовано')"},{"name":"parentSuite","value":"tests.test_sign_in"},{"name":"suite","value":"test_sign_in_page"},{"name":"subSuite","value":"TestSignInPage"},{"name":"host","value":"91d3efd9b5d6"},{"name":"thread","value":"11-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_sign_in.test_sign_in_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":2,"broken":22,"skipped":4,"passed":8,"unknown":0,"total":36},"items":[{"uid":"16f98ce0f1b5d1b9","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/65//#testresult/16f98ce0f1b5d1b9","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1693444649073,"stop":1693444668264,"duration":19191}},{"uid":"cebaf8750ebbaaf0","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/64//#testresult/cebaf8750ebbaaf0","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1693358109497,"stop":1693358129776,"duration":20279}},{"uid":"462481e9056de568","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/63//#testresult/462481e9056de568","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1693271631235,"stop":1693271649980,"duration":18745}},{"uid":"f4f6edb6ecb7cb81","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/62//#testresult/f4f6edb6ecb7cb81","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1693185234178,"stop":1693185252975,"duration":18797}},{"uid":"4d3df95e9c6361cd","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/61//#testresult/4d3df95e9c6361cd","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1693098974878,"stop":1693098994823,"duration":19945}},{"uid":"1ab4447c0487c96a","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/60//#testresult/1ab4447c0487c96a","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1693012344104,"stop":1693012363699,"duration":19595}},{"uid":"eaa3e6376391e2fe","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/59//#testresult/eaa3e6376391e2fe","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1692926005106,"stop":1692926023818,"duration":18712}},{"uid":"6d5605dda2be37db","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/58//#testresult/6d5605dda2be37db","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1692839456269,"stop":1692839474489,"duration":18220}},{"uid":"75571ec78510e3f8","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/57//#testresult/75571ec78510e3f8","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1692753188773,"stop":1692753208241,"duration":19468}},{"uid":"f713751229c0b7ae","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/56//#testresult/f713751229c0b7ae","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1692666738775,"stop":1692666757648,"duration":18873}},{"uid":"512d24ffcd4a84be","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/55//#testresult/512d24ffcd4a84be","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1692580237277,"stop":1692580256320,"duration":19043}},{"uid":"9257fda5dcb53514","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/54//#testresult/9257fda5dcb53514","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1692494032914,"stop":1692494051437,"duration":18523}},{"uid":"ffa110e54291ea15","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/53//#testresult/ffa110e54291ea15","status":"passed","time":{"start":1692407468689,"stop":1692407484942,"duration":16253}},{"uid":"91c1ce3714011d7c","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/52//#testresult/91c1ce3714011d7c","status":"passed","time":{"start":1692321181349,"stop":1692321197626,"duration":16277}},{"uid":"582ce95d60a006c9","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/51//#testresult/582ce95d60a006c9","status":"passed","time":{"start":1692234628804,"stop":1692234644179,"duration":15375}},{"uid":"4824229b443b8353","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/50//#testresult/4824229b443b8353","status":"passed","time":{"start":1692148443664,"stop":1692148460840,"duration":17176}},{"uid":"aae086e606497052","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/49//#testresult/aae086e606497052","status":"passed","time":{"start":1692061805197,"stop":1692061821373,"duration":16176}},{"uid":"43f5162636f80ca2","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/48//#testresult/43f5162636f80ca2","status":"passed","time":{"start":1692014805276,"stop":1692014822253,"duration":16977}},{"uid":"bc2fbcdeb1247b94","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/37//#testresult/bc2fbcdeb1247b94","status":"passed","time":{"start":1691964458445,"stop":1691964475537,"duration":17092}},{"uid":"12f9b041a3a58a63","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/36//#testresult/12f9b041a3a58a63","status":"passed","time":{"start":1691963540471,"stop":1691963554779,"duration":14308}}]},"tags":["@pytest.mark.xfail(reason='хранение логинов/паролей не реализовано')","smoke_test"]},"source":"1bc121909216b516.json","parameterValues":[]}