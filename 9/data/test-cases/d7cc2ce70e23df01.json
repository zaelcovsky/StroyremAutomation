{"uid":"d7cc2ce70e23df01","name":"TC 006 - Проверка функциональности ссылки 'Обратный звонок'","fullName":"tests.test_main_page.TestMainPage#test_positive_footer_back_call_smoke","historyId":"8a1ebd75b8bb4dbf0f8c6237ff40e90b","time":{"start":1693506885730,"stop":1693506885765,"duration":35},"status":"skipped","statusMessage":"XFAIL Сломалось?\n\nselenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: headless chrome=116.0.5845.96)\nStacktrace:\n#0 0x55bb7f9a8e23 <unknown>\n#1 0x55bb7f6d15f6 <unknown>\n#2 0x55bb7f7111c2 <unknown>\n#3 0x55bb7f706599 <unknown>\n#4 0x55bb7f731012 <unknown>\n#5 0x55bb7f705fb6 <unknown>\n#6 0x55bb7f7311de <unknown>\n#7 0x55bb7f749369 <unknown>\n#8 0x55bb7f730de3 <unknown>\n#9 0x55bb7f704a7b <unknown>\n#10 0x55bb7f70581e <unknown>\n#11 0x55bb7f96a638 <unknown>\n#12 0x55bb7f96e507 <unknown>\n#13 0x55bb7f978c4c <unknown>\n#14 0x55bb7f96f136 <unknown>\n#15 0x55bb7f93d9cf <unknown>\n#16 0x55bb7f992b98 <unknown>\n#17 0x55bb7f992d68 <unknown>\n#18 0x55bb7f9a1cb3 <unknown>\n#19 0x7f63f06fd044 <unknown>","statusTrace":"self = <tests.test_main_page.TestMainPage object at 0x7fd9f585d150>\nmain_page = <pages.main_page.MainPage object at 0x7fd9f5580990>\n\n    @allure.feature(\"Footer functionality\")\n    @allure.title(\"TC 006 - Проверка функциональности ссылки 'Обратный звонок'\")\n    @pytest.mark.xfail(reason=\"Сломалось?\")\n    @pytest.mark.smoke_test\n    def test_positive_footer_back_call_smoke(self, main_page):\n>       result = main_page.check_call_back_link()\n\ntests/test_main_page.py:67: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/main_page.py:103: in check_call_back_link\n    self.driver.find_element(*self._call_back_link).click()\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:346: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fd9f516ecd0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable\\\\n  (Sessio...\\\\n#17 0x55bb7f992d68 \\\\u003Cunknown>\\\\n#18 0x55bb7f9a1cb3 \\\\u003Cunknown>\\\\n#19 0x7f63f06fd044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\nE         (Session info: headless chrome=116.0.5845.96)\nE       Stacktrace:\nE       #0 0x55bb7f9a8e23 <unknown>\nE       #1 0x55bb7f6d15f6 <unknown>\nE       #2 0x55bb7f7111c2 <unknown>\nE       #3 0x55bb7f706599 <unknown>\nE       #4 0x55bb7f731012 <unknown>\nE       #5 0x55bb7f705fb6 <unknown>\nE       #6 0x55bb7f7311de <unknown>\nE       #7 0x55bb7f749369 <unknown>\nE       #8 0x55bb7f730de3 <unknown>\nE       #9 0x55bb7f704a7b <unknown>\nE       #10 0x55bb7f70581e <unknown>\nE       #11 0x55bb7f96a638 <unknown>\nE       #12 0x55bb7f96e507 <unknown>\nE       #13 0x55bb7f978c4c <unknown>\nE       #14 0x55bb7f96f136 <unknown>\nE       #15 0x55bb7f93d9cf <unknown>\nE       #16 0x55bb7f992b98 <unknown>\nE       #17 0x55bb7f992d68 <unknown>\nE       #18 0x55bb7f9a1cb3 <unknown>\nE       #19 0x7f63f06fd044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: ElementNotInteractableException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1693506779518,"stop":1693506779597,"duration":79},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"clear_allure_results_folder","time":{"start":1693506779597,"stop":1693506779597,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"driver","time":{"start":1693506878593,"stop":1693506879402,"duration":809},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"main_page","time":{"start":1693506879403,"stop":1693506885730,"duration":6327},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"setup","time":{"start":1693506879403,"stop":1693506879403,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"skipped","statusMessage":"XFAIL Сломалось?\n\nselenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: headless chrome=116.0.5845.96)\nStacktrace:\n#0 0x55bb7f9a8e23 <unknown>\n#1 0x55bb7f6d15f6 <unknown>\n#2 0x55bb7f7111c2 <unknown>\n#3 0x55bb7f706599 <unknown>\n#4 0x55bb7f731012 <unknown>\n#5 0x55bb7f705fb6 <unknown>\n#6 0x55bb7f7311de <unknown>\n#7 0x55bb7f749369 <unknown>\n#8 0x55bb7f730de3 <unknown>\n#9 0x55bb7f704a7b <unknown>\n#10 0x55bb7f70581e <unknown>\n#11 0x55bb7f96a638 <unknown>\n#12 0x55bb7f96e507 <unknown>\n#13 0x55bb7f978c4c <unknown>\n#14 0x55bb7f96f136 <unknown>\n#15 0x55bb7f93d9cf <unknown>\n#16 0x55bb7f992b98 <unknown>\n#17 0x55bb7f992d68 <unknown>\n#18 0x55bb7f9a1cb3 <unknown>\n#19 0x7f63f06fd044 <unknown>","statusTrace":"self = <tests.test_main_page.TestMainPage object at 0x7fd9f585d150>\nmain_page = <pages.main_page.MainPage object at 0x7fd9f5580990>\n\n    @allure.feature(\"Footer functionality\")\n    @allure.title(\"TC 006 - Проверка функциональности ссылки 'Обратный звонок'\")\n    @pytest.mark.xfail(reason=\"Сломалось?\")\n    @pytest.mark.smoke_test\n    def test_positive_footer_back_call_smoke(self, main_page):\n>       result = main_page.check_call_back_link()\n\ntests/test_main_page.py:67: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/main_page.py:103: in check_call_back_link\n    self.driver.find_element(*self._call_back_link).click()\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:346: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fd9f516ecd0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable\\\\n  (Sessio...\\\\n#17 0x55bb7f992d68 \\\\u003Cunknown>\\\\n#18 0x55bb7f9a1cb3 \\\\u003Cunknown>\\\\n#19 0x7f63f06fd044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\nE         (Session info: headless chrome=116.0.5845.96)\nE       Stacktrace:\nE       #0 0x55bb7f9a8e23 <unknown>\nE       #1 0x55bb7f6d15f6 <unknown>\nE       #2 0x55bb7f7111c2 <unknown>\nE       #3 0x55bb7f706599 <unknown>\nE       #4 0x55bb7f731012 <unknown>\nE       #5 0x55bb7f705fb6 <unknown>\nE       #6 0x55bb7f7311de <unknown>\nE       #7 0x55bb7f749369 <unknown>\nE       #8 0x55bb7f730de3 <unknown>\nE       #9 0x55bb7f704a7b <unknown>\nE       #10 0x55bb7f70581e <unknown>\nE       #11 0x55bb7f96a638 <unknown>\nE       #12 0x55bb7f96e507 <unknown>\nE       #13 0x55bb7f978c4c <unknown>\nE       #14 0x55bb7f96f136 <unknown>\nE       #15 0x55bb7f93d9cf <unknown>\nE       #16 0x55bb7f992b98 <unknown>\nE       #17 0x55bb7f992d68 <unknown>\nE       #18 0x55bb7f9a1cb3 <unknown>\nE       #19 0x7f63f06fd044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: ElementNotInteractableException","steps":[{"name":"Проверка функциональности ссылки 'Обратный звонок'","time":{"start":1693506885731,"stop":1693506885764,"duration":33},"status":"broken","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: headless chrome=116.0.5845.96)\nStacktrace:\n#0 0x55bb7f9a8e23 <unknown>\n#1 0x55bb7f6d15f6 <unknown>\n#2 0x55bb7f7111c2 <unknown>\n#3 0x55bb7f706599 <unknown>\n#4 0x55bb7f731012 <unknown>\n#5 0x55bb7f705fb6 <unknown>\n#6 0x55bb7f7311de <unknown>\n#7 0x55bb7f749369 <unknown>\n#8 0x55bb7f730de3 <unknown>\n#9 0x55bb7f704a7b <unknown>\n#10 0x55bb7f70581e <unknown>\n#11 0x55bb7f96a638 <unknown>\n#12 0x55bb7f96e507 <unknown>\n#13 0x55bb7f978c4c <unknown>\n#14 0x55bb7f96f136 <unknown>\n#15 0x55bb7f93d9cf <unknown>\n#16 0x55bb7f992b98 <unknown>\n#17 0x55bb7f992d68 <unknown>\n#18 0x55bb7f9a1cb3 <unknown>\n#19 0x7f63f06fd044 <unknown>\n\n","statusTrace":"  File \"/usr/local/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/app/pages/main_page.py\", line 103, in check_call_back_link\n    self.driver.find_element(*self._call_back_link).click()\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 346, in execute\n    self.error_handler.check_response(response)\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 245, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[{"uid":"6e5f79b99c394f2d","name":"Screenshot","source":"6e5f79b99c394f2d.png","type":"image/png","size":233443},{"uid":"f07ad8c93ce53dc0","name":"HTML source","source":"f07ad8c93ce53dc0.html","type":"text/html","size":401400}],"parameters":[],"stepsCount":1,"attachmentsCount":2,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"setup::0","time":{"start":1693506886022,"stop":1693506886022,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"driver::0","time":{"start":1693506886023,"stop":1693506886103,"duration":80},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"feature","value":"Footer functionality"},{"name":"epic","value":"Main Page"},{"name":"tag","value":"smoke_test"},{"name":"tag","value":"@pytest.mark.xfail(reason='Сломалось?')"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_main_page"},{"name":"subSuite","value":"TestMainPage"},{"name":"host","value":"91d3efd9b5d6"},{"name":"thread","value":"8-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_main_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"url","value":"'https://stroyrem-nn.ru/'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":4,"skipped":1,"passed":17,"unknown":0,"total":22},"items":[{"uid":"ded7e49e1a35d44a","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/65//#testresult/ded7e49e1a35d44a","status":"broken","statusDetails":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: headless chrome=116.0.5845.96)\nStacktrace:\n#0 0x55ee70abce23 <unknown>\n#1 0x55ee707e55f6 <unknown>\n#2 0x55ee708251c2 <unknown>\n#3 0x55ee7081a599 <unknown>\n#4 0x55ee70845012 <unknown>\n#5 0x55ee70819fb6 <unknown>\n#6 0x55ee708451de <unknown>\n#7 0x55ee7085d369 <unknown>\n#8 0x55ee70844de3 <unknown>\n#9 0x55ee70818a7b <unknown>\n#10 0x55ee7081981e <unknown>\n#11 0x55ee70a7e638 <unknown>\n#12 0x55ee70a82507 <unknown>\n#13 0x55ee70a8cc4c <unknown>\n#14 0x55ee70a83136 <unknown>\n#15 0x55ee70a519cf <unknown>\n#16 0x55ee70aa6b98 <unknown>\n#17 0x55ee70aa6d68 <unknown>\n#18 0x55ee70ab5cb3 <unknown>\n#19 0x7ff78bb25044 <unknown>","time":{"start":1693443779324,"stop":1693443779386,"duration":62}},{"uid":"cf4f7c3c334e8f33","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/64//#testresult/cf4f7c3c334e8f33","status":"broken","statusDetails":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: headless chrome=116.0.5845.96)\nStacktrace:\n#0 0x55e7555e0e23 <unknown>\n#1 0x55e7553095f6 <unknown>\n#2 0x55e7553491c2 <unknown>\n#3 0x55e75533e599 <unknown>\n#4 0x55e755369012 <unknown>\n#5 0x55e75533dfb6 <unknown>\n#6 0x55e7553691de <unknown>\n#7 0x55e755381369 <unknown>\n#8 0x55e755368de3 <unknown>\n#9 0x55e75533ca7b <unknown>\n#10 0x55e75533d81e <unknown>\n#11 0x55e7555a2638 <unknown>\n#12 0x55e7555a6507 <unknown>\n#13 0x55e7555b0c4c <unknown>\n#14 0x55e7555a7136 <unknown>\n#15 0x55e7555759cf <unknown>\n#16 0x55e7555cab98 <unknown>\n#17 0x55e7555cad68 <unknown>\n#18 0x55e7555d9cb3 <unknown>\n#19 0x7f6dcb9d8044 <unknown>","time":{"start":1693357336091,"stop":1693357336182,"duration":91}},{"uid":"9fe9122039ad7684","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/63//#testresult/9fe9122039ad7684","status":"broken","statusDetails":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: headless chrome=116.0.5845.96)\nStacktrace:\n#0 0x56114de74e23 <unknown>\n#1 0x56114db9d5f6 <unknown>\n#2 0x56114dbdd1c2 <unknown>\n#3 0x56114dbd2599 <unknown>\n#4 0x56114dbfd012 <unknown>\n#5 0x56114dbd1fb6 <unknown>\n#6 0x56114dbfd1de <unknown>\n#7 0x56114dc15369 <unknown>\n#8 0x56114dbfcde3 <unknown>\n#9 0x56114dbd0a7b <unknown>\n#10 0x56114dbd181e <unknown>\n#11 0x56114de36638 <unknown>\n#12 0x56114de3a507 <unknown>\n#13 0x56114de44c4c <unknown>\n#14 0x56114de3b136 <unknown>\n#15 0x56114de099cf <unknown>\n#16 0x56114de5eb98 <unknown>\n#17 0x56114de5ed68 <unknown>\n#18 0x56114de6dcb3 <unknown>\n#19 0x7fd730191044 <unknown>","time":{"start":1693270922783,"stop":1693270922827,"duration":44}},{"uid":"4cfc1004fdf6f729","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/62//#testresult/4cfc1004fdf6f729","status":"broken","statusDetails":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: headless chrome=116.0.5845.96)\nStacktrace:\n#0 0x55e4cd3cde23 <unknown>\n#1 0x55e4cd0f65f6 <unknown>\n#2 0x55e4cd1361c2 <unknown>\n#3 0x55e4cd12b599 <unknown>\n#4 0x55e4cd156012 <unknown>\n#5 0x55e4cd12afb6 <unknown>\n#6 0x55e4cd1561de <unknown>\n#7 0x55e4cd16e369 <unknown>\n#8 0x55e4cd155de3 <unknown>\n#9 0x55e4cd129a7b <unknown>\n#10 0x55e4cd12a81e <unknown>\n#11 0x55e4cd38f638 <unknown>\n#12 0x55e4cd393507 <unknown>\n#13 0x55e4cd39dc4c <unknown>\n#14 0x55e4cd394136 <unknown>\n#15 0x55e4cd3629cf <unknown>\n#16 0x55e4cd3b7b98 <unknown>\n#17 0x55e4cd3b7d68 <unknown>\n#18 0x55e4cd3c6cb3 <unknown>\n#19 0x7fbb4dfce044 <unknown>","time":{"start":1693184541257,"stop":1693184541317,"duration":60}},{"uid":"5d303507583bf724","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/61//#testresult/5d303507583bf724","status":"passed","time":{"start":1693098271353,"stop":1693098271528,"duration":175}},{"uid":"52ed6b50678a7ece","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/60//#testresult/52ed6b50678a7ece","status":"passed","time":{"start":1693011601049,"stop":1693011601245,"duration":196}},{"uid":"61782bd625523feb","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/59//#testresult/61782bd625523feb","status":"passed","time":{"start":1692925330390,"stop":1692925330558,"duration":168}},{"uid":"21ceb4c9fe892591","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/58//#testresult/21ceb4c9fe892591","status":"passed","time":{"start":1692838812134,"stop":1692838812280,"duration":146}},{"uid":"6a4863c84dd04fa6","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/57//#testresult/6a4863c84dd04fa6","status":"passed","time":{"start":1692752460659,"stop":1692752460827,"duration":168}},{"uid":"324ee506674353ea","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/56//#testresult/324ee506674353ea","status":"passed","time":{"start":1692666076251,"stop":1692666076393,"duration":142}},{"uid":"7c98229f033e62ca","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/55//#testresult/7c98229f033e62ca","status":"passed","time":{"start":1692579612678,"stop":1692579612798,"duration":120}},{"uid":"dddb3cdc541fa6d3","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/54//#testresult/dddb3cdc541fa6d3","status":"passed","time":{"start":1692493386425,"stop":1692493386610,"duration":185}},{"uid":"9c422ff0676d3d5a","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/53//#testresult/9c422ff0676d3d5a","status":"passed","time":{"start":1692406729303,"stop":1692406729461,"duration":158}},{"uid":"f94b0e6faddd8aab","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/52//#testresult/f94b0e6faddd8aab","status":"passed","time":{"start":1692320445555,"stop":1692320445741,"duration":186}},{"uid":"ca5634723a80d82e","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/51//#testresult/ca5634723a80d82e","status":"passed","time":{"start":1692233977307,"stop":1692233977469,"duration":162}},{"uid":"1c9bc83be8890d27","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/50//#testresult/1c9bc83be8890d27","status":"passed","time":{"start":1692147663181,"stop":1692147663419,"duration":238}},{"uid":"99443895e7e71aa9","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/49//#testresult/99443895e7e71aa9","status":"passed","time":{"start":1692061231140,"stop":1692061231241,"duration":101}},{"uid":"26d5a5d7d09d58da","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/30//#testresult/26d5a5d7d09d58da","status":"passed","time":{"start":1691630040327,"stop":1691630040488,"duration":161}},{"uid":"3eed88d56da8046f","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/28//#testresult/3eed88d56da8046f","status":"passed","time":{"start":1691602199283,"stop":1691602199446,"duration":163}},{"uid":"88472a215bd705fe","reportUrl":"https://zaelcovsky.github.io/StroyremAutomation/27//#testresult/88472a215bd705fe","status":"passed","time":{"start":1691600703931,"stop":1691600704044,"duration":113}}]},"tags":["@pytest.mark.xfail(reason='Сломалось?')","smoke_test"]},"source":"d7cc2ce70e23df01.json","parameterValues":["'https://stroyrem-nn.ru/'"]}